# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
ci:
  autofix_prs: false
  skip: [fmt, clippy] # will be run by a separate CI
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-merge-conflict
      - id: debug-statements
  - repo: https://github.com/hadialqattan/pycln
    rev: v2.5.0
    hooks:
      - id: pycln
        args: [--config=pyproject.toml]
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.9.2
    hooks:
      # Run the linter.
      - id: ruff
        args: [ --fix ]
      # Sort imports
      - id: ruff
        args: [ --select, I, --fix ]
      # Run the formatter.
      - id: ruff-format
  - repo: https://github.com/PyCQA/docformatter
    rev: v1.7.5 # TODO: wait for https://github.com/PyCQA/docformatter/issues/293
    hooks:
      - id: docformatter
        additional_dependencies: [tomli]
        args: [--in-place, --config, ./pyproject.toml]
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.14.1
    hooks:
      - id: mypy
        additional_dependencies: [types-PyYAML]
        pass_filenames: false
        args: ["--ignore-missing-imports", "src/"]
  - repo: local
    hooks:
    - id: fmt
      name: cargo fmt
      description: Format Rust files with cargo fmt.
      entry: cargo fmt --
      language: system
      files: ^crates/.*\.rs$
      args: []
    - id: clippy
      name: cargo clippy
      description: Check Rust files with cargo clippy.
      entry: cargo clippy --all-targets --all-features -- -Dclippy::all
      pass_filenames: false
      types: [file, rust]
      language: system
  - repo: https://github.com/pre-commit/pre-commit
    rev: v4.0.1
    hooks:
      - id: validate_manifest
