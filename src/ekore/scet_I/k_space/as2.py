r"""SCET 1 nnlo kernel entries.

"""
import numba as nb
import numpy as np

from eko.constants import CF, zeta2, zeta3
from ...harmonics import cache as c





@nb.njit(cache=True)
def Agg20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = 16.86111111111111 - 99/(4.*np.power(-1 + n,3)) + 201/(4.*np.power(-1 + n,2)) + 63/(2.*np.power(n,4)) + 327/(8.*np.power(n,3)) + 937/(16.*np.power(n,2)) - 29.349156166471147/n + 45/np.power(1 + n,4) - 249/(8.*np.power(1 + n,3)) + 1351/(16.*np.power(1 + n,2)) + 33/(4.*np.power(2 + n,3)) + 215/(4.*np.power(2 + n,2)) - 165/(8.*np.power(3 + n,3)) + 825/(32.*np.power(3 + n,2)) + 75.11973727168703/np.power(4 + n,4) - 327.93971046698647/np.power(4 + n,3) + 489.8658778292528/np.power(4 + n,2) - 790.4536913761124/np.power(5 + n,4) + 906.1743071114438/np.power(5 + n,3) - 731.1896273676689/np.power(5 + n,2) + 320.7706707471764/np.power(6 + n,4) + 775.585407692871/np.power(6 + n,3) + 866.7481273153206/np.power(6 + n,2) + (238.9194899614054 - 0.7187584125804691*nf)/(5 + n) + (91.0344525497889 + 0.06959835991327973*nf)/(6 + n) - (41*nf)/54. + (17*nf)/(18.*np.power(-1 + n,3)) - (235*nf)/(108.*np.power(-1 + n,2)) - (5*nf)/(3.*np.power(n,4)) + (17*nf)/(12.*np.power(n,3)) - (61*nf)/(24.*np.power(n,2)) + (4.981889500151358*nf)/n - (5*nf)/(3.*np.power(1 + n,4)) + (31*nf)/(12.*np.power(1 + n,3)) - (13*nf)/(4.*np.power(1 + n,2)) - (4*nf)/(9.*np.power(2 + n,3)) + (5*nf)/(18.*np.power(2 + n,2)) + nf/(2.*np.power(3 + n,3)) - (247*nf)/(216.*np.power(3 + n,2)) + (0.05188597791606392*nf)/np.power(4 + n,4) + (0.18500946222330533*nf)/np.power(4 + n,3) - (0.48075977710297113*nf)/np.power(4 + n,2) + (1.1304591631668428*nf)/np.power(5 + n,4) + (0.3443730808411247*nf)/np.power(5 + n,3) + (1.7408117318945497*nf)/np.power(5 + n,2) - (0.17871955042920698*nf)/np.power(6 + n,4) - (0.44591765410290274*nf)/np.power(6 + n,3) - (0.5854839347981557*nf)/np.power(6 + n,2) + (-892.7765462248292 + 4.967170666760481*nf)/(4 + n) - (67*np.power(np.pi,2))/96. - (15*np.power(np.pi,2))/(4.*np.power(-1 + n,2)) + (9*np.power(np.pi,2))/(4.*np.power(n,2)) - (12*np.power(np.pi,2))/np.power(1 + n,2) - (15*np.power(np.pi,2))/(4.*np.power(3 + n,2)) + (5*nf*np.power(np.pi,2))/144. + (nf*np.power(np.pi,2))/(6.*np.power(n,2)) - (5*nf*np.power(np.pi,2))/(18.*n) + (nf*np.power(np.pi,2))/(6.*np.power(1 + n,2)) - (11*np.power(np.pi,4))/80. + (-2656.1846361137755 + 13.004950411872356*nf - (7*nf*np.power(np.pi,2))/54.)/(2 + n) + (2285.159409762382 - 14.193864160201342*nf + (5*nf*np.power(np.pi,2))/72.)/(3 + n) - (957.4913212153385*S1)/n + (5.0360604026719304*nf*S1)/n + (2798.17031768792*(1/(1 + n) + S1))/(1 + n) - (15.938321904510403*nf*(1/(1 + n) + S1))/(1 + n) - (2183.014017811476*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (22.221146077608847*nf*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (1794.9072797413023*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (7.947769036822255*nf*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (853.6048603446067*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (19.06077749915008*nf*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (596.5490079602517*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (1.4142094467758806*nf*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (696.429863570809*(np.power(S1,2)/2. + S2/2.))/n + (3.248573734966296*nf*(np.power(S1,2)/2. + S2/2.))/n + (16.75 - (5*nf)/6. - (9*np.power(np.pi,2))/4.)*(-(S1/n) + np.power(S1,2)/2. + S2/2.) - (3035.637132022108*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (10.911345647839301*nf*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (5411.123832618697*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (14.997551679700479*nf*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (2160.722395241362*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (4.59716254754814*nf*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (4801.597341431533*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (11.67698516839526*nf*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (391.291617977227*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.7549571459803536*nf*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (176.89773541521075*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (0.5230267409975893*nf*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - 2*(-4.125 + nf/4.)*(-0.5*np.power(S1,2)/n + np.power(S1,3)/6. - S2/(2.*n) + (S1*S2)/2. + S3/3.) + (210.00253110794813*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (2.6555253520083517*nf*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (836.4108709560046*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (5.391211881797062*nf*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (1508.7868305034372*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (2.774833944288212*nf*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (1946.2704453635947*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (5.470750943316969*nf*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (405.03205178858434*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) - (0.5627962717575428*nf*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) + 27*(-0.16666666666666666*np.power(S1,3)/n + np.power(S1,4)/24. - (S1*S2)/(2.*n) + (np.power(S1,2)*S2)/4. + np.power(S2,2)/8. - S3/(3.*n) + (S1*S3)/3. + S(4,n)/4.) - (33*zeta3)/8. + (nf*zeta3)/4. - (2*nf*zeta3)/(3.*n) - (-(1/n) + S1)*(-16.833333333333332 + (7*nf)/9. + (11*np.power(np.pi,2))/16. - (nf*np.power(np.pi,2))/24. + (99*zeta3)/4.) + (-100.25 + (455*nf)/162. + (11*np.power(np.pi,2))/16. - (17*nf*np.power(np.pi,2))/216. + 36*zeta3)/(-1 + n) + (976.3258434434753 - 6.952739586572729*nf + (nf*np.power(np.pi,2))/18. - (2*nf*zeta3)/3.)/(1 + n)
    return res



@nb.njit(cache=True)
def Agg21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = 16.833333333333332 - 9/np.power(-1 + n,3) + 99/(4.*np.power(-1 + n,2)) - 18/np.power(n,3) - 45/(2.*np.power(n,2)) - 34.08160990247799/n - 54/np.power(1 + n,3) + 99/(4.*np.power(1 + n,2)) - 9/np.power(3 + n,3) + 99/(4.*np.power(3 + n,2)) - 6.959090024543352/np.power(4 + n,4) + 31.316953909265823/np.power(4 + n,3) - 129.72126276003138/np.power(4 + n,2) - 316.61176078013756/np.power(5 + n,4) + 96.1184068916528/np.power(5 + n,3) - 654.8831560964019/np.power(5 + n,2) + 163.9946761397813/np.power(6 + n,4) + 313.3624782120564/np.power(6 + n,3) + 359.0418188870436/np.power(6 + n,2) + (-1337.6273882811697 - 4.494055935519254*nf)/(3 + n) + (-145.9640592388291 - 0.241465589995501*nf)/(5 + n) + (-54.23457261672672 - 0.05502440947592218*nf)/(6 + n) - (7*nf)/9. - (17*nf)/(18.*np.power(-1 + n,2)) + (4*nf)/(3.*np.power(n,3)) - nf/np.power(n,2) + (0.7500000000000284*nf)/n + (4*nf)/(3.*np.power(1 + n,3)) - (13*nf)/(6.*np.power(1 + n,2)) + (4*nf)/(9.*np.power(2 + n,2)) - nf/(2.*np.power(3 + n,2)) + (0.011275640927692523*nf)/np.power(4 + n,4) - (0.06468931095091934*nf)/np.power(4 + n,3) - (0.2799909715053025*nf)/np.power(4 + n,2) + (0.1898720429119991*nf)/np.power(5 + n,4) - (0.020034311566906212*nf)/np.power(5 + n,3) + (0.17777890986621123*nf)/np.power(5 + n,2) - (0.043565667449617394*nf)/np.power(6 + n,4) - (0.11212805286729775*nf)/np.power(6 + n,3) - (0.15807930699413783*nf)/np.power(6 + n,2) + (539.8396237029783 + 1.3459753921080742*nf)/(4 + n) + (1555.7729975239774 + 3.0194412078803183*nf)/(2 + n) - (11*np.power(np.pi,2))/16. + (nf*np.power(np.pi,2))/24. - (nf*np.power(np.pi,2))/(9.*n) + (-16.75 + (235*nf)/108. + (3*np.power(np.pi,2))/2.)/(-1 + n) + (-518.9660076919846 - 1.6408845017926574*nf - (nf*np.power(np.pi,2))/9.)/(1 + n) + (550.4770242673264*S1)/n + (2.1408845017040483*nf*S1)/n - (-16.75 + (5*nf)/6. + (9*np.power(np.pi,2))/4.)*(-(1/n) + S1) - (1609.5965772517004*(1/(1 + n) + S1))/(1 + n) - (6.161410970014396*nf*(1/(1 + n) + S1))/(1 + n) + (1196.2222768020379*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (6.989681660926549*nf*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) - (1196.7004235975921*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (1.9576914148918718*nf*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (702.1423904308235*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (5.0760908464004215*nf*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) + (392.7053093491044*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (0.35075576110765155*nf*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (492.74315777416973*(np.power(S1,2)/2. + S2/2.))/n + (0.4208329523824698*nf*(np.power(S1,2)/2. + S2/2.))/n + (8.25 - nf/2.)*(-(S1/n) + np.power(S1,2)/2. + S2/2.) + (2044.6883276518818*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (1.8685772552991469*nf*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (3375.4249360137287*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (3.2857436451256987*nf*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (1186.915553438676*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (1.221107178720968*nf*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (2839.576419871591*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (2.8540969274069123*nf*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (197.81889970310104*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.2050095935230768*nf*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (13.606906922105907*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.06739772448375828*nf*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + 27*(-0.5*np.power(S1,2)/n + np.power(S1,3)/6. - S2/(2.*n) + (S1*S2)/2. + S3/3.) + (376.9276566603408*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.15155940569821733*nf*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (1365.5990389768906*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (0.0650472766211539*nf*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (1285.4794674795335*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (0.39665120819282607*nf*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (1971.3002461896854*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (0.4305210192151828*nf*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (316.45751052850346*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) - (0.11533914681325617*nf*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) - (99*zeta3)/4.
    return res



@nb.njit(cache=True)
def Agg22(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    res = 8.375 - (387*(1/(-1 + n) - 1/n))/8. + 33/(8.*(-1 + n)) + 9*(-np.power(-1 + n,-2) + 2/np.power(n,2) - np.power(1 + n,-2)) + (177*(1/(-1 + n) - 2/n + 1/(1 + n)))/4. - 9*(-np.power(-1 + n,-2) + 3/np.power(n,2) - 3/np.power(1 + n,2) + np.power(2 + n,-2)) - (165*(1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n)))/8. - (5*nf)/12. + (19*(1/(-1 + n) - 1/n)*nf)/12. - nf/(4.*(-1 + n)) - (2*nf)/(3.*np.power(n,2)) - ((-np.power(n,-2) + np.power(1 + n,-2))*nf)/3. - (4*(1/(-1 + n) - 2/n + 1/(1 + n))*nf)/3. + (17*(1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n))*nf)/36. - (9*np.power(np.pi,2))/8. + (33*(-(1/n) + S1))/8. + (27*(-(1/n) + S1))/(2.*(-1 + n)) - (nf*(-(1/n) + S1))/4. + (81*(S1/n - (-(1/n) + S1)/(-1 + n)))/2. - 27*((2*S1)/n - (-(1/n) + S1)/(-1 + n) - (1/(1 + n) + S1)/(1 + n)) + (27*((3*S1)/n - (-(1/n) + S1)/(-1 + n) - (3*(1/(1 + n) + S1))/(1 + n) + ((3 + 2*n)/((1 + n)*(2 + n)) + S1)/(2 + n)))/2. + (27*(-(S1/n) + np.power(S1,2)/2. + S2/2.))/2. - 9*((-1 + 2*n - 2*np.power(n,2))/(np.power(-1 + n,2)*np.power(n,2)) - np.power(np.pi,2)/6. + S2)
    return res



@nb.njit(cache=True)
def Agg23(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    res = 1.375 - (27*(1/(-1 + n) - 1/n))/2. + 9/(2.*(-1 + n)) + 9*(1/(-1 + n) - 2/n + 1/(1 + n)) - (9*(1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n)))/2. - nf/12. + (9*(-(1/n) + S1))/2.
    return res



@nb.njit(cache=True)
def Agg24(n, nf, cache):
    res = 1.125
    return res



@nb.njit(cache=True)
def Agq20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -31/(3.*np.power(-1 + n,3)) + 41/(2.*np.power(-1 + n,2)) + 106/(9.*np.power(n,4)) + 218/(9.*np.power(n,3)) + 275/(18.*np.power(n,2)) + 3.9571005767767033/n + 55/(9.*np.power(1 + n,4)) + 109/(18.*np.power(1 + n,3)) + 235/(18.*np.power(1 + n,2)) + 2/(27.*np.power(2 + n,3)) + 11/(2.*np.power(2 + n,2)) - 17/(27.*np.power(3 + n,3)) - 133/(648.*np.power(3 + n,2)) + 0.8223698702784716/np.power(4 + n,4) - 5.553806921999574/np.power(4 + n,3) + 8.366771900574946/np.power(4 + n,2) - 10.949382219584912/np.power(5 + n,4) + 13.849432222845577/np.power(5 + n,3) - 11.204433049821336/np.power(5 + n,2) + 4.893356281716537/np.power(6 + n,4) + 11.549634451584822/np.power(6 + n,3) + 12.475711611014834/np.power(6 + n,2) + (6.388313909027405 - 0.134021867309814*nf)/(5 + n) + (1.359582492100278 - 0.06271239231491248*nf)/(6 + n) + (-30.731748568486335 + 0.4736664950001651*nf)/(4 + n) + (4*nf)/(9.*np.power(-1 + n,3)) - (20*nf)/(27.*np.power(-1 + n,2)) - (4*nf)/(9.*np.power(n,3)) + (20*nf)/(27.*np.power(n,2)) - (1.4176103655531436*nf)/n + (2*nf)/(9.*np.power(1 + n,3)) - (10*nf)/(27.*np.power(1 + n,2)) - (0.004644855507486117*nf)/np.power(4 + n,4) + (0.02752704333289802*nf)/np.power(4 + n,3) - (0.09517404464347873*nf)/np.power(4 + n,2) - (0.07255605248969821*nf)/np.power(5 + n,4) - (0.03179629006284005*nf)/np.power(5 + n,3) - (0.20919521412223563*nf)/np.power(5 + n,2) + (0.013862164596313922*nf)/np.power(6 + n,4) + (0.02517890833768235*nf)/np.power(6 + n,3) + (0.0212374019159726*nf)/np.power(6 + n,2) - (35*np.power(np.pi,2))/(27.*np.power(-1 + n,2)) + (23*np.power(np.pi,2))/(27.*np.power(n,2)) - (34*np.power(np.pi,2))/(27.*np.power(1 + n,2)) + (2*nf*np.power(np.pi,2))/(27.*n) + (45.1926665533455 + 0.762659604639619*nf - (5*nf*np.power(np.pi,2))/27.)/(1 + n) + (69.23881799080559 - 0.8795772240770414*nf - (nf*np.power(np.pi,2))/27.)/(3 + n) + (-70.31617353640735 + 0.5439611002122565*nf + (4*nf*np.power(np.pi,2))/27.)/(2 + n) - (33.12620941527203*S1)/n + (1.112012896833687*nf*S1)/n + (65.56287458498312*(1/(1 + n) + S1))/(1 + n) - (1.9018156986716952*nf*(1/(1 + n) + S1))/(1 + n) - (8.644527254534509*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (1.3405078700407942*nf*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (79.57601966082686*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (0.21651223044957663*nf*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (81.67970586795522*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (0.1011287567994526*nf*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (22.8341684335303*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (0.06323221534253937*nf*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (53.33789727658772*(np.power(S1,2)/2. + S2/2.))/n - (0.8514951640659054*nf*(np.power(S1,2)/2. + S2/2.))/n - (209.38938481508063*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (2.0144131547924555*nf*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (343.35224129840924*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (2.2005831896264394*nf*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (112.89899341228728*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (0.3699829026393649*nf*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (278.9327211039544*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (1.2524445030058606*nf*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (18.211470512693634*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) + (0.044092487422282514*nf*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (42.35673152829946*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.1536011983541577*nf*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (84.9840789038495*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.6928663157980264*nf*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (47.238518782072774*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (1.2366573944297772*nf*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (44.361657515641326*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (0.4710596322174849*nf*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (31.732712904995193*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (1.0887862720427495*nf*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (13.46221764856785*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) + (0.07966563716064384*nf*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) + (-37.9537037037037 + (56*nf)/81. - (19*np.power(np.pi,2))/36. + (nf*np.power(np.pi,2))/27. + 16*zeta3)/(-1 + n)
    return res



@nb.njit(cache=True)
def Agq21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -4/np.power(-1 + n,3) + 31/(3.*np.power(-1 + n,2)) - 56/(9.*np.power(n,3)) - 136/(9.*np.power(n,2)) - 2.5845323553137938/n - 62/(9.*np.power(1 + n,3)) - 53/(9.*np.power(1 + n,2)) + 16/(27.*np.power(2 + n,2)) + 26/(27.*np.power(3 + n,2)) - 0.14933365678240723/np.power(4 + n,4) + 0.9647209308996265/np.power(4 + n,3) - 1.982113627904677/np.power(4 + n,2) - 4.384606883281288/np.power(5 + n,4) + 0.36359029018821026/np.power(5 + n,3) - 9.467016995505801/np.power(5 + n,2) + 2.211128073305879/np.power(6 + n,4) + 4.231801095479696/np.power(6 + n,3) + 5.088080180162337/np.power(6 + n,2) + (10.277957980256247 - 0.12859726389884807*nf)/(2 + n) + (3.170265036181056 - 0.09384997386592911*nf)/(4 + n) + (-0.6181579611503486 - 0.014540356149953873*nf)/(6 + n) + (-1.3016152241058507 + 0.007082899233404929*nf)/(5 + n) + (-11.512424159396804 + 0.19850336286089515*nf)/(3 + n) + (1.9179438020673558 + 0.40177170219080016*nf)/(1 + n) - (4*nf)/(9.*np.power(-1 + n,2)) + (4*nf)/(9.*np.power(n,2)) - (0.7407407407407416*nf)/n - (2*nf)/(9.*np.power(1 + n,2)) - (0.0008863218377414114*nf)/np.power(4 + n,4) + (0.005097260396606985*nf)/np.power(4 + n,3) - (0.017265120383839497*nf)/np.power(4 + n,2) - (0.012118814258166404*nf)/np.power(5 + n,4) - (0.005454377177093399*nf)/np.power(5 + n,3) - (0.03901864982081938*nf)/np.power(5 + n,2) + (0.0012055454368091521*nf)/np.power(6 + n,4) + (0.0017644538166461156*nf)/np.power(6 + n,3) - (0.0012268733773057319*nf)/np.power(6 + n,2) + (-5.611111111111111 + (20*nf)/27. + (8*np.power(np.pi,2))/27.)/(-1 + n) - (0.5459413560733313*S1)/n - (0.03140133181504437*nf*S1)/n + (7.587265449211114*(1/(1 + n) + S1))/(1 + n) + (0.1460549984559635*nf*(1/(1 + n) + S1))/(1 + n) - (30.001169125420553*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) - (0.2695284562563078*nf*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) - (34.827837457006034*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (0.11116535834688081*nf*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (50.60599490839494*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) + (0.246268696183586*nf*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) + (8.515020914227193*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (0.019771451778683467*nf*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (44.740062385880165*(np.power(S1,2)/2. + S2/2.))/n - (0.003514147373606059*nf*(np.power(S1,2)/2. + S2/2.))/n + (120.24209639626389*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (0.022049693029882415*nf*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (151.08967480822122*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (0.05324005464746588*nf*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (35.322077931643875*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (0.03603483030742922*nf*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (100.99484768365971*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (0.06256347949916376*nf*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (5.025982156932755*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) + (0.008175859799454994*nf*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (5.609244884938891*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.004785442284985393*nf*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (29.321403901051205*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.023673044154066444*nf*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (61.16631983010827*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (0.04681036563897463*nf*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (33.06640155599856*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (0.02282837795917319*nf*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (63.66298493340651*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (0.04624725484237912*nf*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (6.857577436588011*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) + (0.00450388688668764*nf*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Agq22(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    res = 6*(-np.power(-1 + n,-2) + np.power(n,-2)) - (83*(1/(-1 + n) - 1/n))/9. + 61/(9.*np.power(-1 + n,2)) - 1/(2.*(-1 + n)) - (29*(-np.power(-1 + n,-2) + 2/np.power(n,2) - np.power(1 + n,-2)))/9. + (14*(1/(-1 + n) - 2/n + 1/(1 + n)))/9. - (2*(1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n)))/3. + nf/(9.*(-1 + n)) + ((1/(-1 + n) - 2/n + 1/(1 + n))*nf)/9. - (22*(-(1/n) + S1))/(9.*(-1 + n)) + (22*((2*S1)/n - (-(1/n) + S1)/(-1 + n) - (1/(1 + n) + S1)/(1 + n)))/9.
    return res



@nb.njit(cache=True)
def Agq23(n, nf, cache):
    res = -2/(-1 + n) + 2/n - 1/(1 + n)
    return res



@nb.njit(cache=True)
def Agq24(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def Aqg20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -43/(24.*np.power(n,4)) - 131/(48.*np.power(n,3)) - 131/(48.*np.power(n,2)) + 1.1911888331830194/n - 65/(12.*np.power(1 + n,4)) + 11/(4.*np.power(1 + n,3)) - 35/(6.*np.power(1 + n,2)) + 10.4053926591844/(1 + n) + np.power(2 + n,-4) - 93/(8.*np.power(2 + n,3)) - 133/(16.*np.power(2 + n,2)) - 25.265257982477284/(2 + n) - 2/(3.*np.power(3 + n,3)) + 259/(216.*np.power(3 + n,2)) + 22.97169476938314/(3 + n) + 0.4356820271802718/np.power(4 + n,4) - 3.648167146799966/np.power(4 + n,3) + 4.666958361067362/np.power(4 + n,2) - 15.820612873505851/(4 + n) - 7.1928985308380415/np.power(5 + n,4) + 7.53926563139814/np.power(5 + n,3) - 8.133967097702559/np.power(5 + n,2) + 3.444952575663905/(5 + n) + 2.7973273410525477/np.power(6 + n,4) + 6.933209170846717/np.power(6 + n,3) + 7.7669270528116305/np.power(6 + n,2) + 0.8562998184468253/(6 + n) - (13*np.power(np.pi,2))/(144.*np.power(n,2)) + (29*np.power(np.pi,2))/(36.*np.power(1 + n,2)) - (23*np.power(np.pi,2))/(36.*np.power(2 + n,2)) + (1.4444444444444444 + np.power(np.pi,2)/24.)/(-1 + n) - (10.89551676742556*S1)/n + (33.91512411485418*(1/(1 + n) + S1))/(1 + n) - (32.378345212125026*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (6.620037270621037*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (6.441410088535398*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (3.567742461035917*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (7.6259459441578015*(np.power(S1,2)/2. + S2/2.))/n - (30.5656098627976*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (53.554742347589425*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (17.361870636087808*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (45.48836064089401*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (2.738588424143426*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (1.9793278380704296*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (1.798659292989602*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (7.6689995392226145*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (13.748022057194886*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (18.839009328234496*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (3.6056770564355105*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Aqg21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -13/(12.*(-1 + n)) + 7/(6.*np.power(n,3)) + 5/(4.*np.power(n,2)) + 1.2533223444746522/n + 31/(6.*np.power(1 + n,3)) - 4/(3.*np.power(1 + n,2)) - 9.031235230715703/(1 + n) - 4/(3.*np.power(2 + n,3)) + 187/(24.*np.power(2 + n,2)) + 15.59250486448689/(2 + n) + 8/(9.*np.power(3 + n,2)) - 6.751578556990447/(3 + n) - 0.027929527280142082/np.power(4 + n,4) + 0.23338391067360553/np.power(4 + n,3) + 0.258640725494089/np.power(4 + n,2) - 0.13219179925426255/(4 + n) - 1.9121251865638547/np.power(5 + n,4) + 0.7183060788586074/np.power(5 + n,3) - 3.625926729243089/np.power(5 + n,2) + 0.27384591274603937/(5 + n) + 1.1071257185432037/np.power(6 + n,4) + 2.188753500072866/np.power(6 + n,3) + 2.6088729631688365/np.power(6 + n,2) + 0.25216076260294745/(6 + n) + (2.589788341299843*S1)/n - (4.805726932211193*(1/(1 + n) + S1))/(1 + n) + (1.7872567498248921*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) - (8.820553422050553*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (6.449707930794049*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) + (2.5495273323429615*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (3.201963174657092*(np.power(S1,2)/2. + S2/2.))/n + (10.902815064311243*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (17.462853189309797*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (6.112153339962495*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (13.324634261966189*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (1.1328537109852865*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.3849560009944391*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (3.291205854414084*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (9.2864975060617*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (7.304185697789013*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (11.961817401644986*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (1.722615948786082*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Aqg22(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    res = (41*(1/(-1 + n) - 1/n))/12. - 1/(8.*(-1 + n)) - 35/(24.*np.power(n,2)) - (2*(-np.power(n,-2) + np.power(1 + n,-2)))/3. - (93*(1/(-1 + n) - 2/n + 1/(1 + n)))/16. - (2*(-np.power(n,-2) + 2/np.power(1 + n,2) - np.power(2 + n,-2)))/3. + (133*(1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n)))/48. - (17*S1)/(24.*n) - (17*(-(S1/n) + (1/(1 + n) + S1)/(1 + n)))/12. + (17*(-(S1/n) + (2*(1/(1 + n) + S1))/(1 + n) - ((3 + 2*n)/((1 + n)*(2 + n)) + S1)/(2 + n)))/12.
    return res



@nb.njit(cache=True)
def Aqg23(n, nf, cache):
    res = -0.16666666666666666*1/n + (1/n - 1/(1 + n))/3. + (-(1/n) + 2/(1 + n) - 1/(2 + n))/3.
    return res



@nb.njit(cache=True)
def Aqg24(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def Aqq20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -5/(6.*np.power(n,4)) - 13/(12.*np.power(n,3)) - 3/(2.*np.power(n,2)) - 0.7986297731997045/n - 5/(6.*np.power(1 + n,4)) - 13/(12.*np.power(1 + n,3)) - 1/(3.*np.power(1 + n,2)) + 1.0506711812659297/(1 + n) - 10/(9.*np.power(2 + n,3)) - 49/(27.*np.power(2 + n,2)) - 0.9163222241223545/(2 + n) + 2/(27.*np.power(3 + n,2)) - 0.2806436951458962/(3 + n) + 0.0014735182662902581/np.power(4 + n,4) - 0.009193655123305253/np.power(4 + n,3) + 0.055511612427147146/np.power(4 + n,2) + 0.09590718130594521/(4 + n) + 0.027588702894167733/np.power(5 + n,4) + 0.012667915026022089/np.power(5 + n,3) + 0.07943507877302992/np.power(5 + n,2) + 0.004407924616075398/(5 + n) - 0.007753800373369394/np.power(6 + n,4) - 0.014409903008843377/np.power(6 + n,3) - 0.01668441874933692/np.power(6 + n,2) + 0.019863644765988633/(6 + n) + np.power(np.pi,2)/(12.*np.power(n,2)) + np.power(np.pi,2)/(12.*np.power(1 + n,2)) + (0.6419753086419753 + np.power(np.pi,2)/54.)/(-1 + n) + (0.13983274560630196*S1)/n - (0.41275820879534736*(1/(1 + n) + S1))/(1 + n) + (0.8051014673999592*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (0.3773965825982953*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (0.8370826054908135*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (0.07248998131839572*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (0.49726721324576617*(np.power(S1,2)/2. + S2/2.))/n - (1.3737737224272497*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (1.6829683740128463*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (0.35105687464036983*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (1.1122682532660377*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (0.04525048620569524*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) + (0.10801897174901916*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.49084933211928516*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.8840516588729128*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (0.34564489589974434*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (0.787248701393219*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (0.059617493009172226*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Aqq21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -13/(27.*(-1 + n)) + 2/(3.*np.power(n,3)) + 1/(3.*np.power(n,2)) + 0.28502197771725984/n + 2/(3.*np.power(1 + n,3)) + np.power(1 + n,-2) - 1.3367058144318702/(1 + n) + 2/(3.*np.power(2 + n,2)) + 2.1906260706515757/(2 + n) - 1.0146549160375362/(3 + n) + 0.0008287014639471657/np.power(4 + n,4) - 0.004669402119497261/np.power(4 + n,3) + 0.015584039956958031/np.power(4 + n,2) + 0.3970774550559096/(4 + n) + 0.009974093945678364/np.power(5 + n,4) + 0.005829363347210827/np.power(5 + n,3) + 0.03288843984284437/np.power(5 + n,2) - 0.05168203279717121/(5 + n) - 0.0007839412569760368/np.power(6 + n,4) - 0.0012427255994616627/np.power(6 + n,3) + 0.0009493512253215492/np.power(6 + n,2) + 0.011798741323319263/(6 + n) + (0.45506112547578514*S1)/n - (1.2340398935538648*(1/(1 + n) + S1))/(1 + n) + (1.5405378426172631*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (0.4085445948909813*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (1.1013187546197853*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (0.06878491481037952*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (0.07621097625638995*(np.power(S1,2)/2. + S2/2.))/n - (0.3417710652584133*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (0.6078137269535574*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (0.23243730263921492*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (0.5349245518740918*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (0.03976638871665715*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.011098590750917119*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (0.026539607868124548*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.0044455027231418*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (0.05917450985066498*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (0.0615882478690015*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (0.017472781822012725*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Aqq22(n, nf, cache):
    res = (5*(1/(-1 + n) - 1/n))/12. - 1/(3.*np.power(n,2)) + (np.power(n,-2) - np.power(1 + n,-2))/6. - (5*(1/(-1 + n) - 2/n + 1/(1 + n)))/12. + (1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n))/9.
    return res



@nb.njit(cache=True)
def Aqq23(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def Aqq24(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def AqQ20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -5/(6.*np.power(n,4)) - 13/(12.*np.power(n,3)) - 3/(2.*np.power(n,2)) - 0.7986297731997045/n - 5/(6.*np.power(1 + n,4)) - 13/(12.*np.power(1 + n,3)) - 1/(3.*np.power(1 + n,2)) + 1.0506711812659297/(1 + n) - 10/(9.*np.power(2 + n,3)) - 49/(27.*np.power(2 + n,2)) - 0.9163222241223545/(2 + n) + 2/(27.*np.power(3 + n,2)) - 0.2806436951458962/(3 + n) + 0.0014735182662902581/np.power(4 + n,4) - 0.009193655123305253/np.power(4 + n,3) + 0.055511612427147146/np.power(4 + n,2) + 0.09590718130594521/(4 + n) + 0.027588702894167733/np.power(5 + n,4) + 0.012667915026022089/np.power(5 + n,3) + 0.07943507877302992/np.power(5 + n,2) + 0.004407924616075398/(5 + n) - 0.007753800373369394/np.power(6 + n,4) - 0.014409903008843377/np.power(6 + n,3) - 0.01668441874933692/np.power(6 + n,2) + 0.019863644765988633/(6 + n) + np.power(np.pi,2)/(12.*np.power(n,2)) + np.power(np.pi,2)/(12.*np.power(1 + n,2)) + (0.6419753086419753 + np.power(np.pi,2)/54.)/(-1 + n) + (0.13983274560630196*S1)/n - (0.41275820879534736*(1/(1 + n) + S1))/(1 + n) + (0.8051014673999592*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (0.3773965825982953*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (0.8370826054908135*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (0.07248998131839572*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (0.49726721324576617*(np.power(S1,2)/2. + S2/2.))/n - (1.3737737224272497*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (1.6829683740128463*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (0.35105687464036983*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (1.1122682532660377*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (0.04525048620569524*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) + (0.10801897174901916*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.49084933211928516*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.8840516588729128*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (0.34564489589974434*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (0.787248701393219*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (0.059617493009172226*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def AqQ21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -13/(27.*(-1 + n)) + 2/(3.*np.power(n,3)) + 1/(3.*np.power(n,2)) + 0.28502197771725984/n + 2/(3.*np.power(1 + n,3)) + np.power(1 + n,-2) - 1.3367058144318702/(1 + n) + 2/(3.*np.power(2 + n,2)) + 2.1906260706515757/(2 + n) - 1.0146549160375362/(3 + n) + 0.0008287014639471657/np.power(4 + n,4) - 0.004669402119497261/np.power(4 + n,3) + 0.015584039956958031/np.power(4 + n,2) + 0.3970774550559096/(4 + n) + 0.009974093945678364/np.power(5 + n,4) + 0.005829363347210827/np.power(5 + n,3) + 0.03288843984284437/np.power(5 + n,2) - 0.05168203279717121/(5 + n) - 0.0007839412569760368/np.power(6 + n,4) - 0.0012427255994616627/np.power(6 + n,3) + 0.0009493512253215492/np.power(6 + n,2) + 0.011798741323319263/(6 + n) + (0.45506112547578514*S1)/n - (1.2340398935538648*(1/(1 + n) + S1))/(1 + n) + (1.5405378426172631*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (0.4085445948909813*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (1.1013187546197853*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (0.06878491481037952*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (0.07621097625638995*(np.power(S1,2)/2. + S2/2.))/n - (0.3417710652584133*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (0.6078137269535574*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (0.23243730263921492*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (0.5349245518740918*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (0.03976638871665715*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.011098590750917119*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (0.026539607868124548*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.0044455027231418*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (0.05917450985066498*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (0.0615882478690015*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (0.017472781822012725*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def AqQ22(n, nf, cache):
    res = (5*(1/(-1 + n) - 1/n))/12. - 1/(3.*np.power(n,2)) + (np.power(n,-2) - np.power(1 + n,-2))/6. - (5*(1/(-1 + n) - 2/n + 1/(1 + n)))/12. + (1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n))/9.
    return res



@nb.njit(cache=True)
def AqQ23(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def AqQ24(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def Aqqbar20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -np.power(n,-4) - 13/(12.*np.power(n,3)) - 17/(12.*np.power(n,2)) - 1.6405863611479914/n - 2/(3.*np.power(1 + n,4)) - 47/(36.*np.power(1 + n,3)) - 5/(36.*np.power(1 + n,2)) - 41.84428043405812/(1 + n) - 1/(3.*np.power(2 + n,4)) - 4/(9.*np.power(2 + n,3)) - 46/(27.*np.power(2 + n,2)) + 124.8879649874922/(2 + n) + 1/(3.*np.power(3 + n,4)) - 34/(27.*np.power(3 + n,3)) - 17/(81.*np.power(3 + n,2)) - 108.15988111676036/(3 + n) - 3.3671815998344403/np.power(4 + n,4) + 13.391781022848413/np.power(4 + n,3) - 24.88612174609606/np.power(4 + n,2) + 43.320673991234436/(4 + n) + 38.82696747282567/np.power(5 + n,4) - 47.521461097945725/np.power(5 + n,3) + 34.896326249104874/np.power(5 + n,2) - 12.31342113415528/(5 + n) - 16.295842720740655/np.power(6 + n,4) - 39.41640398123984/np.power(6 + n,3) - 44.209301659903545/np.power(6 + n,2) - 5.075215693136372/(6 + n) + (13*np.power(np.pi,2))/(108.*np.power(n,2)) + (5*np.power(np.pi,2))/(108.*np.power(1 + n,2)) + (2*np.power(np.pi,2))/(27.*np.power(2 + n,2)) - (2*np.power(np.pi,2))/(27.*np.power(3 + n,2)) + (0.6419753086419753 + np.power(np.pi,2)/54.)/(-1 + n) + (44.57561526466048*S1)/n - (135.11537460395684*(1/(1 + n) + S1))/(1 + n) + (110.70254327349599*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) - (81.01447137459289*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (33.32846515664826*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) + (27.523222283744982*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (29.983645015907463*(np.power(S1,2)/2. + S2/2.))/n + (134.45773874322774*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (240.78766391548692*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (97.6224237059175*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (216.11967611283566*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (17.8163177812485*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) + (4.964549940635965*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.13076210403699662*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (48.55663315700859*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (72.24774719378223*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (96.80897268888805*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (19.161619825303777*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Aqqbar21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -13/(27.*(-1 + n)) + 7/(9.*np.power(n,3)) + 2/(9.*np.power(n,2)) + 0.3244737480686852/n + 5/(9.*np.power(1 + n,3)) + 10/(9.*np.power(1 + n,2)) + 27.517693356274/(1 + n) + 2/(9.*np.power(2 + n,3)) + 1/(3.*np.power(2 + n,2)) - 81.92374015629414/(2 + n) - 2/(9.*np.power(3 + n,3)) + 17/(27.*np.power(3 + n,2)) + 72.114705314166/(3 + n) + 0.278832021511065/np.power(4 + n,4) - 1.8302170896235186/np.power(4 + n,3) + 7.56035067872129/np.power(4 + n,2) - 28.03618617637825/(4 + n) + 14.341632491127871/np.power(5 + n,4) - 5.1297691788810305/np.power(5 + n,3) + 30.955804756584733/np.power(5 + n,2) + 7.618474975959847/(5 + n) - 7.93710316431972/np.power(6 + n,4) - 15.00474989431131/np.power(6 + n,3) - 17.005981974415636/np.power(6 + n,2) + 2.8660604196926687/(6 + n) - (28.216567596518903*S1)/n + (86.62327420555926*(1/(1 + n) + S1))/(1 + n) - (71.71933800919118*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (53.412999002450206*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (21.74928857392622*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (18.35107902837314*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (19.975309522943995*(np.power(S1,2)/2. + S2/2.))/n - (86.90418147351276*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (150.01911201728237*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (54.453527107905*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (128.38534244021054*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (9.15842473440808*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.12928413519702175*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (14.833263126573382*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (60.32381411030171*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (60.36607529036273*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (90.67902221949461*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (15.04831991939943*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Aqqbar22(n, nf, cache):
    res = (5*(1/(-1 + n) - 1/n))/12. - 1/(3.*np.power(n,2)) + (np.power(n,-2) - np.power(1 + n,-2))/6. - (5*(1/(-1 + n) - 2/n + 1/(1 + n)))/12. + (1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n))/9.
    return res



@nb.njit(cache=True)
def Aqqbar23(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def Aqqbar24(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def AqQbar20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -np.power(n,-4) - 13/(12.*np.power(n,3)) - 17/(12.*np.power(n,2)) - 1.6405863611479914/n - 2/(3.*np.power(1 + n,4)) - 47/(36.*np.power(1 + n,3)) - 5/(36.*np.power(1 + n,2)) - 41.84428043405812/(1 + n) - 1/(3.*np.power(2 + n,4)) - 4/(9.*np.power(2 + n,3)) - 46/(27.*np.power(2 + n,2)) + 124.8879649874922/(2 + n) + 1/(3.*np.power(3 + n,4)) - 34/(27.*np.power(3 + n,3)) - 17/(81.*np.power(3 + n,2)) - 108.15988111676036/(3 + n) - 3.3671815998344403/np.power(4 + n,4) + 13.391781022848413/np.power(4 + n,3) - 24.88612174609606/np.power(4 + n,2) + 43.320673991234436/(4 + n) + 38.82696747282567/np.power(5 + n,4) - 47.521461097945725/np.power(5 + n,3) + 34.896326249104874/np.power(5 + n,2) - 12.31342113415528/(5 + n) - 16.295842720740655/np.power(6 + n,4) - 39.41640398123984/np.power(6 + n,3) - 44.209301659903545/np.power(6 + n,2) - 5.075215693136372/(6 + n) + (13*np.power(np.pi,2))/(108.*np.power(n,2)) + (5*np.power(np.pi,2))/(108.*np.power(1 + n,2)) + (2*np.power(np.pi,2))/(27.*np.power(2 + n,2)) - (2*np.power(np.pi,2))/(27.*np.power(3 + n,2)) + (0.6419753086419753 + np.power(np.pi,2)/54.)/(-1 + n) + (44.57561526466048*S1)/n - (135.11537460395684*(1/(1 + n) + S1))/(1 + n) + (110.70254327349599*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) - (81.01447137459289*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (33.32846515664826*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) + (27.523222283744982*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (29.983645015907463*(np.power(S1,2)/2. + S2/2.))/n + (134.45773874322774*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (240.78766391548692*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (97.6224237059175*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (216.11967611283566*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (17.8163177812485*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) + (4.964549940635965*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.13076210403699662*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (48.55663315700859*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (72.24774719378223*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (96.80897268888805*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (19.161619825303777*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def AqQbar21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -13/(27.*(-1 + n)) + 7/(9.*np.power(n,3)) + 2/(9.*np.power(n,2)) + 0.3244737480686852/n + 5/(9.*np.power(1 + n,3)) + 10/(9.*np.power(1 + n,2)) + 27.517693356274/(1 + n) + 2/(9.*np.power(2 + n,3)) + 1/(3.*np.power(2 + n,2)) - 81.92374015629414/(2 + n) - 2/(9.*np.power(3 + n,3)) + 17/(27.*np.power(3 + n,2)) + 72.114705314166/(3 + n) + 0.278832021511065/np.power(4 + n,4) - 1.8302170896235186/np.power(4 + n,3) + 7.56035067872129/np.power(4 + n,2) - 28.03618617637825/(4 + n) + 14.341632491127871/np.power(5 + n,4) - 5.1297691788810305/np.power(5 + n,3) + 30.955804756584733/np.power(5 + n,2) + 7.618474975959847/(5 + n) - 7.93710316431972/np.power(6 + n,4) - 15.00474989431131/np.power(6 + n,3) - 17.005981974415636/np.power(6 + n,2) + 2.8660604196926687/(6 + n) - (28.216567596518903*S1)/n + (86.62327420555926*(1/(1 + n) + S1))/(1 + n) - (71.71933800919118*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (53.412999002450206*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (21.74928857392622*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (18.35107902837314*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (19.975309522943995*(np.power(S1,2)/2. + S2/2.))/n - (86.90418147351276*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (150.01911201728237*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (54.453527107905*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (128.38534244021054*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (9.15842473440808*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.12928413519702175*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (14.833263126573382*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (60.32381411030171*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (60.36607529036273*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (90.67902221949461*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (15.04831991939943*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def AqQbar22(n, nf, cache):
    res = (5*(1/(-1 + n) - 1/n))/12. - 1/(3.*np.power(n,2)) + (np.power(n,-2) - np.power(1 + n,-2))/6. - (5*(1/(-1 + n) - 2/n + 1/(1 + n)))/12. + (1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n))/9.
    return res



@nb.njit(cache=True)
def AqQbar23(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def AqQbar24(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def Agg20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    S4 = c.get(c.S4, cache, n)
    res = 16.86111111111111 - 99/(4.*np.power(-1 + n,3)) + 201/(4.*np.power(-1 + n,2)) + 63/(2.*np.power(n,4)) + 327/(8.*np.power(n,3)) + 937/(16.*np.power(n,2)) - 29.349156166471147/n + 45/np.power(1 + n,4) - 249/(8.*np.power(1 + n,3)) + 1351/(16.*np.power(1 + n,2)) + 33/(4.*np.power(2 + n,3)) + 215/(4.*np.power(2 + n,2)) - 165/(8.*np.power(3 + n,3)) + 825/(32.*np.power(3 + n,2)) + 75.11973727168703/np.power(4 + n,4) - 327.93971046698647/np.power(4 + n,3) + 489.8658778292528/np.power(4 + n,2) - 790.4536913761124/np.power(5 + n,4) + 906.1743071114438/np.power(5 + n,3) - 731.1896273676689/np.power(5 + n,2) + 320.7706707471764/np.power(6 + n,4) + 775.585407692871/np.power(6 + n,3) + 866.7481273153206/np.power(6 + n,2) + (238.9194899614054 - 0.7187584125804691*nf)/(5 + n) + (91.0344525497889 + 0.06959835991327973*nf)/(6 + n) - (41*nf)/54. + (17*nf)/(18.*np.power(-1 + n,3)) - (235*nf)/(108.*np.power(-1 + n,2)) - (5*nf)/(3.*np.power(n,4)) + (17*nf)/(12.*np.power(n,3)) - (61*nf)/(24.*np.power(n,2)) + (4.981889500151358*nf)/n - (5*nf)/(3.*np.power(1 + n,4)) + (31*nf)/(12.*np.power(1 + n,3)) - (13*nf)/(4.*np.power(1 + n,2)) - (4*nf)/(9.*np.power(2 + n,3)) + (5*nf)/(18.*np.power(2 + n,2)) + nf/(2.*np.power(3 + n,3)) - (247*nf)/(216.*np.power(3 + n,2)) + (0.05188597791606392*nf)/np.power(4 + n,4) + (0.18500946222330533*nf)/np.power(4 + n,3) - (0.48075977710297113*nf)/np.power(4 + n,2) + (1.1304591631668428*nf)/np.power(5 + n,4) + (0.3443730808411247*nf)/np.power(5 + n,3) + (1.7408117318945497*nf)/np.power(5 + n,2) - (0.17871955042920698*nf)/np.power(6 + n,4) - (0.44591765410290274*nf)/np.power(6 + n,3) - (0.5854839347981557*nf)/np.power(6 + n,2) + (-892.7765462248292 + 4.967170666760481*nf)/(4 + n) - (67*np.power(np.pi,2))/96. - (15*np.power(np.pi,2))/(4.*np.power(-1 + n,2)) + (9*np.power(np.pi,2))/(4.*np.power(n,2)) - (12*np.power(np.pi,2))/np.power(1 + n,2) - (15*np.power(np.pi,2))/(4.*np.power(3 + n,2)) + (5*nf*np.power(np.pi,2))/144. + (nf*np.power(np.pi,2))/(6.*np.power(n,2)) - (5*nf*np.power(np.pi,2))/(18.*n) + (nf*np.power(np.pi,2))/(6.*np.power(1 + n,2)) - (11*np.power(np.pi,4))/80. + (-2656.1846361137755 + 13.004950411872356*nf - (7*nf*np.power(np.pi,2))/54.)/(2 + n) + (2285.159409762382 - 14.193864160201342*nf + (5*nf*np.power(np.pi,2))/72.)/(3 + n) - (957.4913212153385*S1)/n + (5.0360604026719304*nf*S1)/n + (2798.17031768792*(1/(1 + n) + S1))/(1 + n) - (15.938321904510403*nf*(1/(1 + n) + S1))/(1 + n) - (2183.014017811476*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (22.221146077608847*nf*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (1794.9072797413023*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (7.947769036822255*nf*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (853.6048603446067*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (19.06077749915008*nf*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (596.5490079602517*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (1.4142094467758806*nf*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (696.429863570809*(np.power(S1,2)/2. + S2/2.))/n + (3.248573734966296*nf*(np.power(S1,2)/2. + S2/2.))/n + (16.75 - (5*nf)/6. - (9*np.power(np.pi,2))/4.)*(-(S1/n) + np.power(S1,2)/2. + S2/2.) - (3035.637132022108*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (10.911345647839301*nf*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (5411.123832618697*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (14.997551679700479*nf*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (2160.722395241362*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (4.59716254754814*nf*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (4801.597341431533*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (11.67698516839526*nf*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (391.291617977227*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.7549571459803536*nf*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (176.89773541521075*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (0.5230267409975893*nf*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - 2*(-4.125 + nf/4.)*(-0.5*np.power(S1,2)/n + np.power(S1,3)/6. - S2/(2.*n) + (S1*S2)/2. + S3/3.) + (210.00253110794813*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (2.6555253520083517*nf*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (836.4108709560046*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (5.391211881797062*nf*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (1508.7868305034372*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (2.774833944288212*nf*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (1946.2704453635947*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (5.470750943316969*nf*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (405.03205178858434*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) - (0.5627962717575428*nf*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) + 27*(-0.16666666666666666*np.power(S1,3)/n + np.power(S1,4)/24. - (S1*S2)/(2.*n) + (np.power(S1,2)*S2)/4. + np.power(S2,2)/8. - S3/(3.*n) + (S1*S3)/3. + S4/4.) - (33*zeta3)/8. + (nf*zeta3)/4. - (2*nf*zeta3)/(3.*n) - (-(1/n) + S1)*(-16.833333333333332 + (7*nf)/9. + (11*np.power(np.pi,2))/16. - (nf*np.power(np.pi,2))/24. + (99*zeta3)/4.) + (-100.25 + (455*nf)/162. + (11*np.power(np.pi,2))/16. - (17*nf*np.power(np.pi,2))/216. + 36*zeta3)/(-1 + n) + (976.3258434434753 - 6.952739586572729*nf + (nf*np.power(np.pi,2))/18. - (2*nf*zeta3)/3.)/(1 + n)
    return res



@nb.njit(cache=True)
def Agg21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = 16.833333333333332 - 9/np.power(-1 + n,3) + 99/(4.*np.power(-1 + n,2)) - 18/np.power(n,3) - 45/(2.*np.power(n,2)) - 34.08160990247799/n - 54/np.power(1 + n,3) + 99/(4.*np.power(1 + n,2)) - 9/np.power(3 + n,3) + 99/(4.*np.power(3 + n,2)) - 6.959090024543352/np.power(4 + n,4) + 31.316953909265823/np.power(4 + n,3) - 129.72126276003138/np.power(4 + n,2) - 316.61176078013756/np.power(5 + n,4) + 96.1184068916528/np.power(5 + n,3) - 654.8831560964019/np.power(5 + n,2) + 163.9946761397813/np.power(6 + n,4) + 313.3624782120564/np.power(6 + n,3) + 359.0418188870436/np.power(6 + n,2) + (-1337.6273882811697 - 4.494055935519254*nf)/(3 + n) + (-145.9640592388291 - 0.241465589995501*nf)/(5 + n) + (-54.23457261672672 - 0.05502440947592218*nf)/(6 + n) - (7*nf)/9. - (17*nf)/(18.*np.power(-1 + n,2)) + (4*nf)/(3.*np.power(n,3)) - nf/np.power(n,2) + (0.7500000000000284*nf)/n + (4*nf)/(3.*np.power(1 + n,3)) - (13*nf)/(6.*np.power(1 + n,2)) + (4*nf)/(9.*np.power(2 + n,2)) - nf/(2.*np.power(3 + n,2)) + (0.011275640927692523*nf)/np.power(4 + n,4) - (0.06468931095091934*nf)/np.power(4 + n,3) - (0.2799909715053025*nf)/np.power(4 + n,2) + (0.1898720429119991*nf)/np.power(5 + n,4) - (0.020034311566906212*nf)/np.power(5 + n,3) + (0.17777890986621123*nf)/np.power(5 + n,2) - (0.043565667449617394*nf)/np.power(6 + n,4) - (0.11212805286729775*nf)/np.power(6 + n,3) - (0.15807930699413783*nf)/np.power(6 + n,2) + (539.8396237029783 + 1.3459753921080742*nf)/(4 + n) + (1555.7729975239774 + 3.0194412078803183*nf)/(2 + n) - (11*np.power(np.pi,2))/16. + (nf*np.power(np.pi,2))/24. - (nf*np.power(np.pi,2))/(9.*n) + (-16.75 + (235*nf)/108. + (3*np.power(np.pi,2))/2.)/(-1 + n) + (-518.9660076919846 - 1.6408845017926574*nf - (nf*np.power(np.pi,2))/9.)/(1 + n) + (550.4770242673264*S1)/n + (2.1408845017040483*nf*S1)/n - (-16.75 + (5*nf)/6. + (9*np.power(np.pi,2))/4.)*(-(1/n) + S1) - (1609.5965772517004*(1/(1 + n) + S1))/(1 + n) - (6.161410970014396*nf*(1/(1 + n) + S1))/(1 + n) + (1196.2222768020379*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (6.989681660926549*nf*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) - (1196.7004235975921*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (1.9576914148918718*nf*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (702.1423904308235*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (5.0760908464004215*nf*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) + (392.7053093491044*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (0.35075576110765155*nf*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (492.74315777416973*(np.power(S1,2)/2. + S2/2.))/n + (0.4208329523824698*nf*(np.power(S1,2)/2. + S2/2.))/n + (8.25 - nf/2.)*(-(S1/n) + np.power(S1,2)/2. + S2/2.) + (2044.6883276518818*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (1.8685772552991469*nf*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (3375.4249360137287*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (3.2857436451256987*nf*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (1186.915553438676*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (1.221107178720968*nf*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (2839.576419871591*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (2.8540969274069123*nf*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (197.81889970310104*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.2050095935230768*nf*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (13.606906922105907*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.06739772448375828*nf*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + 27*(-0.5*np.power(S1,2)/n + np.power(S1,3)/6. - S2/(2.*n) + (S1*S2)/2. + S3/3.) + (376.9276566603408*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.15155940569821733*nf*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (1365.5990389768906*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (0.0650472766211539*nf*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (1285.4794674795335*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (0.39665120819282607*nf*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (1971.3002461896854*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (0.4305210192151828*nf*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (316.45751052850346*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) - (0.11533914681325617*nf*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) - (99*zeta3)/4.
    return res



@nb.njit(cache=True)
def Agg22(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    res = 8.375 - (387*(1/(-1 + n) - 1/n))/8. + 33/(8.*(-1 + n)) + 9*(-np.power(-1 + n,-2) + 2/np.power(n,2) - np.power(1 + n,-2)) + (177*(1/(-1 + n) - 2/n + 1/(1 + n)))/4. - 9*(-np.power(-1 + n,-2) + 3/np.power(n,2) - 3/np.power(1 + n,2) + np.power(2 + n,-2)) - (165*(1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n)))/8. - (5*nf)/12. + (19*(1/(-1 + n) - 1/n)*nf)/12. - nf/(4.*(-1 + n)) - (2*nf)/(3.*np.power(n,2)) - ((-np.power(n,-2) + np.power(1 + n,-2))*nf)/3. - (4*(1/(-1 + n) - 2/n + 1/(1 + n))*nf)/3. + (17*(1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n))*nf)/36. - (9*np.power(np.pi,2))/8. + (33*(-(1/n) + S1))/8. + (27*(-(1/n) + S1))/(2.*(-1 + n)) - (nf*(-(1/n) + S1))/4. + (81*(S1/n - (-(1/n) + S1)/(-1 + n)))/2. - 27*((2*S1)/n - (-(1/n) + S1)/(-1 + n) - (1/(1 + n) + S1)/(1 + n)) + (27*((3*S1)/n - (-(1/n) + S1)/(-1 + n) - (3*(1/(1 + n) + S1))/(1 + n) + ((3 + 2*n)/((1 + n)*(2 + n)) + S1)/(2 + n)))/2. + (27*(-(S1/n) + np.power(S1,2)/2. + S2/2.))/2. - 9*((-1 + 2*n - 2*np.power(n,2))/(np.power(-1 + n,2)*np.power(n,2)) - np.power(np.pi,2)/6. + S2)
    return res



@nb.njit(cache=True)
def Agg23(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    res = 1.375 - (27*(1/(-1 + n) - 1/n))/2. + 9/(2.*(-1 + n)) + 9*(1/(-1 + n) - 2/n + 1/(1 + n)) - (9*(1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n)))/2. - nf/12. + (9*(-(1/n) + S1))/2.
    return res



@nb.njit(cache=True)
def Agg24(n, nf, cache):
    res = 1.125
    return res



@nb.njit(cache=True)
def Agq20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -31/(3.*np.power(-1 + n,3)) + 41/(2.*np.power(-1 + n,2)) + 106/(9.*np.power(n,4)) + 218/(9.*np.power(n,3)) + 275/(18.*np.power(n,2)) + 3.9571005767767033/n + 55/(9.*np.power(1 + n,4)) + 109/(18.*np.power(1 + n,3)) + 235/(18.*np.power(1 + n,2)) + 2/(27.*np.power(2 + n,3)) + 11/(2.*np.power(2 + n,2)) - 17/(27.*np.power(3 + n,3)) - 133/(648.*np.power(3 + n,2)) + 0.8223698702784716/np.power(4 + n,4) - 5.553806921999574/np.power(4 + n,3) + 8.366771900574946/np.power(4 + n,2) - 10.949382219584912/np.power(5 + n,4) + 13.849432222845577/np.power(5 + n,3) - 11.204433049821336/np.power(5 + n,2) + 4.893356281716537/np.power(6 + n,4) + 11.549634451584822/np.power(6 + n,3) + 12.475711611014834/np.power(6 + n,2) + (6.388313909027405 - 0.134021867309814*nf)/(5 + n) + (1.359582492100278 - 0.06271239231491248*nf)/(6 + n) + (-30.731748568486335 + 0.4736664950001651*nf)/(4 + n) + (4*nf)/(9.*np.power(-1 + n,3)) - (20*nf)/(27.*np.power(-1 + n,2)) - (4*nf)/(9.*np.power(n,3)) + (20*nf)/(27.*np.power(n,2)) - (1.4176103655531436*nf)/n + (2*nf)/(9.*np.power(1 + n,3)) - (10*nf)/(27.*np.power(1 + n,2)) - (0.004644855507486117*nf)/np.power(4 + n,4) + (0.02752704333289802*nf)/np.power(4 + n,3) - (0.09517404464347873*nf)/np.power(4 + n,2) - (0.07255605248969821*nf)/np.power(5 + n,4) - (0.03179629006284005*nf)/np.power(5 + n,3) - (0.20919521412223563*nf)/np.power(5 + n,2) + (0.013862164596313922*nf)/np.power(6 + n,4) + (0.02517890833768235*nf)/np.power(6 + n,3) + (0.0212374019159726*nf)/np.power(6 + n,2) - (35*np.power(np.pi,2))/(27.*np.power(-1 + n,2)) + (23*np.power(np.pi,2))/(27.*np.power(n,2)) - (34*np.power(np.pi,2))/(27.*np.power(1 + n,2)) + (2*nf*np.power(np.pi,2))/(27.*n) + (45.1926665533455 + 0.762659604639619*nf - (5*nf*np.power(np.pi,2))/27.)/(1 + n) + (69.23881799080559 - 0.8795772240770414*nf - (nf*np.power(np.pi,2))/27.)/(3 + n) + (-70.31617353640735 + 0.5439611002122565*nf + (4*nf*np.power(np.pi,2))/27.)/(2 + n) - (33.12620941527203*S1)/n + (1.112012896833687*nf*S1)/n + (65.56287458498312*(1/(1 + n) + S1))/(1 + n) - (1.9018156986716952*nf*(1/(1 + n) + S1))/(1 + n) - (8.644527254534509*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (1.3405078700407942*nf*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (79.57601966082686*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (0.21651223044957663*nf*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (81.67970586795522*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (0.1011287567994526*nf*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (22.8341684335303*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (0.06323221534253937*nf*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (53.33789727658772*(np.power(S1,2)/2. + S2/2.))/n - (0.8514951640659054*nf*(np.power(S1,2)/2. + S2/2.))/n - (209.38938481508063*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (2.0144131547924555*nf*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (343.35224129840924*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (2.2005831896264394*nf*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (112.89899341228728*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (0.3699829026393649*nf*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (278.9327211039544*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (1.2524445030058606*nf*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (18.211470512693634*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) + (0.044092487422282514*nf*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (42.35673152829946*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.1536011983541577*nf*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (84.9840789038495*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.6928663157980264*nf*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (47.238518782072774*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (1.2366573944297772*nf*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (44.361657515641326*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (0.4710596322174849*nf*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (31.732712904995193*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (1.0887862720427495*nf*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (13.46221764856785*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) + (0.07966563716064384*nf*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) + (-37.9537037037037 + (56*nf)/81. - (19*np.power(np.pi,2))/36. + (nf*np.power(np.pi,2))/27. + 16*zeta3)/(-1 + n)
    return res



@nb.njit(cache=True)
def Agq21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -4/np.power(-1 + n,3) + 31/(3.*np.power(-1 + n,2)) - 56/(9.*np.power(n,3)) - 136/(9.*np.power(n,2)) - 2.5845323553137938/n - 62/(9.*np.power(1 + n,3)) - 53/(9.*np.power(1 + n,2)) + 16/(27.*np.power(2 + n,2)) + 26/(27.*np.power(3 + n,2)) - 0.14933365678240723/np.power(4 + n,4) + 0.9647209308996265/np.power(4 + n,3) - 1.982113627904677/np.power(4 + n,2) - 4.384606883281288/np.power(5 + n,4) + 0.36359029018821026/np.power(5 + n,3) - 9.467016995505801/np.power(5 + n,2) + 2.211128073305879/np.power(6 + n,4) + 4.231801095479696/np.power(6 + n,3) + 5.088080180162337/np.power(6 + n,2) + (10.277957980256247 - 0.12859726389884807*nf)/(2 + n) + (3.170265036181056 - 0.09384997386592911*nf)/(4 + n) + (-0.6181579611503486 - 0.014540356149953873*nf)/(6 + n) + (-1.3016152241058507 + 0.007082899233404929*nf)/(5 + n) + (-11.512424159396804 + 0.19850336286089515*nf)/(3 + n) + (1.9179438020673558 + 0.40177170219080016*nf)/(1 + n) - (4*nf)/(9.*np.power(-1 + n,2)) + (4*nf)/(9.*np.power(n,2)) - (0.7407407407407416*nf)/n - (2*nf)/(9.*np.power(1 + n,2)) - (0.0008863218377414114*nf)/np.power(4 + n,4) + (0.005097260396606985*nf)/np.power(4 + n,3) - (0.017265120383839497*nf)/np.power(4 + n,2) - (0.012118814258166404*nf)/np.power(5 + n,4) - (0.005454377177093399*nf)/np.power(5 + n,3) - (0.03901864982081938*nf)/np.power(5 + n,2) + (0.0012055454368091521*nf)/np.power(6 + n,4) + (0.0017644538166461156*nf)/np.power(6 + n,3) - (0.0012268733773057319*nf)/np.power(6 + n,2) + (-5.611111111111111 + (20*nf)/27. + (8*np.power(np.pi,2))/27.)/(-1 + n) - (0.5459413560733313*S1)/n - (0.03140133181504437*nf*S1)/n + (7.587265449211114*(1/(1 + n) + S1))/(1 + n) + (0.1460549984559635*nf*(1/(1 + n) + S1))/(1 + n) - (30.001169125420553*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) - (0.2695284562563078*nf*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) - (34.827837457006034*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (0.11116535834688081*nf*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (50.60599490839494*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) + (0.246268696183586*nf*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) + (8.515020914227193*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (0.019771451778683467*nf*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (44.740062385880165*(np.power(S1,2)/2. + S2/2.))/n - (0.003514147373606059*nf*(np.power(S1,2)/2. + S2/2.))/n + (120.24209639626389*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (0.022049693029882415*nf*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (151.08967480822122*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (0.05324005464746588*nf*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (35.322077931643875*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (0.03603483030742922*nf*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (100.99484768365971*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (0.06256347949916376*nf*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (5.025982156932755*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) + (0.008175859799454994*nf*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (5.609244884938891*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.004785442284985393*nf*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (29.321403901051205*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.023673044154066444*nf*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (61.16631983010827*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (0.04681036563897463*nf*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (33.06640155599856*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (0.02282837795917319*nf*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (63.66298493340651*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (0.04624725484237912*nf*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (6.857577436588011*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n) + (0.00450388688668764*nf*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Agq22(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    res = 6*(-np.power(-1 + n,-2) + np.power(n,-2)) - (83*(1/(-1 + n) - 1/n))/9. + 61/(9.*np.power(-1 + n,2)) - 1/(2.*(-1 + n)) - (29*(-np.power(-1 + n,-2) + 2/np.power(n,2) - np.power(1 + n,-2)))/9. + (14*(1/(-1 + n) - 2/n + 1/(1 + n)))/9. - (2*(1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n)))/3. + nf/(9.*(-1 + n)) + ((1/(-1 + n) - 2/n + 1/(1 + n))*nf)/9. - (22*(-(1/n) + S1))/(9.*(-1 + n)) + (22*((2*S1)/n - (-(1/n) + S1)/(-1 + n) - (1/(1 + n) + S1)/(1 + n)))/9.
    return res



@nb.njit(cache=True)
def Agq23(n, nf, cache):
    res = -2/(-1 + n) + 2/n - 1/(1 + n)
    return res



@nb.njit(cache=True)
def Agq24(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def Aqg20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -43/(24.*np.power(n,4)) - 131/(48.*np.power(n,3)) - 131/(48.*np.power(n,2)) + 1.1911888331830194/n - 65/(12.*np.power(1 + n,4)) + 11/(4.*np.power(1 + n,3)) - 35/(6.*np.power(1 + n,2)) + 10.4053926591844/(1 + n) + np.power(2 + n,-4) - 93/(8.*np.power(2 + n,3)) - 133/(16.*np.power(2 + n,2)) - 25.265257982477284/(2 + n) - 2/(3.*np.power(3 + n,3)) + 259/(216.*np.power(3 + n,2)) + 22.97169476938314/(3 + n) + 0.4356820271802718/np.power(4 + n,4) - 3.648167146799966/np.power(4 + n,3) + 4.666958361067362/np.power(4 + n,2) - 15.820612873505851/(4 + n) - 7.1928985308380415/np.power(5 + n,4) + 7.53926563139814/np.power(5 + n,3) - 8.133967097702559/np.power(5 + n,2) + 3.444952575663905/(5 + n) + 2.7973273410525477/np.power(6 + n,4) + 6.933209170846717/np.power(6 + n,3) + 7.7669270528116305/np.power(6 + n,2) + 0.8562998184468253/(6 + n) - (13*np.power(np.pi,2))/(144.*np.power(n,2)) + (29*np.power(np.pi,2))/(36.*np.power(1 + n,2)) - (23*np.power(np.pi,2))/(36.*np.power(2 + n,2)) + (1.4444444444444444 + np.power(np.pi,2)/24.)/(-1 + n) - (10.89551676742556*S1)/n + (33.91512411485418*(1/(1 + n) + S1))/(1 + n) - (32.378345212125026*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (6.620037270621037*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (6.441410088535398*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (3.567742461035917*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (7.6259459441578015*(np.power(S1,2)/2. + S2/2.))/n - (30.5656098627976*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (53.554742347589425*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (17.361870636087808*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (45.48836064089401*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (2.738588424143426*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (1.9793278380704296*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (1.798659292989602*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (7.6689995392226145*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (13.748022057194886*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (18.839009328234496*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (3.6056770564355105*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Aqg21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -13/(12.*(-1 + n)) + 7/(6.*np.power(n,3)) + 5/(4.*np.power(n,2)) + 1.2533223444746522/n + 31/(6.*np.power(1 + n,3)) - 4/(3.*np.power(1 + n,2)) - 9.031235230715703/(1 + n) - 4/(3.*np.power(2 + n,3)) + 187/(24.*np.power(2 + n,2)) + 15.59250486448689/(2 + n) + 8/(9.*np.power(3 + n,2)) - 6.751578556990447/(3 + n) - 0.027929527280142082/np.power(4 + n,4) + 0.23338391067360553/np.power(4 + n,3) + 0.258640725494089/np.power(4 + n,2) - 0.13219179925426255/(4 + n) - 1.9121251865638547/np.power(5 + n,4) + 0.7183060788586074/np.power(5 + n,3) - 3.625926729243089/np.power(5 + n,2) + 0.27384591274603937/(5 + n) + 1.1071257185432037/np.power(6 + n,4) + 2.188753500072866/np.power(6 + n,3) + 2.6088729631688365/np.power(6 + n,2) + 0.25216076260294745/(6 + n) + (2.589788341299843*S1)/n - (4.805726932211193*(1/(1 + n) + S1))/(1 + n) + (1.7872567498248921*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) - (8.820553422050553*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (6.449707930794049*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) + (2.5495273323429615*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (3.201963174657092*(np.power(S1,2)/2. + S2/2.))/n + (10.902815064311243*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (17.462853189309797*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (6.112153339962495*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (13.324634261966189*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (1.1328537109852865*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.3849560009944391*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (3.291205854414084*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (9.2864975060617*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (7.304185697789013*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (11.961817401644986*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (1.722615948786082*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Aqg22(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    res = (41*(1/(-1 + n) - 1/n))/12. - 1/(8.*(-1 + n)) - 35/(24.*np.power(n,2)) - (2*(-np.power(n,-2) + np.power(1 + n,-2)))/3. - (93*(1/(-1 + n) - 2/n + 1/(1 + n)))/16. - (2*(-np.power(n,-2) + 2/np.power(1 + n,2) - np.power(2 + n,-2)))/3. + (133*(1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n)))/48. - (17*S1)/(24.*n) - (17*(-(S1/n) + (1/(1 + n) + S1)/(1 + n)))/12. + (17*(-(S1/n) + (2*(1/(1 + n) + S1))/(1 + n) - ((3 + 2*n)/((1 + n)*(2 + n)) + S1)/(2 + n)))/12.
    return res



@nb.njit(cache=True)
def Aqg23(n, nf, cache):
    res = -0.16666666666666666*1/n + (1/n - 1/(1 + n))/3. + (-(1/n) + 2/(1 + n) - 1/(2 + n))/3.
    return res



@nb.njit(cache=True)
def Aqg24(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def Aqq20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -5/(6.*np.power(n,4)) - 13/(12.*np.power(n,3)) - 3/(2.*np.power(n,2)) - 0.7986297731997045/n - 5/(6.*np.power(1 + n,4)) - 13/(12.*np.power(1 + n,3)) - 1/(3.*np.power(1 + n,2)) + 1.0506711812659297/(1 + n) - 10/(9.*np.power(2 + n,3)) - 49/(27.*np.power(2 + n,2)) - 0.9163222241223545/(2 + n) + 2/(27.*np.power(3 + n,2)) - 0.2806436951458962/(3 + n) + 0.0014735182662902581/np.power(4 + n,4) - 0.009193655123305253/np.power(4 + n,3) + 0.055511612427147146/np.power(4 + n,2) + 0.09590718130594521/(4 + n) + 0.027588702894167733/np.power(5 + n,4) + 0.012667915026022089/np.power(5 + n,3) + 0.07943507877302992/np.power(5 + n,2) + 0.004407924616075398/(5 + n) - 0.007753800373369394/np.power(6 + n,4) - 0.014409903008843377/np.power(6 + n,3) - 0.01668441874933692/np.power(6 + n,2) + 0.019863644765988633/(6 + n) + np.power(np.pi,2)/(12.*np.power(n,2)) + np.power(np.pi,2)/(12.*np.power(1 + n,2)) + (0.6419753086419753 + np.power(np.pi,2)/54.)/(-1 + n) + (0.13983274560630196*S1)/n - (0.41275820879534736*(1/(1 + n) + S1))/(1 + n) + (0.8051014673999592*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (0.3773965825982953*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (0.8370826054908135*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (0.07248998131839572*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (0.49726721324576617*(np.power(S1,2)/2. + S2/2.))/n - (1.3737737224272497*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (1.6829683740128463*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (0.35105687464036983*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (1.1122682532660377*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (0.04525048620569524*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) + (0.10801897174901916*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.49084933211928516*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.8840516588729128*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (0.34564489589974434*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (0.787248701393219*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (0.059617493009172226*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Aqq21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -13/(27.*(-1 + n)) + 2/(3.*np.power(n,3)) + 1/(3.*np.power(n,2)) + 0.28502197771725984/n + 2/(3.*np.power(1 + n,3)) + np.power(1 + n,-2) - 1.3367058144318702/(1 + n) + 2/(3.*np.power(2 + n,2)) + 2.1906260706515757/(2 + n) - 1.0146549160375362/(3 + n) + 0.0008287014639471657/np.power(4 + n,4) - 0.004669402119497261/np.power(4 + n,3) + 0.015584039956958031/np.power(4 + n,2) + 0.3970774550559096/(4 + n) + 0.009974093945678364/np.power(5 + n,4) + 0.005829363347210827/np.power(5 + n,3) + 0.03288843984284437/np.power(5 + n,2) - 0.05168203279717121/(5 + n) - 0.0007839412569760368/np.power(6 + n,4) - 0.0012427255994616627/np.power(6 + n,3) + 0.0009493512253215492/np.power(6 + n,2) + 0.011798741323319263/(6 + n) + (0.45506112547578514*S1)/n - (1.2340398935538648*(1/(1 + n) + S1))/(1 + n) + (1.5405378426172631*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (0.4085445948909813*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (1.1013187546197853*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (0.06878491481037952*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (0.07621097625638995*(np.power(S1,2)/2. + S2/2.))/n - (0.3417710652584133*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (0.6078137269535574*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (0.23243730263921492*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (0.5349245518740918*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (0.03976638871665715*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.011098590750917119*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (0.026539607868124548*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.0044455027231418*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (0.05917450985066498*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (0.0615882478690015*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (0.017472781822012725*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Aqq22(n, nf, cache):
    res = (5*(1/(-1 + n) - 1/n))/12. - 1/(3.*np.power(n,2)) + (np.power(n,-2) - np.power(1 + n,-2))/6. - (5*(1/(-1 + n) - 2/n + 1/(1 + n)))/12. + (1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n))/9.
    return res



@nb.njit(cache=True)
def Aqq23(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def Aqq24(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def AqQ20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -5/(6.*np.power(n,4)) - 13/(12.*np.power(n,3)) - 3/(2.*np.power(n,2)) - 0.7986297731997045/n - 5/(6.*np.power(1 + n,4)) - 13/(12.*np.power(1 + n,3)) - 1/(3.*np.power(1 + n,2)) + 1.0506711812659297/(1 + n) - 10/(9.*np.power(2 + n,3)) - 49/(27.*np.power(2 + n,2)) - 0.9163222241223545/(2 + n) + 2/(27.*np.power(3 + n,2)) - 0.2806436951458962/(3 + n) + 0.0014735182662902581/np.power(4 + n,4) - 0.009193655123305253/np.power(4 + n,3) + 0.055511612427147146/np.power(4 + n,2) + 0.09590718130594521/(4 + n) + 0.027588702894167733/np.power(5 + n,4) + 0.012667915026022089/np.power(5 + n,3) + 0.07943507877302992/np.power(5 + n,2) + 0.004407924616075398/(5 + n) - 0.007753800373369394/np.power(6 + n,4) - 0.014409903008843377/np.power(6 + n,3) - 0.01668441874933692/np.power(6 + n,2) + 0.019863644765988633/(6 + n) + np.power(np.pi,2)/(12.*np.power(n,2)) + np.power(np.pi,2)/(12.*np.power(1 + n,2)) + (0.6419753086419753 + np.power(np.pi,2)/54.)/(-1 + n) + (0.13983274560630196*S1)/n - (0.41275820879534736*(1/(1 + n) + S1))/(1 + n) + (0.8051014673999592*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (0.3773965825982953*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (0.8370826054908135*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (0.07248998131839572*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (0.49726721324576617*(np.power(S1,2)/2. + S2/2.))/n - (1.3737737224272497*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (1.6829683740128463*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (0.35105687464036983*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (1.1122682532660377*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (0.04525048620569524*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) + (0.10801897174901916*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.49084933211928516*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.8840516588729128*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (0.34564489589974434*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (0.787248701393219*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (0.059617493009172226*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def AqQ21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -13/(27.*(-1 + n)) + 2/(3.*np.power(n,3)) + 1/(3.*np.power(n,2)) + 0.28502197771725984/n + 2/(3.*np.power(1 + n,3)) + np.power(1 + n,-2) - 1.3367058144318702/(1 + n) + 2/(3.*np.power(2 + n,2)) + 2.1906260706515757/(2 + n) - 1.0146549160375362/(3 + n) + 0.0008287014639471657/np.power(4 + n,4) - 0.004669402119497261/np.power(4 + n,3) + 0.015584039956958031/np.power(4 + n,2) + 0.3970774550559096/(4 + n) + 0.009974093945678364/np.power(5 + n,4) + 0.005829363347210827/np.power(5 + n,3) + 0.03288843984284437/np.power(5 + n,2) - 0.05168203279717121/(5 + n) - 0.0007839412569760368/np.power(6 + n,4) - 0.0012427255994616627/np.power(6 + n,3) + 0.0009493512253215492/np.power(6 + n,2) + 0.011798741323319263/(6 + n) + (0.45506112547578514*S1)/n - (1.2340398935538648*(1/(1 + n) + S1))/(1 + n) + (1.5405378426172631*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (0.4085445948909813*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (1.1013187546197853*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (0.06878491481037952*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (0.07621097625638995*(np.power(S1,2)/2. + S2/2.))/n - (0.3417710652584133*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (0.6078137269535574*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (0.23243730263921492*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (0.5349245518740918*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (0.03976638871665715*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.011098590750917119*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n + (0.026539607868124548*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (0.0044455027231418*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (0.05917450985066498*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (0.0615882478690015*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (0.017472781822012725*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def AqQ22(n, nf, cache):
    res = (5*(1/(-1 + n) - 1/n))/12. - 1/(3.*np.power(n,2)) + (np.power(n,-2) - np.power(1 + n,-2))/6. - (5*(1/(-1 + n) - 2/n + 1/(1 + n)))/12. + (1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n))/9.
    return res



@nb.njit(cache=True)
def AqQ23(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def AqQ24(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def Aqqbar20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -np.power(n,-4) - 13/(12.*np.power(n,3)) - 17/(12.*np.power(n,2)) - 1.6405863611479914/n - 2/(3.*np.power(1 + n,4)) - 47/(36.*np.power(1 + n,3)) - 5/(36.*np.power(1 + n,2)) - 41.84428043405812/(1 + n) - 1/(3.*np.power(2 + n,4)) - 4/(9.*np.power(2 + n,3)) - 46/(27.*np.power(2 + n,2)) + 124.8879649874922/(2 + n) + 1/(3.*np.power(3 + n,4)) - 34/(27.*np.power(3 + n,3)) - 17/(81.*np.power(3 + n,2)) - 108.15988111676036/(3 + n) - 3.3671815998344403/np.power(4 + n,4) + 13.391781022848413/np.power(4 + n,3) - 24.88612174609606/np.power(4 + n,2) + 43.320673991234436/(4 + n) + 38.82696747282567/np.power(5 + n,4) - 47.521461097945725/np.power(5 + n,3) + 34.896326249104874/np.power(5 + n,2) - 12.31342113415528/(5 + n) - 16.295842720740655/np.power(6 + n,4) - 39.41640398123984/np.power(6 + n,3) - 44.209301659903545/np.power(6 + n,2) - 5.075215693136372/(6 + n) + (13*np.power(np.pi,2))/(108.*np.power(n,2)) + (5*np.power(np.pi,2))/(108.*np.power(1 + n,2)) + (2*np.power(np.pi,2))/(27.*np.power(2 + n,2)) - (2*np.power(np.pi,2))/(27.*np.power(3 + n,2)) + (0.6419753086419753 + np.power(np.pi,2)/54.)/(-1 + n) + (44.57561526466048*S1)/n - (135.11537460395684*(1/(1 + n) + S1))/(1 + n) + (110.70254327349599*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) - (81.01447137459289*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (33.32846515664826*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) + (27.523222283744982*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (29.983645015907463*(np.power(S1,2)/2. + S2/2.))/n + (134.45773874322774*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (240.78766391548692*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (97.6224237059175*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (216.11967611283566*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (17.8163177812485*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) + (4.964549940635965*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.13076210403699662*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (48.55663315700859*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (72.24774719378223*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (96.80897268888805*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (19.161619825303777*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Aqqbar21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -13/(27.*(-1 + n)) + 7/(9.*np.power(n,3)) + 2/(9.*np.power(n,2)) + 0.3244737480686852/n + 5/(9.*np.power(1 + n,3)) + 10/(9.*np.power(1 + n,2)) + 27.517693356274/(1 + n) + 2/(9.*np.power(2 + n,3)) + 1/(3.*np.power(2 + n,2)) - 81.92374015629414/(2 + n) - 2/(9.*np.power(3 + n,3)) + 17/(27.*np.power(3 + n,2)) + 72.114705314166/(3 + n) + 0.278832021511065/np.power(4 + n,4) - 1.8302170896235186/np.power(4 + n,3) + 7.56035067872129/np.power(4 + n,2) - 28.03618617637825/(4 + n) + 14.341632491127871/np.power(5 + n,4) - 5.1297691788810305/np.power(5 + n,3) + 30.955804756584733/np.power(5 + n,2) + 7.618474975959847/(5 + n) - 7.93710316431972/np.power(6 + n,4) - 15.00474989431131/np.power(6 + n,3) - 17.005981974415636/np.power(6 + n,2) + 2.8660604196926687/(6 + n) - (28.216567596518903*S1)/n + (86.62327420555926*(1/(1 + n) + S1))/(1 + n) - (71.71933800919118*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (53.412999002450206*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (21.74928857392622*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (18.35107902837314*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (19.975309522943995*(np.power(S1,2)/2. + S2/2.))/n - (86.90418147351276*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (150.01911201728237*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (54.453527107905*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (128.38534244021054*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (9.15842473440808*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.12928413519702175*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (14.833263126573382*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (60.32381411030171*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (60.36607529036273*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (90.67902221949461*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (15.04831991939943*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def Aqqbar22(n, nf, cache):
    res = (5*(1/(-1 + n) - 1/n))/12. - 1/(3.*np.power(n,2)) + (np.power(n,-2) - np.power(1 + n,-2))/6. - (5*(1/(-1 + n) - 2/n + 1/(1 + n)))/12. + (1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n))/9.
    return res



@nb.njit(cache=True)
def Aqqbar23(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def Aqqbar24(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def AqQbar20(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -np.power(n,-4) - 13/(12.*np.power(n,3)) - 17/(12.*np.power(n,2)) - 1.6405863611479914/n - 2/(3.*np.power(1 + n,4)) - 47/(36.*np.power(1 + n,3)) - 5/(36.*np.power(1 + n,2)) - 41.84428043405812/(1 + n) - 1/(3.*np.power(2 + n,4)) - 4/(9.*np.power(2 + n,3)) - 46/(27.*np.power(2 + n,2)) + 124.8879649874922/(2 + n) + 1/(3.*np.power(3 + n,4)) - 34/(27.*np.power(3 + n,3)) - 17/(81.*np.power(3 + n,2)) - 108.15988111676036/(3 + n) - 3.3671815998344403/np.power(4 + n,4) + 13.391781022848413/np.power(4 + n,3) - 24.88612174609606/np.power(4 + n,2) + 43.320673991234436/(4 + n) + 38.82696747282567/np.power(5 + n,4) - 47.521461097945725/np.power(5 + n,3) + 34.896326249104874/np.power(5 + n,2) - 12.31342113415528/(5 + n) - 16.295842720740655/np.power(6 + n,4) - 39.41640398123984/np.power(6 + n,3) - 44.209301659903545/np.power(6 + n,2) - 5.075215693136372/(6 + n) + (13*np.power(np.pi,2))/(108.*np.power(n,2)) + (5*np.power(np.pi,2))/(108.*np.power(1 + n,2)) + (2*np.power(np.pi,2))/(27.*np.power(2 + n,2)) - (2*np.power(np.pi,2))/(27.*np.power(3 + n,2)) + (0.6419753086419753 + np.power(np.pi,2)/54.)/(-1 + n) + (44.57561526466048*S1)/n - (135.11537460395684*(1/(1 + n) + S1))/(1 + n) + (110.70254327349599*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) - (81.01447137459289*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) + (33.32846515664826*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) + (27.523222283744982*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) - (29.983645015907463*(np.power(S1,2)/2. + S2/2.))/n + (134.45773874322774*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) - (240.78766391548692*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) - (97.6224237059175*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) + (216.11967611283566*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) + (17.8163177812485*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) + (4.964549940635965*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (0.13076210403699662*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) - (48.55663315700859*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) - (72.24774719378223*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) + (96.80897268888805*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) + (19.161619825303777*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def AqQbar21(n, nf, cache):
    S1 = c.get(c.S1, cache, n)
    S2 = c.get(c.S2, cache, n)
    S3 = c.get(c.S3, cache, n)
    res = -13/(27.*(-1 + n)) + 7/(9.*np.power(n,3)) + 2/(9.*np.power(n,2)) + 0.3244737480686852/n + 5/(9.*np.power(1 + n,3)) + 10/(9.*np.power(1 + n,2)) + 27.517693356274/(1 + n) + 2/(9.*np.power(2 + n,3)) + 1/(3.*np.power(2 + n,2)) - 81.92374015629414/(2 + n) - 2/(9.*np.power(3 + n,3)) + 17/(27.*np.power(3 + n,2)) + 72.114705314166/(3 + n) + 0.278832021511065/np.power(4 + n,4) - 1.8302170896235186/np.power(4 + n,3) + 7.56035067872129/np.power(4 + n,2) - 28.03618617637825/(4 + n) + 14.341632491127871/np.power(5 + n,4) - 5.1297691788810305/np.power(5 + n,3) + 30.955804756584733/np.power(5 + n,2) + 7.618474975959847/(5 + n) - 7.93710316431972/np.power(6 + n,4) - 15.00474989431131/np.power(6 + n,3) - 17.005981974415636/np.power(6 + n,2) + 2.8660604196926687/(6 + n) - (28.216567596518903*S1)/n + (86.62327420555926*(1/(1 + n) + S1))/(1 + n) - (71.71933800919118*((3 + 2*n)/((1 + n)*(2 + n)) + S1))/(2 + n) + (53.412999002450206*((2*(5 + 2*n)*(5 + 5*n + np.power(n,2)))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + S1))/(4 + n) - (21.74928857392622*((11 + 12*n + 3*np.power(n,2))/((1 + n)*(2 + n)*(3 + n)) + S1))/(3 + n) - (18.35107902837314*((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + S1))/(5 + n) + (19.975309522943995*(np.power(S1,2)/2. + S2/2.))/n - (86.90418147351276*(np.power(1 + n,-2) + S1/(1 + n) + np.power(S1,2)/2. + S2/2.))/(1 + n) + (150.01911201728237*((7 + 9*n + 3*np.power(n,2))/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*S1)/((1 + n)*(2 + n)) + np.power(S1,2)/2. + S2/2.))/(2 + n) + (54.453527107905*((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + (2*(5 + 2*n)*(5 + 5*n + np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,2)/2. + S2/2.))/(4 + n) - (128.38534244021054*((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*S1)/((1 + n)*(2 + n)*(3 + n)) + np.power(S1,2)/2. + S2/2.))/(3 + n) - (9.15842473440808*((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S1)/((1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,2)/2. + S2/2.))/(5 + n) - (0.12928413519702175*(np.power(S1,3)/6. + (S1*S2)/2. + S3/3.))/n - (14.833263126573382*(np.power(1 + n,-3) + S1/np.power(1 + n,2) + np.power(S1,2)/(2.*(1 + n)) + np.power(S1,3)/6. + S2/(2.*(1 + n)) + (S1*S2)/2. + S3/3.))/(1 + n) + (60.32381411030171*(((3 + 2*n)*(5 + 6*n + 2*np.power(n,2)))/(np.power(1 + n,3)*np.power(2 + n,3)) + ((7 + 9*n + 3*np.power(n,2))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)) + ((3 + 2*n)*np.power(S1,2))/(2.*(1 + n)*(2 + n)) + np.power(S1,3)/6. + ((3 + 2*n)*S2)/(2.*(1 + n)*(2 + n)) + (S1*S2)/2. + S3/3.))/(2 + n) + (60.36607529036273*((2*(5 + 2*n)*(4676 + 16800*n + 26110*np.power(n,2) + 22850*np.power(n,3) + 12285*np.power(n,4) + 4150*np.power(n,5) + 860*np.power(n,6) + 100*np.power(n,7) + 5*np.power(n,8)))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)) + ((1660 + 4530*n + 5031*np.power(n,2) + 2900*np.power(n,3) + 915*np.power(n,4) + 150*np.power(n,5) + 10*np.power(n,6))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)) + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*np.power(S1,2))/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + np.power(S1,3)/6. + ((5 + 2*n)*(5 + 5*n + np.power(n,2))*S2)/((1 + n)*(2 + n)*(3 + n)*(4 + n)) + (S1*S2)/2. + S3/3.))/(4 + n) - (90.67902221949461*((575 + 1776*n + 2284*np.power(n,2) + 1560*np.power(n,3) + 595*np.power(n,4) + 120*np.power(n,5) + 10*np.power(n,6))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)) + ((85 + 180*n + 141*np.power(n,2) + 48*np.power(n,3) + 6*np.power(n,4))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)) + ((11 + 12*n + 3*np.power(n,2))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)) + np.power(S1,3)/6. + ((11 + 12*n + 3*np.power(n,2))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)) + (S1*S2)/2. + S3/3.))/(3 + n) - (15.04831991939943*((6998824 + 32953200*n + 70204540*np.power(n,2) + 89358060*np.power(n,3) + 75608005*np.power(n,4) + 44779500*np.power(n,5) + 19032390*np.power(n,6) + 5849760*np.power(n,7) + 1290800*np.power(n,8) + 199500*np.power(n,9) + 20510*np.power(n,10) + 1260*np.power(n,11) + 35*np.power(n,12))/(np.power(1 + n,3)*np.power(2 + n,3)*np.power(3 + n,3)*np.power(4 + n,3)*np.power(5 + n,3)) + ((48076 + 154350*n + 210945*np.power(n,2) + 160020*np.power(n,3) + 73725*np.power(n,4) + 21150*np.power(n,5) + 3695*np.power(n,6) + 360*np.power(n,7) + 15*np.power(n,8))*S1)/(np.power(1 + n,2)*np.power(2 + n,2)*np.power(3 + n,2)*np.power(4 + n,2)*np.power(5 + n,2)) + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*np.power(S1,2))/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + np.power(S1,3)/6. + ((274 + 450*n + 255*np.power(n,2) + 60*np.power(n,3) + 5*np.power(n,4))*S2)/(2.*(1 + n)*(2 + n)*(3 + n)*(4 + n)*(5 + n)) + (S1*S2)/2. + S3/3.))/(5 + n)
    return res



@nb.njit(cache=True)
def AqQbar22(n, nf, cache):
    res = (5*(1/(-1 + n) - 1/n))/12. - 1/(3.*np.power(n,2)) + (np.power(n,-2) - np.power(1 + n,-2))/6. - (5*(1/(-1 + n) - 2/n + 1/(1 + n)))/12. + (1/(-1 + n) - 3/n + 3/(1 + n) - 1/(2 + n))/9.
    return res



@nb.njit(cache=True)
def AqQbar23(n, nf, cache):
    res = 0.
    return res



@nb.njit(cache=True)
def AqQbar24(n, nf, cache):
    res = 0.
    return res

