# -*- coding: utf-8 -*-
# pylint: disable=too-many-lines
r"""
This module contains some Mellin transformations for 5th order  harmonics sum.
Notation refers to:
    - :cite:`Blumlein:2009ta`. Johannes Blumlein. Structural Relations of Harmonic Sums and Mellin Transforms up to Weight w = 5. Comput. Phys. Commun., 180:2218-2249, 2009. arXiv:0901.3106, doi:10.1016/j.cpc.2009.07.004.

Mellin transform is defined with the convention x^(N).
F19, F20, F21 are not present explicitly in the paper

"""  # pylint: disable=line-too-long
import numba as nb
import numpy as np


@nb.njit("c16(c16,c16,c16,c16)", cache=True)
def F17(n, S1, S2, S3):
    return (
        0.006250114775233491 * n
        - (0.003746947390066303 * n) / (2.0 + n)
        - (0.0023126098502258036 * n) / (3.0 + n)
        + (0.0099367254968704 * n) / (4.0 + n)
        + (0.011620487178071414 * n) / (5.0 + n)
        - (0.06649377693249485 * n) / (6.0 + n)
        + (0.19948261641123977 * n) / (7.0 + n)
        - (0.4211429420070887 * n) / (8.0 + n)
        + (0.6134519590989854 * n) / (9.0 + n)
        - (0.6080710864181954 * n) / (10.0 + n)
        + (0.39145233830114945 * n) / (11.0 + n)
        - (0.1477783591293883 * n) / (12.0 + n)
        + (0.02482853473316387 * n) / (13.0 + n)
        + 0.007477407032205702 * (-1.0 + 1 / (1.0 + n))
        - 0.000051440329218106995
        * n
        * (
            121.50223994844418
            + 83580.0 / (1.0 + n)
            - 3390.0 / (2.0 + n)
            + 320.0 / (3.0 + n)
            + (67770.0 * (1.0 + (1.0 + n) * S1)) / np.power(1.0 + n, 2)
            - (5805.0 * (1.0 + (2.0 + n) * (1 / (1.0 + n) + S1))) / np.power(2.0 + n, 2)
            + (720.0 * (1.0 + (3.0 + n) * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)))
            / np.power(3.0 + n, 2)
            - (
                83725.36366334453
                * (
                    1.0
                    + n
                    * (1 / (1.0 + n) + (1.0 - 2.0 * (1.0 + n)) / (n * (1.0 + n)) + S1)
                )
            )
            / np.power(n, 2)
            - (
                9180.0
                * (
                    1.0
                    + (2.0 + n) * (1 / (1.0 + n) + S1)
                    + np.power(2.0 + n, 2)
                    * (
                        np.power(1.0 + n, -2)
                        + S1 / (1.0 + n)
                        + 0.5 * (np.power(S1, 2) + S2)
                    )
                )
            )
            / np.power(2.0 + n, 3)
            + (
                52920.0
                * (
                    1.0
                    + (1.0 + n) * S1
                    + np.power(1.0 + n, 2)
                    * (
                        np.power(1.0 + n, -2)
                        + S1 / (1.0 + n)
                        - (1.0 * (1 / (1.0 + n) + S1)) / (1.0 + n)
                        + 0.5 * (np.power(S1, 2) + S2)
                    )
                )
            )
            / np.power(1.0 + n, 3)
            + (
                1440.0
                * (
                    1.0
                    + (3.0 + n) * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)
                    + np.power(3.0 + n, 2)
                    * (
                        np.power(1.0 + n, -2)
                        + np.power(2.0 + n, -2)
                        + S1 / (1.0 + n)
                        + (1 / (1.0 + n) + S1) / (2.0 + n)
                        + 0.5 * (np.power(S1, 2) + S2)
                    )
                )
            )
            / np.power(3.0 + n, 3)
            - (
                45180.0
                * (
                    1.0
                    + n
                    * (1 / (1.0 + n) + (1.0 - 2.0 * (1.0 + n)) / (n * (1.0 + n)) + S1)
                    + np.power(n, 2)
                    * (
                        np.power(1.0 + n, -2)
                        + 1 / (n * (1.0 + n))
                        + S1 / (1.0 + n)
                        + ((1.0 - 2.0 * (1.0 + n)) * (1 / (1.0 + n) + S1))
                        / (n * (1.0 + n))
                        + 0.5 * (np.power(S1, 2) + S2)
                    )
                )
            )
            / np.power(n, 3)
            + (
                11340.0
                * (
                    -1.0
                    - 1.0 * (2.0 + n) * (1 / (1.0 + n) + S1)
                    - 1.0
                    * np.power(2.0 + n, 2)
                    * (
                        np.power(1.0 + n, -2)
                        + S1 / (1.0 + n)
                        + 0.5 * (np.power(S1, 2) + S2)
                    )
                    - 1.0
                    * np.power(2.0 + n, 3)
                    * (
                        np.power(1.0 + n, -3)
                        + S1 / np.power(1.0 + n, 2)
                        + (0.5 * np.power(S1, 2)) / (1.0 + n)
                        + (0.5 * S2) / (1.0 + n)
                        + 0.16666666666666666
                        * (np.power(S1, 3) + 3.0 * S1 * S2 + 2.0 * S3)
                    )
                )
            )
            / np.power(2.0 + n, 4)
            + (
                35640.0
                * (
                    1.0
                    + (1.0 + n) * S1
                    + np.power(1.0 + n, 2)
                    * (
                        np.power(1.0 + n, -2)
                        + S1 / (1.0 + n)
                        - (1.0 * (1 / (1.0 + n) + S1)) / (1.0 + n)
                        + 0.5 * (np.power(S1, 2) + S2)
                    )
                    + np.power(1.0 + n, 3)
                    * (
                        np.power(1.0 + n, -3)
                        + S1 / np.power(1.0 + n, 2)
                        + (0.5 * np.power(S1, 2)) / (1.0 + n)
                        - (0.5 * np.power(1 / (1.0 + n) + S1, 2)) / (1.0 + n)
                        + (0.5 * S2) / (1.0 + n)
                        - (0.5 * (np.power(1.0 + n, -2) + S2)) / (1.0 + n)
                        + 0.16666666666666666
                        * (np.power(S1, 3) + 3.0 * S1 * S2 + 2.0 * S3)
                    )
                )
            )
            / np.power(1.0 + n, 4)
            + (
                2160.0
                * (
                    1.0
                    + (3.0 + n) * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)
                    + np.power(3.0 + n, 2)
                    * (
                        np.power(1.0 + n, -2)
                        + np.power(2.0 + n, -2)
                        + S1 / (1.0 + n)
                        + (1 / (1.0 + n) + S1) / (2.0 + n)
                        + 0.5 * (np.power(S1, 2) + S2)
                    )
                    + np.power(3.0 + n, 3)
                    * (
                        np.power(1.0 + n, -3)
                        + np.power(2.0 + n, -3)
                        + S1 / np.power(1.0 + n, 2)
                        + (0.5 * np.power(S1, 2)) / (1.0 + n)
                        + (1 / (1.0 + n) + S1) / np.power(2.0 + n, 2)
                        + (0.5 * np.power(1 / (1.0 + n) + S1, 2)) / (2.0 + n)
                        + (0.5 * S2) / (1.0 + n)
                        + (0.5 * (np.power(1.0 + n, -2) + S2)) / (2.0 + n)
                        + 0.16666666666666666
                        * (np.power(S1, 3) + 3.0 * S1 * S2 + 2.0 * S3)
                    )
                )
            )
            / np.power(3.0 + n, 4)
            + (
                26460.0
                * (
                    -1.0
                    - 1.0
                    * n
                    * (1 / (1.0 + n) + (1.0 - 2.0 * (1.0 + n)) / (n * (1.0 + n)) + S1)
                    - 1.0
                    * np.power(n, 2)
                    * (
                        np.power(1.0 + n, -2)
                        + 1 / (n * (1.0 + n))
                        + S1 / (1.0 + n)
                        + ((1.0 - 2.0 * (1.0 + n)) * (1 / (1.0 + n) + S1))
                        / (n * (1.0 + n))
                        + 0.5 * (np.power(S1, 2) + S2)
                    )
                    - 1.0
                    * np.power(n, 3)
                    * (
                        np.power(1.0 + n, -3)
                        + S1 / np.power(1.0 + n, 2)
                        + (0.5 * np.power(S1, 2)) / (1.0 + n)
                        + (1 / (1.0 + n) + S1) / (n * (1.0 + n))
                        + (
                            0.5
                            * (1.0 - 2.0 * (1.0 + n))
                            * np.power(1 / (1.0 + n) + S1, 2)
                        )
                        / (n * (1.0 + n))
                        + (0.5 * S2) / (1.0 + n)
                        + (0.5 * (1.0 - 2.0 * (1.0 + n)) * (np.power(1.0 + n, -2) + S2))
                        / (n * (1.0 + n))
                        + 0.16666666666666666
                        * (np.power(S1, 3) + 3.0 * S1 * S2 + 2.0 * S3)
                    )
                )
            )
            / np.power(n, 4)
        )
    )


@nb.njit("c16(c16,c16,c16)", cache=True)
def F11(n, S1, S2):
    return (
        -0.1570209743051114 * n
        - (0.4961137242141078 * n) / (2.0 + n)
        + (0.14325154607236013 * n) / (3.0 + n)
        + (0.043572446555835365 * n) / (4.0 + n)
        - (0.1367619721729137 * n) / (5.0 + n)
        + (0.5737638752229648 * n) / (6.0 + n)
        - (1.6610332243741988 * n) / (7.0 + n)
        + (3.333896376517311 * n) / (8.0 + n)
        - (4.660416088583179 * n) / (9.0 + n)
        + (4.454651830395971 * n) / (10.0 + n)
        - (2.7814009672516686 * n) / (11.0 + n)
        + (1.0238605215663694 * n) / (12.0 + n)
        - (0.16899247190231767 * n) / (13.0 + n)
        - 0.4887437258762844 * (-1.0 + 1 / (1.0 + n))
        - 1.0
        * n
        * (
            -0.1570209813585035
            + 0.4166666666666667 / np.power(n, 3)
            + 0.47941919157221546 / np.power(n, 2)
            - 1.0 / np.power(1.0 + n, 3)
            - 1.75 / np.power(1.0 + n, 2)
            + 0.009326544681477866 / (1.0 + n)
            + 0.75 / np.power(2.0 + n, 3)
            + 1.25 / np.power(2.0 + n, 2)
            + 0.8057445842680144 / (2.0 + n)
            - 0.16666666666666666 / np.power(3.0 + n, 3)
            - 0.25 / np.power(3.0 + n, 2)
            - 0.13958627001930435 / (3.0 + n)
            - (0.25 * (4.0 + 7.0 * (1.0 + n)) * S1) / np.power(1.0 + n, 2)
            + (0.75 * (1 / (1.0 + n) + S1)) / np.power(2.0 + n, 2)
            + (1.25 * (1 / (1.0 + n) + S1)) / (2.0 + n)
            - (0.16666666666666666 * (1 / (1.0 + n) + 1 / (2.0 + n) + S1))
            / np.power(3.0 + n, 2)
            - (0.25 * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)) / (3.0 + n)
            - (
                0.002777777777777778
                * (22.59090896599757 - 172.59090896599758 * (1.0 + n))
                * (1 / (1.0 + n) + (1.0 - 2.0 * (1.0 + n)) / (n * (1.0 + n)) + S1)
            )
            / np.power(n, 2)
            + (
                0.75
                * (
                    np.power(1.0 + n, -2)
                    + S1 / (1.0 + n)
                    + 0.5 * (np.power(S1, 2) + S2)
                )
            )
            / (2.0 + n)
            - (
                1.0
                * (
                    np.power(1.0 + n, -2)
                    + S1 / (1.0 + n)
                    - (1.0 * (1 / (1.0 + n) + S1)) / (1.0 + n)
                    + 0.5 * (np.power(S1, 2) + S2)
                )
            )
            / (1.0 + n)
            - (
                0.16666666666666666
                * (
                    np.power(1.0 + n, -2)
                    + np.power(2.0 + n, -2)
                    + S1 / (1.0 + n)
                    + (1 / (1.0 + n) + S1) / (2.0 + n)
                    + 0.5 * (np.power(S1, 2) + S2)
                )
            )
            / (3.0 + n)
            + (
                0.4166666666666667
                * (
                    np.power(1.0 + n, -2)
                    + 1 / (n * (1.0 + n))
                    + S1 / (1.0 + n)
                    + ((1.0 - 2.0 * (1.0 + n)) * (1 / (1.0 + n) + S1)) / (n * (1.0 + n))
                    + 0.5 * (np.power(S1, 2) + S2)
                )
            )
            / n
        )
    )


@nb.njit("c16(c16,c16,c16,c16)", cache=True)
def F18(n, S1, S2, S3):
    return (
        0.7502092979013981
        - 0.9999999952263307
        * (
            n
            * (
                -1.0 / np.power(1.0 + n, 5)
                + 1.0823232337111381 / (1.0 + n)
                - (1.0 * S1) / np.power(1.0 + n, 4)
                - (1.0 * (0.5 * np.power(S1, 2) + 0.5 * S2)) / np.power(1.0 + n, 3)
                - (
                    1.0
                    * (
                        0.16666666666666666 * np.power(S1, 3)
                        + 0.5 * S1 * S2
                        + 0.3333333333333333 * S3
                    )
                )
                / np.power(1.0 + n, 2)
            )
            + (
                0.16666666666666666 * np.power(1 / (1.0 + n) + S1, 3)
                + 0.5 * (1 / (1.0 + n) + S1) * (np.power(1.0 + n, -2) + S2)
                + 0.3333333333333333 * (np.power(1.0 + n, -3) + S3)
            )
            / (1.0 + n)
        )
        + 0.49999902059348167
        * (
            (
                0.16666666666666666 * np.power(1 / (1.0 + n) + 1 / (2.0 + n) + S1, 3)
                + 0.5
                * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)
                * (np.power(1.0 + n, -2) + np.power(2.0 + n, -2) + S2)
                + 0.3333333333333333
                * (np.power(1.0 + n, -3) + np.power(2.0 + n, -3) + S3)
            )
            / (2.0 + n)
            + n
            * (
                -1.0 / np.power(2.0 + n, 5)
                + 1.0823232337111381 / (2.0 + n)
                - (1.0 * (1 / (1.0 + n) + S1)) / np.power(2.0 + n, 4)
                - (
                    1.0
                    * (
                        0.5 * np.power(1 / (1.0 + n) + S1, 2)
                        + 0.5 * (np.power(1.0 + n, -2) + S2)
                    )
                )
                / np.power(2.0 + n, 3)
                - (
                    1.0
                    * (
                        0.16666666666666666 * np.power(1 / (1.0 + n) + S1, 3)
                        + 0.5 * (1 / (1.0 + n) + S1) * (np.power(1.0 + n, -2) + S2)
                        + 0.3333333333333333 * (np.power(1.0 + n, -3) + S3)
                    )
                )
                / np.power(2.0 + n, 2)
            )
        )
        - 0.3332995604546604
        * (
            (
                0.16666666666666666
                * np.power(
                    1 / (1.0 + n)
                    + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                    + S1,
                    3,
                )
                + 0.5
                * (
                    1 / (1.0 + n)
                    + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                    + S1
                )
                * (
                    np.power(1.0 + n, -2)
                    + (5.0 + 6.0 * (1.0 + n) + 2.0 * np.power(1.0 + n, 2))
                    / (np.power(2.0 + n, 2) * np.power(3.0 + n, 2))
                    + S2
                )
                + 0.3333333333333333
                * (
                    np.power(1.0 + n, -3)
                    + (
                        (3.0 + 2.0 * (1.0 + n))
                        * (3.0 + 3.0 * (1.0 + n) + np.power(1.0 + n, 2))
                    )
                    / (np.power(2.0 + n, 3) * np.power(3.0 + n, 3))
                    + S3
                )
            )
            / (3.0 + n)
            + n
            * (
                -1.0 / np.power(3.0 + n, 5)
                + 1.0823232337111381 / (3.0 + n)
                - (1.0 * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)) / np.power(3.0 + n, 4)
                - (
                    1.0
                    * (
                        0.5 * np.power(1 / (1.0 + n) + 1 / (2.0 + n) + S1, 2)
                        + 0.5 * (np.power(1.0 + n, -2) + np.power(2.0 + n, -2) + S2)
                    )
                )
                / np.power(3.0 + n, 3)
                - (
                    1.0
                    * (
                        0.16666666666666666
                        * np.power(1 / (1.0 + n) + 1 / (2.0 + n) + S1, 3)
                        + 0.5
                        * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)
                        * (np.power(1.0 + n, -2) + np.power(2.0 + n, -2) + S2)
                        + 0.3333333333333333
                        * (np.power(1.0 + n, -3) + np.power(2.0 + n, -3) + S3)
                    )
                )
                / np.power(3.0 + n, 2)
            )
        )
        + 0.24954082848379078
        * (
            (
                0.16666666666666666
                * np.power(
                    1 / (1.0 + n)
                    + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                    + S1,
                    3,
                )
                + 0.5
                * (
                    1 / (1.0 + n)
                    + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                    + S1
                )
                * (
                    np.power(1.0 + n, -2)
                    + (
                        49.0
                        + 96.0 * (1.0 + n)
                        + 72.0 * np.power(1.0 + n, 2)
                        + 24.0 * np.power(1.0 + n, 3)
                        + 3.0 * np.power(1.0 + n, 4)
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                    )
                    + S2
                )
                + 0.3333333333333333
                * (
                    np.power(1.0 + n, -3)
                    + (
                        251.0
                        + 684.0 * (1.0 + n)
                        + 795.0 * np.power(1.0 + n, 2)
                        + 504.0 * np.power(1.0 + n, 3)
                        + 183.0 * np.power(1.0 + n, 4)
                        + 36.0 * np.power(1.0 + n, 5)
                        + 3.0 * np.power(1.0 + n, 6)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                    )
                    + S3
                )
            )
            / (4.0 + n)
            + n
            * (
                -1.0 / np.power(4.0 + n, 5)
                + 1.0823232337111381 / (4.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                        + S1
                    )
                )
                / np.power(4.0 + n, 4)
                - (
                    1.0
                    * (
                        0.5
                        * np.power(
                            1 / (1.0 + n)
                            + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                            + S1,
                            2,
                        )
                        + 0.5
                        * (
                            np.power(1.0 + n, -2)
                            + (5.0 + 6.0 * (1.0 + n) + 2.0 * np.power(1.0 + n, 2))
                            / (np.power(2.0 + n, 2) * np.power(3.0 + n, 2))
                            + S2
                        )
                    )
                )
                / np.power(4.0 + n, 3)
                - (
                    1.0
                    * (
                        0.16666666666666666
                        * np.power(
                            1 / (1.0 + n)
                            + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                            + S1,
                            3,
                        )
                        + 0.5
                        * (
                            1 / (1.0 + n)
                            + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                            + S1
                        )
                        * (
                            np.power(1.0 + n, -2)
                            + (5.0 + 6.0 * (1.0 + n) + 2.0 * np.power(1.0 + n, 2))
                            / (np.power(2.0 + n, 2) * np.power(3.0 + n, 2))
                            + S2
                        )
                        + 0.3333333333333333
                        * (
                            np.power(1.0 + n, -3)
                            + (
                                (3.0 + 2.0 * (1.0 + n))
                                * (3.0 + 3.0 * (1.0 + n) + np.power(1.0 + n, 2))
                            )
                            / (np.power(2.0 + n, 3) * np.power(3.0 + n, 3))
                            + S3
                        )
                    )
                )
                / np.power(4.0 + n, 2)
            )
        )
        - 0.1967571967137462
        * (
            (
                0.16666666666666666
                * np.power(
                    1 / (1.0 + n)
                    + (
                        2.0
                        * (5.0 + 2.0 * (1.0 + n))
                        * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                    )
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                    + S1,
                    3,
                )
                + 0.5
                * (
                    1 / (1.0 + n)
                    + (
                        2.0
                        * (5.0 + 2.0 * (1.0 + n))
                        * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                    )
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                    + S1
                )
                * (
                    np.power(1.0 + n, -2)
                    + (
                        2.0
                        * (
                            410.0
                            + 1030.0 * (1.0 + n)
                            + 1081.0 * np.power(1.0 + n, 2)
                            + 600.0 * np.power(1.0 + n, 3)
                            + 185.0 * np.power(1.0 + n, 4)
                            + 30.0 * np.power(1.0 + n, 5)
                            + 2.0 * np.power(1.0 + n, 6)
                        )
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                        * np.power(5.0 + n, 2)
                    )
                    + S2
                )
                + 0.3333333333333333
                * (
                    np.power(1.0 + n, -3)
                    + (
                        2.0
                        * (5.0 + 2.0 * (1.0 + n))
                        * (
                            1628.0
                            + 5050.0 * (1.0 + n)
                            + 6935.0 * np.power(1.0 + n, 2)
                            + 5495.0 * np.power(1.0 + n, 3)
                            + 2737.0 * np.power(1.0 + n, 4)
                            + 875.0 * np.power(1.0 + n, 5)
                            + 175.0 * np.power(1.0 + n, 6)
                            + 20.0 * np.power(1.0 + n, 7)
                            + np.power(1.0 + n, 8)
                        )
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                    )
                    + S3
                )
            )
            / (5.0 + n)
            + n
            * (
                -1.0 / np.power(5.0 + n, 5)
                + 1.0823232337111381 / (5.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                        + S1
                    )
                )
                / np.power(5.0 + n, 4)
                - (
                    1.0
                    * (
                        0.5
                        * np.power(
                            1 / (1.0 + n)
                            + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                            / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                            + S1,
                            2,
                        )
                        + 0.5
                        * (
                            np.power(1.0 + n, -2)
                            + (
                                49.0
                                + 96.0 * (1.0 + n)
                                + 72.0 * np.power(1.0 + n, 2)
                                + 24.0 * np.power(1.0 + n, 3)
                                + 3.0 * np.power(1.0 + n, 4)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                            )
                            + S2
                        )
                    )
                )
                / np.power(5.0 + n, 3)
                - (
                    1.0
                    * (
                        0.16666666666666666
                        * np.power(
                            1 / (1.0 + n)
                            + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                            / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                            + S1,
                            3,
                        )
                        + 0.5
                        * (
                            1 / (1.0 + n)
                            + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                            / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                            + S1
                        )
                        * (
                            np.power(1.0 + n, -2)
                            + (
                                49.0
                                + 96.0 * (1.0 + n)
                                + 72.0 * np.power(1.0 + n, 2)
                                + 24.0 * np.power(1.0 + n, 3)
                                + 3.0 * np.power(1.0 + n, 4)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                            )
                            + S2
                        )
                        + 0.3333333333333333
                        * (
                            np.power(1.0 + n, -3)
                            + (
                                251.0
                                + 684.0 * (1.0 + n)
                                + 795.0 * np.power(1.0 + n, 2)
                                + 504.0 * np.power(1.0 + n, 3)
                                + 183.0 * np.power(1.0 + n, 4)
                                + 36.0 * np.power(1.0 + n, 5)
                                + 3.0 * np.power(1.0 + n, 6)
                            )
                            / (
                                np.power(2.0 + n, 3)
                                * np.power(3.0 + n, 3)
                                * np.power(4.0 + n, 3)
                            )
                            + S3
                        )
                    )
                )
                / np.power(5.0 + n, 2)
            )
        )
        + 0.1530503487172192
        * (
            (
                0.16666666666666666
                * np.power(
                    1 / (1.0 + n)
                    + (
                        274.0
                        + 450.0 * (1.0 + n)
                        + 255.0 * np.power(1.0 + n, 2)
                        + 60.0 * np.power(1.0 + n, 3)
                        + 5.0 * np.power(1.0 + n, 4)
                    )
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n) * (6.0 + n))
                    + S1,
                    3,
                )
                + 0.5
                * (
                    1 / (1.0 + n)
                    + (
                        274.0
                        + 450.0 * (1.0 + n)
                        + 255.0 * np.power(1.0 + n, 2)
                        + 60.0 * np.power(1.0 + n, 3)
                        + 5.0 * np.power(1.0 + n, 4)
                    )
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n) * (6.0 + n))
                    + S1
                )
                * (
                    np.power(1.0 + n, -2)
                    + (
                        21076.0
                        + 62100.0 * (1.0 + n)
                        + 79650.0 * np.power(1.0 + n, 2)
                        + 57660.0 * np.power(1.0 + n, 3)
                        + 25685.0 * np.power(1.0 + n, 4)
                        + 7200.0 * np.power(1.0 + n, 5)
                        + 1240.0 * np.power(1.0 + n, 6)
                        + 120.0 * np.power(1.0 + n, 7)
                        + 5.0 * np.power(1.0 + n, 8)
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                        * np.power(5.0 + n, 2)
                        * np.power(6.0 + n, 2)
                    )
                    + S2
                )
                + 0.3333333333333333
                * (
                    np.power(1.0 + n, -3)
                    + (
                        2.048824e6
                        + 8.4339e6 * (1.0 + n)
                        + 1.595433e7 * np.power(1.0 + n, 2)
                        + 1.831824e7 * np.power(1.0 + n, 3)
                        + 1.419519e7 * np.power(1.0 + n, 4)
                        + 7.80975e6 * np.power(1.0 + n, 5)
                        + 3.124155e6 * np.power(1.0 + n, 6)
                        + 914760.0 * np.power(1.0 + n, 7)
                        + 194445.0 * np.power(1.0 + n, 8)
                        + 29250.0 * np.power(1.0 + n, 9)
                        + 2955.0 * np.power(1.0 + n, 10)
                        + 180.0 * np.power(1.0 + n, 11)
                        + 5.0 * np.power(1.0 + n, 12)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                    )
                    + S3
                )
            )
            / (6.0 + n)
            + n
            * (
                -1.0 / np.power(6.0 + n, 5)
                + 1.0823232337111381 / (6.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (
                            2.0
                            * (5.0 + 2.0 * (1.0 + n))
                            * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                        + S1
                    )
                )
                / np.power(6.0 + n, 4)
                - (
                    1.0
                    * (
                        0.5
                        * np.power(
                            1 / (1.0 + n)
                            + (
                                2.0
                                * (5.0 + 2.0 * (1.0 + n))
                                * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                            )
                            / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                            + S1,
                            2,
                        )
                        + 0.5
                        * (
                            np.power(1.0 + n, -2)
                            + (
                                2.0
                                * (
                                    410.0
                                    + 1030.0 * (1.0 + n)
                                    + 1081.0 * np.power(1.0 + n, 2)
                                    + 600.0 * np.power(1.0 + n, 3)
                                    + 185.0 * np.power(1.0 + n, 4)
                                    + 30.0 * np.power(1.0 + n, 5)
                                    + 2.0 * np.power(1.0 + n, 6)
                                )
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                            )
                            + S2
                        )
                    )
                )
                / np.power(6.0 + n, 3)
                - (
                    1.0
                    * (
                        0.16666666666666666
                        * np.power(
                            1 / (1.0 + n)
                            + (
                                2.0
                                * (5.0 + 2.0 * (1.0 + n))
                                * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                            )
                            / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                            + S1,
                            3,
                        )
                        + 0.5
                        * (
                            1 / (1.0 + n)
                            + (
                                2.0
                                * (5.0 + 2.0 * (1.0 + n))
                                * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                            )
                            / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                            + S1
                        )
                        * (
                            np.power(1.0 + n, -2)
                            + (
                                2.0
                                * (
                                    410.0
                                    + 1030.0 * (1.0 + n)
                                    + 1081.0 * np.power(1.0 + n, 2)
                                    + 600.0 * np.power(1.0 + n, 3)
                                    + 185.0 * np.power(1.0 + n, 4)
                                    + 30.0 * np.power(1.0 + n, 5)
                                    + 2.0 * np.power(1.0 + n, 6)
                                )
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                            )
                            + S2
                        )
                        + 0.3333333333333333
                        * (
                            np.power(1.0 + n, -3)
                            + (
                                2.0
                                * (5.0 + 2.0 * (1.0 + n))
                                * (
                                    1628.0
                                    + 5050.0 * (1.0 + n)
                                    + 6935.0 * np.power(1.0 + n, 2)
                                    + 5495.0 * np.power(1.0 + n, 3)
                                    + 2737.0 * np.power(1.0 + n, 4)
                                    + 875.0 * np.power(1.0 + n, 5)
                                    + 175.0 * np.power(1.0 + n, 6)
                                    + 20.0 * np.power(1.0 + n, 7)
                                    + np.power(1.0 + n, 8)
                                )
                            )
                            / (
                                np.power(2.0 + n, 3)
                                * np.power(3.0 + n, 3)
                                * np.power(4.0 + n, 3)
                                * np.power(5.0 + n, 3)
                            )
                            + S3
                        )
                    )
                )
                / np.power(6.0 + n, 2)
            )
        )
        - 0.10602798528818422
        * (
            (
                0.16666666666666666
                * np.power(
                    1 / (1.0 + n)
                    + (
                        (7.0 + 2.0 * (1.0 + n))
                        * (
                            252.0
                            + 392.0 * (1.0 + n)
                            + 203.0 * np.power(1.0 + n, 2)
                            + 42.0 * np.power(1.0 + n, 3)
                            + 3.0 * np.power(1.0 + n, 4)
                        )
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                    )
                    + S1,
                    3,
                )
                + 0.5
                * (
                    1 / (1.0 + n)
                    + (
                        (7.0 + 2.0 * (1.0 + n))
                        * (
                            252.0
                            + 392.0 * (1.0 + n)
                            + 203.0 * np.power(1.0 + n, 2)
                            + 42.0 * np.power(1.0 + n, 3)
                            + 3.0 * np.power(1.0 + n, 4)
                        )
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                    )
                    + S1
                )
                * (
                    np.power(1.0 + n, -2)
                    + (
                        773136.0
                        + 2.554272e6 * (1.0 + n)
                        + 3.762752e6 * np.power(1.0 + n, 2)
                        + 3.23736e6 * np.power(1.0 + n, 3)
                        + 1.797035e6 * np.power(1.0 + n, 4)
                        + 671790.0 * np.power(1.0 + n, 5)
                        + 171248.0 * np.power(1.0 + n, 6)
                        + 29400.0 * np.power(1.0 + n, 7)
                        + 3255.0 * np.power(1.0 + n, 8)
                        + 210.0 * np.power(1.0 + n, 9)
                        + 6.0 * np.power(1.0 + n, 10)
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                        * np.power(5.0 + n, 2)
                        * np.power(6.0 + n, 2)
                        * np.power(7.0 + n, 2)
                    )
                    + S2
                )
                + 0.3333333333333333
                * (
                    np.power(1.0 + n, -3)
                    + (
                        (7.0 + 2.0 * (1.0 + n))
                        * (
                            6.3467712e7
                            + 2.75413824e8 * (1.0 + n)
                            + 5.54256432e8 * np.power(1.0 + n, 2)
                            + 6.84826352e8 * np.power(1.0 + n, 3)
                            + 5.79544028e8 * np.power(1.0 + n, 4)
                            + 3.54873092e8 * np.power(1.0 + n, 5)
                            + 1.61970683e8 * np.power(1.0 + n, 6)
                            + 5.5932611e7 * np.power(1.0 + n, 7)
                            + 1.4676674e7 * np.power(1.0 + n, 8)
                            + 2.911041e6 * np.power(1.0 + n, 9)
                            + 429534.0 * np.power(1.0 + n, 10)
                            + 45717.0 * np.power(1.0 + n, 11)
                            + 3318.0 * np.power(1.0 + n, 12)
                            + 147.0 * np.power(1.0 + n, 13)
                            + 3.0 * np.power(1.0 + n, 14)
                        )
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                        * np.power(7.0 + n, 3)
                    )
                    + S3
                )
            )
            / (7.0 + n)
            + n
            * (
                -1.0 / np.power(7.0 + n, 5)
                + 1.0823232337111381 / (7.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (
                            274.0
                            + 450.0 * (1.0 + n)
                            + 255.0 * np.power(1.0 + n, 2)
                            + 60.0 * np.power(1.0 + n, 3)
                            + 5.0 * np.power(1.0 + n, 4)
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n) * (6.0 + n))
                        + S1
                    )
                )
                / np.power(7.0 + n, 4)
                - (
                    1.0
                    * (
                        0.5
                        * np.power(
                            1 / (1.0 + n)
                            + (
                                274.0
                                + 450.0 * (1.0 + n)
                                + 255.0 * np.power(1.0 + n, 2)
                                + 60.0 * np.power(1.0 + n, 3)
                                + 5.0 * np.power(1.0 + n, 4)
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                            )
                            + S1,
                            2,
                        )
                        + 0.5
                        * (
                            np.power(1.0 + n, -2)
                            + (
                                21076.0
                                + 62100.0 * (1.0 + n)
                                + 79650.0 * np.power(1.0 + n, 2)
                                + 57660.0 * np.power(1.0 + n, 3)
                                + 25685.0 * np.power(1.0 + n, 4)
                                + 7200.0 * np.power(1.0 + n, 5)
                                + 1240.0 * np.power(1.0 + n, 6)
                                + 120.0 * np.power(1.0 + n, 7)
                                + 5.0 * np.power(1.0 + n, 8)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                                * np.power(6.0 + n, 2)
                            )
                            + S2
                        )
                    )
                )
                / np.power(7.0 + n, 3)
                - (
                    1.0
                    * (
                        0.16666666666666666
                        * np.power(
                            1 / (1.0 + n)
                            + (
                                274.0
                                + 450.0 * (1.0 + n)
                                + 255.0 * np.power(1.0 + n, 2)
                                + 60.0 * np.power(1.0 + n, 3)
                                + 5.0 * np.power(1.0 + n, 4)
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                            )
                            + S1,
                            3,
                        )
                        + 0.5
                        * (
                            1 / (1.0 + n)
                            + (
                                274.0
                                + 450.0 * (1.0 + n)
                                + 255.0 * np.power(1.0 + n, 2)
                                + 60.0 * np.power(1.0 + n, 3)
                                + 5.0 * np.power(1.0 + n, 4)
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                            )
                            + S1
                        )
                        * (
                            np.power(1.0 + n, -2)
                            + (
                                21076.0
                                + 62100.0 * (1.0 + n)
                                + 79650.0 * np.power(1.0 + n, 2)
                                + 57660.0 * np.power(1.0 + n, 3)
                                + 25685.0 * np.power(1.0 + n, 4)
                                + 7200.0 * np.power(1.0 + n, 5)
                                + 1240.0 * np.power(1.0 + n, 6)
                                + 120.0 * np.power(1.0 + n, 7)
                                + 5.0 * np.power(1.0 + n, 8)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                                * np.power(6.0 + n, 2)
                            )
                            + S2
                        )
                        + 0.3333333333333333
                        * (
                            np.power(1.0 + n, -3)
                            + (
                                2.048824e6
                                + 8.4339e6 * (1.0 + n)
                                + 1.595433e7 * np.power(1.0 + n, 2)
                                + 1.831824e7 * np.power(1.0 + n, 3)
                                + 1.419519e7 * np.power(1.0 + n, 4)
                                + 7.80975e6 * np.power(1.0 + n, 5)
                                + 3.124155e6 * np.power(1.0 + n, 6)
                                + 914760.0 * np.power(1.0 + n, 7)
                                + 194445.0 * np.power(1.0 + n, 8)
                                + 29250.0 * np.power(1.0 + n, 9)
                                + 2955.0 * np.power(1.0 + n, 10)
                                + 180.0 * np.power(1.0 + n, 11)
                                + 5.0 * np.power(1.0 + n, 12)
                            )
                            / (
                                np.power(2.0 + n, 3)
                                * np.power(3.0 + n, 3)
                                * np.power(4.0 + n, 3)
                                * np.power(5.0 + n, 3)
                                * np.power(6.0 + n, 3)
                            )
                            + S3
                        )
                    )
                )
                / np.power(7.0 + n, 2)
            )
        )
        + 0.056951717764149916
        * (
            (
                0.16666666666666666
                * np.power(
                    1 / (1.0 + n)
                    + (
                        13068.0
                        + 26264.0 * (1.0 + n)
                        + 20307.0 * np.power(1.0 + n, 2)
                        + 7840.0 * np.power(1.0 + n, 3)
                        + 1610.0 * np.power(1.0 + n, 4)
                        + 168.0 * np.power(1.0 + n, 5)
                        + 7.0 * np.power(1.0 + n, 6)
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                    )
                    + S1,
                    3,
                )
                + 0.5
                * (
                    1 / (1.0 + n)
                    + (
                        13068.0
                        + 26264.0 * (1.0 + n)
                        + 20307.0 * np.power(1.0 + n, 2)
                        + 7840.0 * np.power(1.0 + n, 3)
                        + 1610.0 * np.power(1.0 + n, 4)
                        + 168.0 * np.power(1.0 + n, 5)
                        + 7.0 * np.power(1.0 + n, 6)
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                    )
                    + S1
                )
                * (
                    np.power(1.0 + n, -2)
                    + (
                        3.8402064e7
                        + 1.38523392e8 * (1.0 + n)
                        + 2.26358048e8 * np.power(1.0 + n, 2)
                        + 2.20651312e8 * np.power(1.0 + n, 3)
                        + 1.42622963e8 * np.power(1.0 + n, 4)
                        + 6.434848e7 * np.power(1.0 + n, 5)
                        + 2.07774e7 * np.power(1.0 + n, 6)
                        + 4.838848e6 * np.power(1.0 + n, 7)
                        + 807086.0 * np.power(1.0 + n, 8)
                        + 94080.0 * np.power(1.0 + n, 9)
                        + 7280.0 * np.power(1.0 + n, 10)
                        + 336.0 * np.power(1.0 + n, 11)
                        + 7.0 * np.power(1.0 + n, 12)
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                        * np.power(5.0 + n, 2)
                        * np.power(6.0 + n, 2)
                        * np.power(7.0 + n, 2)
                        * np.power(8.0 + n, 2)
                    )
                    + S2
                )
                + 0.3333333333333333
                * (
                    np.power(1.0 + n, -3)
                    + (
                        1.52759224512e11
                        + 7.72859090304e11 * (1.0 + n)
                        + 1.840340570544e12 * np.power(1.0 + n, 2)
                        + 2.738393029568e12 * np.power(1.0 + n, 3)
                        + 2.850741832092e12 * np.power(1.0 + n, 4)
                        + 2.203027167432e12 * np.power(1.0 + n, 5)
                        + 1.308849323187e12 * np.power(1.0 + n, 6)
                        + 6.10929168192e11 * np.power(1.0 + n, 7)
                        + 2.2702816521e11 * np.power(1.0 + n, 8)
                        + 6.7650709672e10 * np.power(1.0 + n, 9)
                        + 1.6200316881e10 * np.power(1.0 + n, 10)
                        + 3.110018688e9 * np.power(1.0 + n, 11)
                        + 4.75055e8 * np.power(1.0 + n, 12)
                        + 5.6957208e7 * np.power(1.0 + n, 13)
                        + 5.242629e6 * np.power(1.0 + n, 14)
                        + 357504.0 * np.power(1.0 + n, 15)
                        + 17010.0 * np.power(1.0 + n, 16)
                        + 504.0 * np.power(1.0 + n, 17)
                        + 7.0 * np.power(1.0 + n, 18)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                        * np.power(7.0 + n, 3)
                        * np.power(8.0 + n, 3)
                    )
                    + S3
                )
            )
            / (8.0 + n)
            + n
            * (
                -1.0 / np.power(8.0 + n, 5)
                + 1.0823232337111381 / (8.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (
                            (7.0 + 2.0 * (1.0 + n))
                            * (
                                252.0
                                + 392.0 * (1.0 + n)
                                + 203.0 * np.power(1.0 + n, 2)
                                + 42.0 * np.power(1.0 + n, 3)
                                + 3.0 * np.power(1.0 + n, 4)
                            )
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                        )
                        + S1
                    )
                )
                / np.power(8.0 + n, 4)
                - (
                    1.0
                    * (
                        0.5
                        * np.power(
                            1 / (1.0 + n)
                            + (
                                (7.0 + 2.0 * (1.0 + n))
                                * (
                                    252.0
                                    + 392.0 * (1.0 + n)
                                    + 203.0 * np.power(1.0 + n, 2)
                                    + 42.0 * np.power(1.0 + n, 3)
                                    + 3.0 * np.power(1.0 + n, 4)
                                )
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                                * (7.0 + n)
                            )
                            + S1,
                            2,
                        )
                        + 0.5
                        * (
                            np.power(1.0 + n, -2)
                            + (
                                773136.0
                                + 2.554272e6 * (1.0 + n)
                                + 3.762752e6 * np.power(1.0 + n, 2)
                                + 3.23736e6 * np.power(1.0 + n, 3)
                                + 1.797035e6 * np.power(1.0 + n, 4)
                                + 671790.0 * np.power(1.0 + n, 5)
                                + 171248.0 * np.power(1.0 + n, 6)
                                + 29400.0 * np.power(1.0 + n, 7)
                                + 3255.0 * np.power(1.0 + n, 8)
                                + 210.0 * np.power(1.0 + n, 9)
                                + 6.0 * np.power(1.0 + n, 10)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                                * np.power(6.0 + n, 2)
                                * np.power(7.0 + n, 2)
                            )
                            + S2
                        )
                    )
                )
                / np.power(8.0 + n, 3)
                - (
                    1.0
                    * (
                        0.16666666666666666
                        * np.power(
                            1 / (1.0 + n)
                            + (
                                (7.0 + 2.0 * (1.0 + n))
                                * (
                                    252.0
                                    + 392.0 * (1.0 + n)
                                    + 203.0 * np.power(1.0 + n, 2)
                                    + 42.0 * np.power(1.0 + n, 3)
                                    + 3.0 * np.power(1.0 + n, 4)
                                )
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                                * (7.0 + n)
                            )
                            + S1,
                            3,
                        )
                        + 0.5
                        * (
                            1 / (1.0 + n)
                            + (
                                (7.0 + 2.0 * (1.0 + n))
                                * (
                                    252.0
                                    + 392.0 * (1.0 + n)
                                    + 203.0 * np.power(1.0 + n, 2)
                                    + 42.0 * np.power(1.0 + n, 3)
                                    + 3.0 * np.power(1.0 + n, 4)
                                )
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                                * (7.0 + n)
                            )
                            + S1
                        )
                        * (
                            np.power(1.0 + n, -2)
                            + (
                                773136.0
                                + 2.554272e6 * (1.0 + n)
                                + 3.762752e6 * np.power(1.0 + n, 2)
                                + 3.23736e6 * np.power(1.0 + n, 3)
                                + 1.797035e6 * np.power(1.0 + n, 4)
                                + 671790.0 * np.power(1.0 + n, 5)
                                + 171248.0 * np.power(1.0 + n, 6)
                                + 29400.0 * np.power(1.0 + n, 7)
                                + 3255.0 * np.power(1.0 + n, 8)
                                + 210.0 * np.power(1.0 + n, 9)
                                + 6.0 * np.power(1.0 + n, 10)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                                * np.power(6.0 + n, 2)
                                * np.power(7.0 + n, 2)
                            )
                            + S2
                        )
                        + 0.3333333333333333
                        * (
                            np.power(1.0 + n, -3)
                            + (
                                (7.0 + 2.0 * (1.0 + n))
                                * (
                                    6.3467712e7
                                    + 2.75413824e8 * (1.0 + n)
                                    + 5.54256432e8 * np.power(1.0 + n, 2)
                                    + 6.84826352e8 * np.power(1.0 + n, 3)
                                    + 5.79544028e8 * np.power(1.0 + n, 4)
                                    + 3.54873092e8 * np.power(1.0 + n, 5)
                                    + 1.61970683e8 * np.power(1.0 + n, 6)
                                    + 5.5932611e7 * np.power(1.0 + n, 7)
                                    + 1.4676674e7 * np.power(1.0 + n, 8)
                                    + 2.911041e6 * np.power(1.0 + n, 9)
                                    + 429534.0 * np.power(1.0 + n, 10)
                                    + 45717.0 * np.power(1.0 + n, 11)
                                    + 3318.0 * np.power(1.0 + n, 12)
                                    + 147.0 * np.power(1.0 + n, 13)
                                    + 3.0 * np.power(1.0 + n, 14)
                                )
                            )
                            / (
                                np.power(2.0 + n, 3)
                                * np.power(3.0 + n, 3)
                                * np.power(4.0 + n, 3)
                                * np.power(5.0 + n, 3)
                                * np.power(6.0 + n, 3)
                                * np.power(7.0 + n, 3)
                            )
                            + S3
                        )
                    )
                )
                / np.power(8.0 + n, 2)
            )
        )
        - 0.019847559824380426
        * (
            (
                0.16666666666666666
                * np.power(
                    1 / (1.0 + n)
                    + (
                        4.0
                        * (9.0 + 2.0 * (1.0 + n))
                        * (
                            3044.0
                            + 5886.0 * (1.0 + n)
                            + 4299.0 * np.power(1.0 + n, 2)
                            + 1539.0 * np.power(1.0 + n, 3)
                            + 288.0 * np.power(1.0 + n, 4)
                            + 27.0 * np.power(1.0 + n, 5)
                            + np.power(1.0 + n, 6)
                        )
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                        * (9.0 + n)
                    )
                    + S1,
                    3,
                )
                + 0.5
                * (
                    1 / (1.0 + n)
                    + (
                        4.0
                        * (9.0 + 2.0 * (1.0 + n))
                        * (
                            3044.0
                            + 5886.0 * (1.0 + n)
                            + 4299.0 * np.power(1.0 + n, 2)
                            + 1539.0 * np.power(1.0 + n, 3)
                            + 288.0 * np.power(1.0 + n, 4)
                            + 27.0 * np.power(1.0 + n, 5)
                            + np.power(1.0 + n, 6)
                        )
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                        * (9.0 + n)
                    )
                    + S1
                )
                * (
                    np.power(1.0 + n, -2)
                    + (
                        4.0
                        * (
                            6.20783424e8
                            + 2.402913888e9 * (1.0 + n)
                            + 4.261208648e9 * np.power(1.0 + n, 2)
                            + 4.5733464e9 * np.power(1.0 + n, 3)
                            + 3.31344237e9 * np.power(1.0 + n, 4)
                            + 1.713293694e9 * np.power(1.0 + n, 5)
                            + 6.51986769e8 * np.power(1.0 + n, 6)
                            + 1.85551632e8 * np.power(1.0 + n, 7)
                            + 3.9703709e7 * np.power(1.0 + n, 8)
                            + 6.360228e6 * np.power(1.0 + n, 9)
                            + 751317.0 * np.power(1.0 + n, 10)
                            + 63504.0 * np.power(1.0 + n, 11)
                            + 3633.0 * np.power(1.0 + n, 12)
                            + 126.0 * np.power(1.0 + n, 13)
                            + 2.0 * np.power(1.0 + n, 14)
                        )
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                        * np.power(5.0 + n, 2)
                        * np.power(6.0 + n, 2)
                        * np.power(7.0 + n, 2)
                        * np.power(8.0 + n, 2)
                        * np.power(9.0 + n, 2)
                    )
                    + S2
                )
                + 0.3333333333333333
                * (
                    np.power(1.0 + n, -3)
                    + (
                        4.0
                        * (9.0 + 2.0 * (1.0 + n))
                        * (
                            2.176131861504e12
                            + 1.135056707712e13 * (1.0 + n)
                            + 2.7974661270464e13 * np.power(1.0 + n, 2)
                            + 4.3284545841312e13 * np.power(1.0 + n, 3)
                            + 4.7115984701808e13 * np.power(1.0 + n, 4)
                            + 3.8323387681704e13 * np.power(1.0 + n, 5)
                            + 2.4153337475604e13 * np.power(1.0 + n, 6)
                            + 1.2072584201292e13 * np.power(1.0 + n, 7)
                            + 4.858675624797e12 * np.power(1.0 + n, 8)
                            + 1.589624084295e12 * np.power(1.0 + n, 9)
                            + 4.25052833112e11 * np.power(1.0 + n, 10)
                            + 9.304706925e10 * np.power(1.0 + n, 11)
                            + 1.6646348871e10 * np.power(1.0 + n, 12)
                            + 2.420753526e9 * np.power(1.0 + n, 13)
                            + 2.8338678e8 * np.power(1.0 + n, 14)
                            + 2.6298432e7 * np.power(1.0 + n, 15)
                            + 1.889595e6 * np.power(1.0 + n, 16)
                            + 101331.0 * np.power(1.0 + n, 17)
                            + 3816.0 * np.power(1.0 + n, 18)
                            + 90.0 * np.power(1.0 + n, 19)
                            + np.power(1.0 + n, 20)
                        )
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                        * np.power(7.0 + n, 3)
                        * np.power(8.0 + n, 3)
                        * np.power(9.0 + n, 3)
                    )
                    + S3
                )
            )
            / (9.0 + n)
            + n
            * (
                -1.0 / np.power(9.0 + n, 5)
                + 1.0823232337111381 / (9.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (
                            13068.0
                            + 26264.0 * (1.0 + n)
                            + 20307.0 * np.power(1.0 + n, 2)
                            + 7840.0 * np.power(1.0 + n, 3)
                            + 1610.0 * np.power(1.0 + n, 4)
                            + 168.0 * np.power(1.0 + n, 5)
                            + 7.0 * np.power(1.0 + n, 6)
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                        )
                        + S1
                    )
                )
                / np.power(9.0 + n, 4)
                - (
                    1.0
                    * (
                        0.5
                        * np.power(
                            1 / (1.0 + n)
                            + (
                                13068.0
                                + 26264.0 * (1.0 + n)
                                + 20307.0 * np.power(1.0 + n, 2)
                                + 7840.0 * np.power(1.0 + n, 3)
                                + 1610.0 * np.power(1.0 + n, 4)
                                + 168.0 * np.power(1.0 + n, 5)
                                + 7.0 * np.power(1.0 + n, 6)
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                                * (7.0 + n)
                                * (8.0 + n)
                            )
                            + S1,
                            2,
                        )
                        + 0.5
                        * (
                            np.power(1.0 + n, -2)
                            + (
                                3.8402064e7
                                + 1.38523392e8 * (1.0 + n)
                                + 2.26358048e8 * np.power(1.0 + n, 2)
                                + 2.20651312e8 * np.power(1.0 + n, 3)
                                + 1.42622963e8 * np.power(1.0 + n, 4)
                                + 6.434848e7 * np.power(1.0 + n, 5)
                                + 2.07774e7 * np.power(1.0 + n, 6)
                                + 4.838848e6 * np.power(1.0 + n, 7)
                                + 807086.0 * np.power(1.0 + n, 8)
                                + 94080.0 * np.power(1.0 + n, 9)
                                + 7280.0 * np.power(1.0 + n, 10)
                                + 336.0 * np.power(1.0 + n, 11)
                                + 7.0 * np.power(1.0 + n, 12)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                                * np.power(6.0 + n, 2)
                                * np.power(7.0 + n, 2)
                                * np.power(8.0 + n, 2)
                            )
                            + S2
                        )
                    )
                )
                / np.power(9.0 + n, 3)
                - (
                    1.0
                    * (
                        0.16666666666666666
                        * np.power(
                            1 / (1.0 + n)
                            + (
                                13068.0
                                + 26264.0 * (1.0 + n)
                                + 20307.0 * np.power(1.0 + n, 2)
                                + 7840.0 * np.power(1.0 + n, 3)
                                + 1610.0 * np.power(1.0 + n, 4)
                                + 168.0 * np.power(1.0 + n, 5)
                                + 7.0 * np.power(1.0 + n, 6)
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                                * (7.0 + n)
                                * (8.0 + n)
                            )
                            + S1,
                            3,
                        )
                        + 0.5
                        * (
                            1 / (1.0 + n)
                            + (
                                13068.0
                                + 26264.0 * (1.0 + n)
                                + 20307.0 * np.power(1.0 + n, 2)
                                + 7840.0 * np.power(1.0 + n, 3)
                                + 1610.0 * np.power(1.0 + n, 4)
                                + 168.0 * np.power(1.0 + n, 5)
                                + 7.0 * np.power(1.0 + n, 6)
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                                * (7.0 + n)
                                * (8.0 + n)
                            )
                            + S1
                        )
                        * (
                            np.power(1.0 + n, -2)
                            + (
                                3.8402064e7
                                + 1.38523392e8 * (1.0 + n)
                                + 2.26358048e8 * np.power(1.0 + n, 2)
                                + 2.20651312e8 * np.power(1.0 + n, 3)
                                + 1.42622963e8 * np.power(1.0 + n, 4)
                                + 6.434848e7 * np.power(1.0 + n, 5)
                                + 2.07774e7 * np.power(1.0 + n, 6)
                                + 4.838848e6 * np.power(1.0 + n, 7)
                                + 807086.0 * np.power(1.0 + n, 8)
                                + 94080.0 * np.power(1.0 + n, 9)
                                + 7280.0 * np.power(1.0 + n, 10)
                                + 336.0 * np.power(1.0 + n, 11)
                                + 7.0 * np.power(1.0 + n, 12)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                                * np.power(6.0 + n, 2)
                                * np.power(7.0 + n, 2)
                                * np.power(8.0 + n, 2)
                            )
                            + S2
                        )
                        + 0.3333333333333333
                        * (
                            np.power(1.0 + n, -3)
                            + (
                                1.52759224512e11
                                + 7.72859090304e11 * (1.0 + n)
                                + 1.840340570544e12 * np.power(1.0 + n, 2)
                                + 2.738393029568e12 * np.power(1.0 + n, 3)
                                + 2.850741832092e12 * np.power(1.0 + n, 4)
                                + 2.203027167432e12 * np.power(1.0 + n, 5)
                                + 1.308849323187e12 * np.power(1.0 + n, 6)
                                + 6.10929168192e11 * np.power(1.0 + n, 7)
                                + 2.2702816521e11 * np.power(1.0 + n, 8)
                                + 6.7650709672e10 * np.power(1.0 + n, 9)
                                + 1.6200316881e10 * np.power(1.0 + n, 10)
                                + 3.110018688e9 * np.power(1.0 + n, 11)
                                + 4.75055e8 * np.power(1.0 + n, 12)
                                + 5.6957208e7 * np.power(1.0 + n, 13)
                                + 5.242629e6 * np.power(1.0 + n, 14)
                                + 357504.0 * np.power(1.0 + n, 15)
                                + 17010.0 * np.power(1.0 + n, 16)
                                + 504.0 * np.power(1.0 + n, 17)
                                + 7.0 * np.power(1.0 + n, 18)
                            )
                            / (
                                np.power(2.0 + n, 3)
                                * np.power(3.0 + n, 3)
                                * np.power(4.0 + n, 3)
                                * np.power(5.0 + n, 3)
                                * np.power(6.0 + n, 3)
                                * np.power(7.0 + n, 3)
                                * np.power(8.0 + n, 3)
                            )
                            + S3
                        )
                    )
                )
                / np.power(9.0 + n, 2)
            )
        )
        + 0.003243204652309423
        * (
            (
                0.16666666666666666
                * np.power(
                    1 / (1.0 + n)
                    + (
                        3.0
                        * (
                            342192.0
                            + 781800.0 * (1.0 + n)
                            + 723680.0 * np.power(1.0 + n, 2)
                            + 359100.0 * np.power(1.0 + n, 3)
                            + 105455.0 * np.power(1.0 + n, 4)
                            + 18900.0 * np.power(1.0 + n, 5)
                            + 2030.0 * np.power(1.0 + n, 6)
                            + 120.0 * np.power(1.0 + n, 7)
                            + 3.0 * np.power(1.0 + n, 8)
                        )
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                        * (9.0 + n)
                        * (10.0 + n)
                    )
                    + S1,
                    3,
                )
                + 0.5
                * (
                    1 / (1.0 + n)
                    + (
                        3.0
                        * (
                            342192.0
                            + 781800.0 * (1.0 + n)
                            + 723680.0 * np.power(1.0 + n, 2)
                            + 359100.0 * np.power(1.0 + n, 3)
                            + 105455.0 * np.power(1.0 + n, 4)
                            + 18900.0 * np.power(1.0 + n, 5)
                            + 2030.0 * np.power(1.0 + n, 6)
                            + 120.0 * np.power(1.0 + n, 7)
                            + 3.0 * np.power(1.0 + n, 8)
                        )
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                        * (9.0 + n)
                        * (10.0 + n)
                    )
                    + S1
                )
                * (
                    np.power(1.0 + n, -2)
                    + (
                        3.0
                        * (
                            6.7586510592e10
                            + 2.7735912e11 * (1.0 + n)
                            + 5.25886236e11 * np.power(1.0 + n, 2)
                            + 6.098325648e11 * np.power(1.0 + n, 3)
                            + 4.8346372324e11 * np.power(1.0 + n, 4)
                            + 2.77716663e11 * np.power(1.0 + n, 5)
                            + 1.195744907e11 * np.power(1.0 + n, 6)
                            + 3.937668588e10 * np.power(1.0 + n, 7)
                            + 1.0027662147e10 * np.power(1.0 + n, 8)
                            + 1.982481e9 * np.power(1.0 + n, 9)
                            + 3.0344942e8 * np.power(1.0 + n, 10)
                            + 3.560508e7 * np.power(1.0 + n, 11)
                            + 3.141418e6 * np.power(1.0 + n, 12)
                            + 201600.0 * np.power(1.0 + n, 13)
                            + 8880.0 * np.power(1.0 + n, 14)
                            + 240.0 * np.power(1.0 + n, 15)
                            + 3.0 * np.power(1.0 + n, 16)
                        )
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                        * np.power(5.0 + n, 2)
                        * np.power(6.0 + n, 2)
                        * np.power(7.0 + n, 2)
                        * np.power(8.0 + n, 2)
                        * np.power(9.0 + n, 2)
                        * np.power(10.0 + n, 2)
                    )
                    + S2
                )
                + 0.3333333333333333
                * (
                    np.power(1.0 + n, -3)
                    + (
                        3.0
                        * (
                            1.905865096469299e16
                            + 1.100489126093568e17 * (1.0 + n)
                            + 3.026775163197197e17 * np.power(1.0 + n, 2)
                            + 5.274174874222368e17 * np.power(1.0 + n, 3)
                            + 6.532963289874519e17 * np.power(1.0 + n, 4)
                            + 6.118731135138024e17 * np.power(1.0 + n, 5)
                            + 4.5005054609223366e17 * np.power(1.0 + n, 6)
                            + 2.6656016992225488e17 * np.power(1.0 + n, 7)
                            + 1.2935179046741138e17 * np.power(1.0 + n, 8)
                            + 5.2054701631938e16 * np.power(1.0 + n, 9)
                            + 1.751929057804686e16 * np.power(1.0 + n, 10)
                            + 4.95861919609626e15 * np.power(1.0 + n, 11)
                            + 1.184087108357771e15 * np.power(1.0 + n, 12)
                            + 2.388131885349e14 * np.power(1.0 + n, 13)
                            + 4.064171822907e13 * np.power(1.0 + n, 14)
                            + 5.818192578e12 * np.power(1.0 + n, 15)
                            + 6.96833685225e11 * np.power(1.0 + n, 16)
                            + 6.92402094e10 * np.power(1.0 + n, 17)
                            + 5.63902616e9 * np.power(1.0 + n, 18)
                            + 3.699297e8 * np.power(1.0 + n, 19)
                            + 1.9060797e7 * np.power(1.0 + n, 20)
                            + 742500.0 * np.power(1.0 + n, 21)
                            + 20550.0 * np.power(1.0 + n, 22)
                            + 360.0 * np.power(1.0 + n, 23)
                            + 3.0 * np.power(1.0 + n, 24)
                        )
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                        * np.power(7.0 + n, 3)
                        * np.power(8.0 + n, 3)
                        * np.power(9.0 + n, 3)
                        * np.power(10.0 + n, 3)
                    )
                    + S3
                )
            )
            / (10.0 + n)
            + n
            * (
                -1.0 / np.power(10.0 + n, 5)
                + 1.0823232337111381 / (10.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (
                            4.0
                            * (9.0 + 2.0 * (1.0 + n))
                            * (
                                3044.0
                                + 5886.0 * (1.0 + n)
                                + 4299.0 * np.power(1.0 + n, 2)
                                + 1539.0 * np.power(1.0 + n, 3)
                                + 288.0 * np.power(1.0 + n, 4)
                                + 27.0 * np.power(1.0 + n, 5)
                                + np.power(1.0 + n, 6)
                            )
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                            * (9.0 + n)
                        )
                        + S1
                    )
                )
                / np.power(10.0 + n, 4)
                - (
                    1.0
                    * (
                        0.5
                        * np.power(
                            1 / (1.0 + n)
                            + (
                                4.0
                                * (9.0 + 2.0 * (1.0 + n))
                                * (
                                    3044.0
                                    + 5886.0 * (1.0 + n)
                                    + 4299.0 * np.power(1.0 + n, 2)
                                    + 1539.0 * np.power(1.0 + n, 3)
                                    + 288.0 * np.power(1.0 + n, 4)
                                    + 27.0 * np.power(1.0 + n, 5)
                                    + np.power(1.0 + n, 6)
                                )
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                                * (7.0 + n)
                                * (8.0 + n)
                                * (9.0 + n)
                            )
                            + S1,
                            2,
                        )
                        + 0.5
                        * (
                            np.power(1.0 + n, -2)
                            + (
                                4.0
                                * (
                                    6.20783424e8
                                    + 2.402913888e9 * (1.0 + n)
                                    + 4.261208648e9 * np.power(1.0 + n, 2)
                                    + 4.5733464e9 * np.power(1.0 + n, 3)
                                    + 3.31344237e9 * np.power(1.0 + n, 4)
                                    + 1.713293694e9 * np.power(1.0 + n, 5)
                                    + 6.51986769e8 * np.power(1.0 + n, 6)
                                    + 1.85551632e8 * np.power(1.0 + n, 7)
                                    + 3.9703709e7 * np.power(1.0 + n, 8)
                                    + 6.360228e6 * np.power(1.0 + n, 9)
                                    + 751317.0 * np.power(1.0 + n, 10)
                                    + 63504.0 * np.power(1.0 + n, 11)
                                    + 3633.0 * np.power(1.0 + n, 12)
                                    + 126.0 * np.power(1.0 + n, 13)
                                    + 2.0 * np.power(1.0 + n, 14)
                                )
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                                * np.power(6.0 + n, 2)
                                * np.power(7.0 + n, 2)
                                * np.power(8.0 + n, 2)
                                * np.power(9.0 + n, 2)
                            )
                            + S2
                        )
                    )
                )
                / np.power(10.0 + n, 3)
                - (
                    1.0
                    * (
                        0.16666666666666666
                        * np.power(
                            1 / (1.0 + n)
                            + (
                                4.0
                                * (9.0 + 2.0 * (1.0 + n))
                                * (
                                    3044.0
                                    + 5886.0 * (1.0 + n)
                                    + 4299.0 * np.power(1.0 + n, 2)
                                    + 1539.0 * np.power(1.0 + n, 3)
                                    + 288.0 * np.power(1.0 + n, 4)
                                    + 27.0 * np.power(1.0 + n, 5)
                                    + np.power(1.0 + n, 6)
                                )
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                                * (7.0 + n)
                                * (8.0 + n)
                                * (9.0 + n)
                            )
                            + S1,
                            3,
                        )
                        + 0.5
                        * (
                            1 / (1.0 + n)
                            + (
                                4.0
                                * (9.0 + 2.0 * (1.0 + n))
                                * (
                                    3044.0
                                    + 5886.0 * (1.0 + n)
                                    + 4299.0 * np.power(1.0 + n, 2)
                                    + 1539.0 * np.power(1.0 + n, 3)
                                    + 288.0 * np.power(1.0 + n, 4)
                                    + 27.0 * np.power(1.0 + n, 5)
                                    + np.power(1.0 + n, 6)
                                )
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                                * (7.0 + n)
                                * (8.0 + n)
                                * (9.0 + n)
                            )
                            + S1
                        )
                        * (
                            np.power(1.0 + n, -2)
                            + (
                                4.0
                                * (
                                    6.20783424e8
                                    + 2.402913888e9 * (1.0 + n)
                                    + 4.261208648e9 * np.power(1.0 + n, 2)
                                    + 4.5733464e9 * np.power(1.0 + n, 3)
                                    + 3.31344237e9 * np.power(1.0 + n, 4)
                                    + 1.713293694e9 * np.power(1.0 + n, 5)
                                    + 6.51986769e8 * np.power(1.0 + n, 6)
                                    + 1.85551632e8 * np.power(1.0 + n, 7)
                                    + 3.9703709e7 * np.power(1.0 + n, 8)
                                    + 6.360228e6 * np.power(1.0 + n, 9)
                                    + 751317.0 * np.power(1.0 + n, 10)
                                    + 63504.0 * np.power(1.0 + n, 11)
                                    + 3633.0 * np.power(1.0 + n, 12)
                                    + 126.0 * np.power(1.0 + n, 13)
                                    + 2.0 * np.power(1.0 + n, 14)
                                )
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                                * np.power(6.0 + n, 2)
                                * np.power(7.0 + n, 2)
                                * np.power(8.0 + n, 2)
                                * np.power(9.0 + n, 2)
                            )
                            + S2
                        )
                        + 0.3333333333333333
                        * (
                            np.power(1.0 + n, -3)
                            + (
                                4.0
                                * (9.0 + 2.0 * (1.0 + n))
                                * (
                                    2.176131861504e12
                                    + 1.135056707712e13 * (1.0 + n)
                                    + 2.7974661270464e13 * np.power(1.0 + n, 2)
                                    + 4.3284545841312e13 * np.power(1.0 + n, 3)
                                    + 4.7115984701808e13 * np.power(1.0 + n, 4)
                                    + 3.8323387681704e13 * np.power(1.0 + n, 5)
                                    + 2.4153337475604e13 * np.power(1.0 + n, 6)
                                    + 1.2072584201292e13 * np.power(1.0 + n, 7)
                                    + 4.858675624797e12 * np.power(1.0 + n, 8)
                                    + 1.589624084295e12 * np.power(1.0 + n, 9)
                                    + 4.25052833112e11 * np.power(1.0 + n, 10)
                                    + 9.304706925e10 * np.power(1.0 + n, 11)
                                    + 1.6646348871e10 * np.power(1.0 + n, 12)
                                    + 2.420753526e9 * np.power(1.0 + n, 13)
                                    + 2.8338678e8 * np.power(1.0 + n, 14)
                                    + 2.6298432e7 * np.power(1.0 + n, 15)
                                    + 1.889595e6 * np.power(1.0 + n, 16)
                                    + 101331.0 * np.power(1.0 + n, 17)
                                    + 3816.0 * np.power(1.0 + n, 18)
                                    + 90.0 * np.power(1.0 + n, 19)
                                    + np.power(1.0 + n, 20)
                                )
                            )
                            / (
                                np.power(2.0 + n, 3)
                                * np.power(3.0 + n, 3)
                                * np.power(4.0 + n, 3)
                                * np.power(5.0 + n, 3)
                                * np.power(6.0 + n, 3)
                                * np.power(7.0 + n, 3)
                                * np.power(8.0 + n, 3)
                                * np.power(9.0 + n, 3)
                            )
                            + S3
                        )
                    )
                )
                / np.power(10.0 + n, 2)
            )
        )
    )


@nb.njit("c16(c16,c16)", cache=True)
def F9(n, S1):
    return (
        0.06236473052300693 * n
        + (0.2690947900632558 * n) / (2.0 + n)
        - (0.12825410062391376 * n) / (3.0 + n)
        + (0.007553694508943639 * n) / (4.0 + n)
        + (0.030446610389993342 * n) / (5.0 + n)
        - (0.11774020607944516 * n) / (6.0 + n)
        + (0.33716180147388786 * n) / (7.0 + n)
        - (0.6676623948212598 * n) / (8.0 + n)
        + (0.9225597682535133 * n) / (9.0 + n)
        - (0.8726283036193748 * n) / (10.0 + n)
        + (0.5398117849858193 * n) / (11.0 + n)
        - (0.1970839223372511 * n) / (12.0 + n)
        + (0.03230590731253853 * n) / (13.0 + n)
        + 0.21793029342350395 * (-1.0 + 1 / (1.0 + n))
        - 0.000925925925925926
        * n
        * (
            67.35391078053772
            + 993.5438760599122 / (1.0 + n)
            + 185.10074515651877 / (2.0 + n)
            - 21.841303653529422 / (3.0 + n)
            + (180.0 * (1.0 + (1.0 + n) * S1)) / np.power(1.0 + n, 2)
            - (180.0 * (1.0 + (2.0 + n) * (1 / (1.0 + n) + S1))) / np.power(2.0 + n, 2)
            + (60.0 * (1.0 + (3.0 + n) * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)))
            / np.power(3.0 + n, 2)
            - (
                1228.9090924080292
                * (
                    1.0
                    + n
                    * (1 / (1.0 + n) + (1.0 - 2.0 * (1.0 + n)) / (n * (1.0 + n)) + S1)
                )
            )
            / np.power(n, 2)
        )
    )


@nb.njit("c16(c16,c16,c16,c16,c16,c16)", cache=True)
def F16(n, S1, Sm1, Sm2, Sm3, Sm21):
    return (
        -0.23444040559418688
        - 0.9999999952263307
        * (
            -0.419833592426477 / (1.0 + n)
            - (0.18119485915332012 * np.power(-1.0, 1.0 + n)) / (1.0 + n)
            - (0.6010284515797971 * np.power(-1.0, 2.0 + n)) / (1.0 + n)
            - (0.8224670334241131 * np.power(-1.0, 1.0 + n) * (1 / (1.0 + n) + S1))
            / (1.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 2.0 + n)
                * (Sm1 - (1.0 * np.power(-1.0, n)) / (1.0 + n))
            )
            / (1.0 + n)
            + (
                np.power(-1.0, 2.0 + n)
                * (
                    -1.0 * Sm21
                    + Sm3
                    + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                    + (1 / (1.0 + n) + S1)
                    * (Sm2 - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2))
                )
            )
            / (1.0 + n)
            + n
            * (
                np.power(1.0 + n, -5)
                - 0.8224670334241131 / np.power(1.0 + n, 3)
                - (0.8224670334241131 * np.power(-1.0, n)) / np.power(1.0 + n, 3)
                + 0.419833592426477 / np.power(1.0 + n, 2)
                + (1.6218904955860713 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                + (1.2020569031595942 * np.power(-1.0, 1.0 + n)) / np.power(1.0 + n, 2)
                - 0.3382260105347306 / (1.0 + n)
                - (0.8224670334241131 * np.power(-1.0, n) * S1) / np.power(1.0 + n, 2)
                - (0.8224670334241131 * np.power(-1.0, 1.0 + n) * Sm1)
                / np.power(1.0 + n, 2)
                + (np.power(-1.0, 1.0 + n) * Sm2) / np.power(1.0 + n, 3)
                + (
                    np.power(-1.0, 1.0 + n)
                    * (
                        S1 * Sm2
                        - 1.0 * Sm21
                        + Sm3
                        + np.power(-1.0, n) / np.power(1.0 + n, 3)
                        + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (1.0 * (1 / (1.0 + n) + S1) * np.power(-1.0, n))
                        / np.power(1.0 + n, 2)
                    )
                )
                / np.power(1.0 + n, 2)
            )
        )
        + 0.49999902059348167
        * (
            -0.419833592426477 / (2.0 + n)
            - (0.18119485915332012 * np.power(-1.0, 2.0 + n)) / (2.0 + n)
            - (0.6010284515797971 * np.power(-1.0, 3.0 + n)) / (2.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 2.0 + n)
                * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)
            )
            / (2.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 3.0 + n)
                * (
                    Sm1
                    - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                    + np.power(-1.0, n) / (2.0 + n)
                )
            )
            / (2.0 + n)
            + (
                np.power(-1.0, 3.0 + n)
                * (
                    -1.0 * Sm21
                    + Sm3
                    + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                    - (1.0 * (1 / (1.0 + n) + S1) * np.power(-1.0, n))
                    / np.power(2.0 + n, 2)
                    + (1 / (1.0 + n) + 1 / (2.0 + n) + S1)
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + np.power(-1.0, n) / np.power(2.0 + n, 2)
                    )
                )
            )
            / (2.0 + n)
            + n
            * (
                np.power(2.0 + n, -5)
                - 0.8224670334241131 / np.power(2.0 + n, 3)
                - (0.8224670334241131 * np.power(-1.0, 1.0 + n)) / np.power(2.0 + n, 3)
                + 0.419833592426477 / np.power(2.0 + n, 2)
                + (1.6218904955860713 * np.power(-1.0, 1.0 + n)) / np.power(2.0 + n, 2)
                + (1.2020569031595942 * np.power(-1.0, 2.0 + n)) / np.power(2.0 + n, 2)
                - 0.3382260105347306 / (2.0 + n)
                - (0.8224670334241131 * np.power(-1.0, 1.0 + n) * (1 / (1.0 + n) + S1))
                / np.power(2.0 + n, 2)
                + (
                    np.power(-1.0, 2.0 + n)
                    * (Sm2 - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2))
                )
                / np.power(2.0 + n, 3)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 2.0 + n)
                    * (Sm1 - (1.0 * np.power(-1.0, n)) / (1.0 + n))
                )
                / np.power(2.0 + n, 2)
                + (
                    np.power(-1.0, 2.0 + n)
                    * (
                        -1.0 * Sm21
                        + Sm3
                        + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + (1 / (1.0 + n) + S1)
                        * (Sm2 - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2))
                    )
                )
                / np.power(2.0 + n, 2)
            )
        )
        - 0.3332995604546604
        * (
            -0.419833592426477 / (3.0 + n)
            - (0.18119485915332012 * np.power(-1.0, 3.0 + n)) / (3.0 + n)
            - (0.6010284515797971 * np.power(-1.0, 4.0 + n)) / (3.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 3.0 + n)
                * (
                    1 / (1.0 + n)
                    + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                    + S1
                )
            )
            / (3.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 4.0 + n)
                * (
                    Sm1
                    - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                    + np.power(-1.0, n) / ((2.0 + n) * (3.0 + n))
                )
            )
            / (3.0 + n)
            + (
                np.power(-1.0, 4.0 + n)
                * (
                    -1.0 * Sm21
                    + Sm3
                    - (
                        1.0
                        * (-7.0 - 9.0 * (1.0 + n) - 3.0 * np.power(1.0 + n, 2))
                        * np.power(-1.0, n)
                    )
                    / (np.power(2.0 + n, 3) * np.power(3.0 + n, 3))
                    + (
                        (
                            -5.0
                            - 4.0 * (1.0 + n)
                            + np.power(1.0 + n, 2)
                            + np.power(1.0 + n, 3)
                        )
                        * np.power(-1.0, n)
                    )
                    / (np.power(2.0 + n, 3) * np.power(3.0 + n, 3))
                    + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                    + (
                        (-3.0 - 2.0 * (1.0 + n))
                        * (1 / (1.0 + n) + S1)
                        * np.power(-1.0, n)
                    )
                    / (np.power(2.0 + n, 2) * np.power(3.0 + n, 2))
                    + (
                        1 / (1.0 + n)
                        + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                        + S1
                    )
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (1.0 * (-3.0 - 2.0 * (1.0 + n)) * np.power(-1.0, n))
                        / (np.power(2.0 + n, 2) * np.power(3.0 + n, 2))
                    )
                )
            )
            / (3.0 + n)
            + n
            * (
                np.power(3.0 + n, -5)
                - 0.8224670334241131 / np.power(3.0 + n, 3)
                - (0.8224670334241131 * np.power(-1.0, 2.0 + n)) / np.power(3.0 + n, 3)
                + 0.419833592426477 / np.power(3.0 + n, 2)
                + (1.6218904955860713 * np.power(-1.0, 2.0 + n)) / np.power(3.0 + n, 2)
                + (1.2020569031595942 * np.power(-1.0, 3.0 + n)) / np.power(3.0 + n, 2)
                - 0.3382260105347306 / (3.0 + n)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 2.0 + n)
                    * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)
                )
                / np.power(3.0 + n, 2)
                + (
                    np.power(-1.0, 3.0 + n)
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + np.power(-1.0, n) / np.power(2.0 + n, 2)
                    )
                )
                / np.power(3.0 + n, 3)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 3.0 + n)
                    * (
                        Sm1
                        - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                        + np.power(-1.0, n) / (2.0 + n)
                    )
                )
                / np.power(3.0 + n, 2)
                + (
                    np.power(-1.0, 3.0 + n)
                    * (
                        -1.0 * Sm21
                        + Sm3
                        + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (1.0 * (1 / (1.0 + n) + S1) * np.power(-1.0, n))
                        / np.power(2.0 + n, 2)
                        + (1 / (1.0 + n) + 1 / (2.0 + n) + S1)
                        * (
                            Sm2
                            - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                            + np.power(-1.0, n) / np.power(2.0 + n, 2)
                        )
                    )
                )
                / np.power(3.0 + n, 2)
            )
        )
        + 0.24954082848379078
        * (
            -0.419833592426477 / (4.0 + n)
            - (0.18119485915332012 * np.power(-1.0, 4.0 + n)) / (4.0 + n)
            - (0.6010284515797971 * np.power(-1.0, 5.0 + n)) / (4.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 4.0 + n)
                * (
                    1 / (1.0 + n)
                    + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                    + S1
                )
            )
            / (4.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 5.0 + n)
                * (
                    Sm1
                    - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                    - (
                        1.0
                        * (-5.0 - 4.0 * (1.0 + n) - 1.0 * np.power(1.0 + n, 2))
                        * np.power(-1.0, n)
                    )
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                )
            )
            / (4.0 + n)
            + (
                np.power(-1.0, 5.0 + n)
                * (
                    -1.0 * Sm21
                    + Sm3
                    + (
                        (
                            -179.0
                            - 423.0 * (1.0 + n)
                            - 425.0 * np.power(1.0 + n, 2)
                            - 245.0 * np.power(1.0 + n, 3)
                            - 90.0 * np.power(1.0 + n, 4)
                            - 20.0 * np.power(1.0 + n, 5)
                            - 2.0 * np.power(1.0 + n, 6)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                    )
                    - (
                        1.0
                        * (
                            -197.0
                            - 468.0 * (1.0 + n)
                            - 453.0 * np.power(1.0 + n, 2)
                            - 232.0 * np.power(1.0 + n, 3)
                            - 69.0 * np.power(1.0 + n, 4)
                            - 12.0 * np.power(1.0 + n, 5)
                            - 1.0 * np.power(1.0 + n, 6)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                    )
                    + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                    + (
                        (
                            -31.0
                            - 48.0 * (1.0 + n)
                            - 28.0 * np.power(1.0 + n, 2)
                            - 8.0 * np.power(1.0 + n, 3)
                            - 1.0 * np.power(1.0 + n, 4)
                        )
                        * (1 / (1.0 + n) + S1)
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                    )
                    + (
                        1 / (1.0 + n)
                        + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                        + S1
                    )
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (
                            1.0
                            * (
                                -31.0
                                - 48.0 * (1.0 + n)
                                - 28.0 * np.power(1.0 + n, 2)
                                - 8.0 * np.power(1.0 + n, 3)
                                - 1.0 * np.power(1.0 + n, 4)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                        )
                    )
                )
            )
            / (4.0 + n)
            + n
            * (
                np.power(4.0 + n, -5)
                - 0.8224670334241131 / np.power(4.0 + n, 3)
                - (0.8224670334241131 * np.power(-1.0, 3.0 + n)) / np.power(4.0 + n, 3)
                + 0.419833592426477 / np.power(4.0 + n, 2)
                + (1.6218904955860713 * np.power(-1.0, 3.0 + n)) / np.power(4.0 + n, 2)
                + (1.2020569031595942 * np.power(-1.0, 4.0 + n)) / np.power(4.0 + n, 2)
                - 0.3382260105347306 / (4.0 + n)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 3.0 + n)
                    * (
                        1 / (1.0 + n)
                        + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                        + S1
                    )
                )
                / np.power(4.0 + n, 2)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 4.0 + n)
                    * (
                        Sm1
                        - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                        + np.power(-1.0, n) / ((2.0 + n) * (3.0 + n))
                    )
                )
                / np.power(4.0 + n, 2)
                + (
                    np.power(-1.0, 4.0 + n)
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (1.0 * (-3.0 - 2.0 * (1.0 + n)) * np.power(-1.0, n))
                        / (np.power(2.0 + n, 2) * np.power(3.0 + n, 2))
                    )
                )
                / np.power(4.0 + n, 3)
                + (
                    np.power(-1.0, 4.0 + n)
                    * (
                        -1.0 * Sm21
                        + Sm3
                        - (
                            1.0
                            * (-7.0 - 9.0 * (1.0 + n) - 3.0 * np.power(1.0 + n, 2))
                            * np.power(-1.0, n)
                        )
                        / (np.power(2.0 + n, 3) * np.power(3.0 + n, 3))
                        + (
                            (
                                -5.0
                                - 4.0 * (1.0 + n)
                                + np.power(1.0 + n, 2)
                                + np.power(1.0 + n, 3)
                            )
                            * np.power(-1.0, n)
                        )
                        / (np.power(2.0 + n, 3) * np.power(3.0 + n, 3))
                        + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + (
                            (-3.0 - 2.0 * (1.0 + n))
                            * (1 / (1.0 + n) + S1)
                            * np.power(-1.0, n)
                        )
                        / (np.power(2.0 + n, 2) * np.power(3.0 + n, 2))
                        + (
                            1 / (1.0 + n)
                            + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                            + S1
                        )
                        * (
                            Sm2
                            - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                            - (1.0 * (-3.0 - 2.0 * (1.0 + n)) * np.power(-1.0, n))
                            / (np.power(2.0 + n, 2) * np.power(3.0 + n, 2))
                        )
                    )
                )
                / np.power(4.0 + n, 2)
            )
        )
        - 0.1967571967137462
        * (
            -0.419833592426477 / (5.0 + n)
            - (0.18119485915332012 * np.power(-1.0, 5.0 + n)) / (5.0 + n)
            - (0.6010284515797971 * np.power(-1.0, 6.0 + n)) / (5.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 5.0 + n)
                * (
                    1 / (1.0 + n)
                    + (
                        2.0
                        * (5.0 + 2.0 * (1.0 + n))
                        * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                    )
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                    + S1
                )
            )
            / (5.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 6.0 + n)
                * (
                    Sm1
                    - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                    + (
                        2.0
                        * (7.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                        * np.power(-1.0, n)
                    )
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                )
            )
            / (5.0 + n)
            + (
                np.power(-1.0, 6.0 + n)
                * (
                    -1.0 * Sm21
                    + Sm3
                    + (
                        2.0
                        * (
                            6196.0
                            + 19110.0 * (1.0 + n)
                            + 25497.0 * np.power(1.0 + n, 2)
                            + 19295.0 * np.power(1.0 + n, 3)
                            + 9117.0 * np.power(1.0 + n, 4)
                            + 2775.0 * np.power(1.0 + n, 5)
                            + 535.0 * np.power(1.0 + n, 6)
                            + 60.0 * np.power(1.0 + n, 7)
                            + 3.0 * np.power(1.0 + n, 8)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                    )
                    + (
                        (
                            -9656.0
                            - 26544.0 * (1.0 + n)
                            - 29682.0 * np.power(1.0 + n, 2)
                            - 16521.0 * np.power(1.0 + n, 3)
                            - 3745.0 * np.power(1.0 + n, 4)
                            + 787.0 * np.power(1.0 + n, 5)
                            + 793.0 * np.power(1.0 + n, 6)
                            + 236.0 * np.power(1.0 + n, 7)
                            + 34.0 * np.power(1.0 + n, 8)
                            + 2.0 * np.power(1.0 + n, 9)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                    )
                    + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                    - (
                        2.0
                        * (5.0 + 2.0 * (1.0 + n))
                        * (
                            46.0
                            + 70.0 * (1.0 + n)
                            + 39.0 * np.power(1.0 + n, 2)
                            + 10.0 * np.power(1.0 + n, 3)
                            + np.power(1.0 + n, 4)
                        )
                        * (1 / (1.0 + n) + S1)
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                        * np.power(5.0 + n, 2)
                    )
                    + (
                        1 / (1.0 + n)
                        + (
                            2.0
                            * (5.0 + 2.0 * (1.0 + n))
                            * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                        + S1
                    )
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + (
                            2.0
                            * (5.0 + 2.0 * (1.0 + n))
                            * (
                                46.0
                                + 70.0 * (1.0 + n)
                                + 39.0 * np.power(1.0 + n, 2)
                                + 10.0 * np.power(1.0 + n, 3)
                                + np.power(1.0 + n, 4)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                        )
                    )
                )
            )
            / (5.0 + n)
            + n
            * (
                np.power(5.0 + n, -5)
                - 0.8224670334241131 / np.power(5.0 + n, 3)
                - (0.8224670334241131 * np.power(-1.0, 4.0 + n)) / np.power(5.0 + n, 3)
                + 0.419833592426477 / np.power(5.0 + n, 2)
                + (1.6218904955860713 * np.power(-1.0, 4.0 + n)) / np.power(5.0 + n, 2)
                + (1.2020569031595942 * np.power(-1.0, 5.0 + n)) / np.power(5.0 + n, 2)
                - 0.3382260105347306 / (5.0 + n)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 4.0 + n)
                    * (
                        1 / (1.0 + n)
                        + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                        + S1
                    )
                )
                / np.power(5.0 + n, 2)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 5.0 + n)
                    * (
                        Sm1
                        - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                        - (
                            1.0
                            * (-5.0 - 4.0 * (1.0 + n) - 1.0 * np.power(1.0 + n, 2))
                            * np.power(-1.0, n)
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                    )
                )
                / np.power(5.0 + n, 2)
                + (
                    np.power(-1.0, 5.0 + n)
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (
                            1.0
                            * (
                                -31.0
                                - 48.0 * (1.0 + n)
                                - 28.0 * np.power(1.0 + n, 2)
                                - 8.0 * np.power(1.0 + n, 3)
                                - 1.0 * np.power(1.0 + n, 4)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                        )
                    )
                )
                / np.power(5.0 + n, 3)
                + (
                    np.power(-1.0, 5.0 + n)
                    * (
                        -1.0 * Sm21
                        + Sm3
                        + (
                            (
                                -179.0
                                - 423.0 * (1.0 + n)
                                - 425.0 * np.power(1.0 + n, 2)
                                - 245.0 * np.power(1.0 + n, 3)
                                - 90.0 * np.power(1.0 + n, 4)
                                - 20.0 * np.power(1.0 + n, 5)
                                - 2.0 * np.power(1.0 + n, 6)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                        )
                        - (
                            1.0
                            * (
                                -197.0
                                - 468.0 * (1.0 + n)
                                - 453.0 * np.power(1.0 + n, 2)
                                - 232.0 * np.power(1.0 + n, 3)
                                - 69.0 * np.power(1.0 + n, 4)
                                - 12.0 * np.power(1.0 + n, 5)
                                - 1.0 * np.power(1.0 + n, 6)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                        )
                        + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + (
                            (
                                -31.0
                                - 48.0 * (1.0 + n)
                                - 28.0 * np.power(1.0 + n, 2)
                                - 8.0 * np.power(1.0 + n, 3)
                                - 1.0 * np.power(1.0 + n, 4)
                            )
                            * (1 / (1.0 + n) + S1)
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                        )
                        + (
                            1 / (1.0 + n)
                            + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                            / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                            + S1
                        )
                        * (
                            Sm2
                            - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                            - (
                                1.0
                                * (
                                    -31.0
                                    - 48.0 * (1.0 + n)
                                    - 28.0 * np.power(1.0 + n, 2)
                                    - 8.0 * np.power(1.0 + n, 3)
                                    - 1.0 * np.power(1.0 + n, 4)
                                )
                                * np.power(-1.0, n)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                            )
                        )
                    )
                )
                / np.power(5.0 + n, 2)
            )
        )
        + 0.1530503487172192
        * (
            -0.419833592426477 / (6.0 + n)
            - (0.18119485915332012 * np.power(-1.0, 6.0 + n)) / (6.0 + n)
            - (0.6010284515797971 * np.power(-1.0, 7.0 + n)) / (6.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 6.0 + n)
                * (
                    1 / (1.0 + n)
                    + (
                        274.0
                        + 450.0 * (1.0 + n)
                        + 255.0 * np.power(1.0 + n, 2)
                        + 60.0 * np.power(1.0 + n, 3)
                        + 5.0 * np.power(1.0 + n, 4)
                    )
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n) * (6.0 + n))
                    + S1
                )
            )
            / (6.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 7.0 + n)
                * (
                    Sm1
                    - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                    - (
                        1.0
                        * (
                            -94.0
                            - 114.0 * (1.0 + n)
                            - 55.0 * np.power(1.0 + n, 2)
                            - 12.0 * np.power(1.0 + n, 3)
                            - 1.0 * np.power(1.0 + n, 4)
                        )
                        * np.power(-1.0, n)
                    )
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n) * (6.0 + n))
                )
            )
            / (6.0 + n)
            + (
                np.power(-1.0, 7.0 + n)
                * (
                    -1.0 * Sm21
                    + Sm3
                    + (
                        (
                            -1.364824e6
                            - 4.959e6 * (1.0 + n)
                            - 8.21809e6 * np.power(1.0 + n, 2)
                            - 8.317171e6 * np.power(1.0 + n, 3)
                            - 5.805556e6 * np.power(1.0 + n, 4)
                            - 2.979747e6 * np.power(1.0 + n, 5)
                            - 1.160441e6 * np.power(1.0 + n, 6)
                            - 345225.0 * np.power(1.0 + n, 7)
                            - 77357.0 * np.power(1.0 + n, 8)
                            - 12617.0 * np.power(1.0 + n, 9)
                            - 1409.0 * np.power(1.0 + n, 10)
                            - 96.0 * np.power(1.0 + n, 11)
                            - 3.0 * np.power(1.0 + n, 12)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                    )
                    - (
                        1.0
                        * (
                            -1.562824e6
                            - 5.7933e6 * (1.0 + n)
                            - 9.66711e6 * np.power(1.0 + n, 2)
                            - 9.628272e6 * np.power(1.0 + n, 3)
                            - 6.401058e6 * np.power(1.0 + n, 4)
                            - 3.007494e6 * np.power(1.0 + n, 5)
                            - 1.029715e6 * np.power(1.0 + n, 6)
                            - 260424.0 * np.power(1.0 + n, 7)
                            - 48597.0 * np.power(1.0 + n, 8)
                            - 6570.0 * np.power(1.0 + n, 9)
                            - 615.0 * np.power(1.0 + n, 10)
                            - 36.0 * np.power(1.0 + n, 11)
                            - 1.0 * np.power(1.0 + n, 12)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                    )
                    + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                    + (
                        (
                            -12076.0
                            - 29100.0 * (1.0 + n)
                            - 30230.0 * np.power(1.0 + n, 2)
                            - 17964.0 * np.power(1.0 + n, 3)
                            - 6753.0 * np.power(1.0 + n, 4)
                            - 1656.0 * np.power(1.0 + n, 5)
                            - 260.0 * np.power(1.0 + n, 6)
                            - 24.0 * np.power(1.0 + n, 7)
                            - 1.0 * np.power(1.0 + n, 8)
                        )
                        * (1 / (1.0 + n) + S1)
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                        * np.power(5.0 + n, 2)
                        * np.power(6.0 + n, 2)
                    )
                    + (
                        1 / (1.0 + n)
                        + (
                            274.0
                            + 450.0 * (1.0 + n)
                            + 255.0 * np.power(1.0 + n, 2)
                            + 60.0 * np.power(1.0 + n, 3)
                            + 5.0 * np.power(1.0 + n, 4)
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n) * (6.0 + n))
                        + S1
                    )
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (
                            1.0
                            * (
                                -12076.0
                                - 29100.0 * (1.0 + n)
                                - 30230.0 * np.power(1.0 + n, 2)
                                - 17964.0 * np.power(1.0 + n, 3)
                                - 6753.0 * np.power(1.0 + n, 4)
                                - 1656.0 * np.power(1.0 + n, 5)
                                - 260.0 * np.power(1.0 + n, 6)
                                - 24.0 * np.power(1.0 + n, 7)
                                - 1.0 * np.power(1.0 + n, 8)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                        )
                    )
                )
            )
            / (6.0 + n)
            + n
            * (
                np.power(6.0 + n, -5)
                - 0.8224670334241131 / np.power(6.0 + n, 3)
                - (0.8224670334241131 * np.power(-1.0, 5.0 + n)) / np.power(6.0 + n, 3)
                + 0.419833592426477 / np.power(6.0 + n, 2)
                + (1.6218904955860713 * np.power(-1.0, 5.0 + n)) / np.power(6.0 + n, 2)
                + (1.2020569031595942 * np.power(-1.0, 6.0 + n)) / np.power(6.0 + n, 2)
                - 0.3382260105347306 / (6.0 + n)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 5.0 + n)
                    * (
                        1 / (1.0 + n)
                        + (
                            2.0
                            * (5.0 + 2.0 * (1.0 + n))
                            * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                        + S1
                    )
                )
                / np.power(6.0 + n, 2)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 6.0 + n)
                    * (
                        Sm1
                        - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                        + (
                            2.0
                            * (7.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                            * np.power(-1.0, n)
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                    )
                )
                / np.power(6.0 + n, 2)
                + (
                    np.power(-1.0, 6.0 + n)
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + (
                            2.0
                            * (5.0 + 2.0 * (1.0 + n))
                            * (
                                46.0
                                + 70.0 * (1.0 + n)
                                + 39.0 * np.power(1.0 + n, 2)
                                + 10.0 * np.power(1.0 + n, 3)
                                + np.power(1.0 + n, 4)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                        )
                    )
                )
                / np.power(6.0 + n, 3)
                + (
                    np.power(-1.0, 6.0 + n)
                    * (
                        -1.0 * Sm21
                        + Sm3
                        + (
                            2.0
                            * (
                                6196.0
                                + 19110.0 * (1.0 + n)
                                + 25497.0 * np.power(1.0 + n, 2)
                                + 19295.0 * np.power(1.0 + n, 3)
                                + 9117.0 * np.power(1.0 + n, 4)
                                + 2775.0 * np.power(1.0 + n, 5)
                                + 535.0 * np.power(1.0 + n, 6)
                                + 60.0 * np.power(1.0 + n, 7)
                                + 3.0 * np.power(1.0 + n, 8)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                        )
                        + (
                            (
                                -9656.0
                                - 26544.0 * (1.0 + n)
                                - 29682.0 * np.power(1.0 + n, 2)
                                - 16521.0 * np.power(1.0 + n, 3)
                                - 3745.0 * np.power(1.0 + n, 4)
                                + 787.0 * np.power(1.0 + n, 5)
                                + 793.0 * np.power(1.0 + n, 6)
                                + 236.0 * np.power(1.0 + n, 7)
                                + 34.0 * np.power(1.0 + n, 8)
                                + 2.0 * np.power(1.0 + n, 9)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                        )
                        + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (
                            2.0
                            * (5.0 + 2.0 * (1.0 + n))
                            * (
                                46.0
                                + 70.0 * (1.0 + n)
                                + 39.0 * np.power(1.0 + n, 2)
                                + 10.0 * np.power(1.0 + n, 3)
                                + np.power(1.0 + n, 4)
                            )
                            * (1 / (1.0 + n) + S1)
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                        )
                        + (
                            1 / (1.0 + n)
                            + (
                                2.0
                                * (5.0 + 2.0 * (1.0 + n))
                                * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                            )
                            / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                            + S1
                        )
                        * (
                            Sm2
                            - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                            + (
                                2.0
                                * (5.0 + 2.0 * (1.0 + n))
                                * (
                                    46.0
                                    + 70.0 * (1.0 + n)
                                    + 39.0 * np.power(1.0 + n, 2)
                                    + 10.0 * np.power(1.0 + n, 3)
                                    + np.power(1.0 + n, 4)
                                )
                                * np.power(-1.0, n)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                            )
                        )
                    )
                )
                / np.power(6.0 + n, 2)
            )
        )
        - 0.10602798528818422
        * (
            -0.419833592426477 / (7.0 + n)
            - (0.18119485915332012 * np.power(-1.0, 7.0 + n)) / (7.0 + n)
            - (0.6010284515797971 * np.power(-1.0, 8.0 + n)) / (7.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 7.0 + n)
                * (
                    1 / (1.0 + n)
                    + (
                        (7.0 + 2.0 * (1.0 + n))
                        * (
                            252.0
                            + 392.0 * (1.0 + n)
                            + 203.0 * np.power(1.0 + n, 2)
                            + 42.0 * np.power(1.0 + n, 3)
                            + 3.0 * np.power(1.0 + n, 4)
                        )
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                    )
                    + S1
                )
            )
            / (7.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 8.0 + n)
                * (
                    Sm1
                    - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                    + (
                        3.0
                        * (
                            148.0
                            + 168.0 * (1.0 + n)
                            + 73.0 * np.power(1.0 + n, 2)
                            + 14.0 * np.power(1.0 + n, 3)
                            + np.power(1.0 + n, 4)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                    )
                )
            )
            / (7.0 + n)
            + (
                np.power(-1.0, 8.0 + n)
                * (
                    -1.0 * Sm21
                    + Sm3
                    + (
                        9.0
                        * (
                            3.7315776e7
                            + 1.56477888e8 * (1.0 + n)
                            + 3.00572848e8 * np.power(1.0 + n, 2)
                            + 3.51218448e8 * np.power(1.0 + n, 3)
                            + 2.79551676e8 * np.power(1.0 + n, 4)
                            + 1.60708716e8 * np.power(1.0 + n, 5)
                            + 6.8959587e7 * np.power(1.0 + n, 6)
                            + 2.2477189e7 * np.power(1.0 + n, 7)
                            + 5.600212e6 * np.power(1.0 + n, 8)
                            + 1.062467e6 * np.power(1.0 + n, 9)
                            + 151200.0 * np.power(1.0 + n, 10)
                            + 15659.0 * np.power(1.0 + n, 11)
                            + 1116.0 * np.power(1.0 + n, 12)
                            + 49.0 * np.power(1.0 + n, 13)
                            + np.power(1.0 + n, 14)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                        * np.power(7.0 + n, 3)
                    )
                    + (
                        (
                            -2.69400384e8
                            - 1.055773152e9 * (1.0 + n)
                            - 1.862215728e9 * np.power(1.0 + n, 2)
                            - 1.946883032e9 * np.power(1.0 + n, 3)
                            - 1.328424984e9 * np.power(1.0 + n, 4)
                            - 6.04538588e8 * np.power(1.0 + n, 5)
                            - 1.71139894e8 * np.power(1.0 + n, 6)
                            - 1.745252e7 * np.power(1.0 + n, 7)
                            + 8.746623e6 * np.power(1.0 + n, 8)
                            + 5.172041e6 * np.power(1.0 + n, 9)
                            + 1.470723e6 * np.power(1.0 + n, 10)
                            + 270665.0 * np.power(1.0 + n, 11)
                            + 33685.0 * np.power(1.0 + n, 12)
                            + 2759.0 * np.power(1.0 + n, 13)
                            + 135.0 * np.power(1.0 + n, 14)
                            + 3.0 * np.power(1.0 + n, 15)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                        * np.power(7.0 + n, 3)
                    )
                    + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                    - (
                        3.0
                        * (7.0 + 2.0 * (1.0 + n))
                        * (
                            20016.0
                            + 47936.0 * (1.0 + n)
                            + 49184.0 * np.power(1.0 + n, 2)
                            + 28560.0 * np.power(1.0 + n, 3)
                            + 10321.0 * np.power(1.0 + n, 4)
                            + 2380.0 * np.power(1.0 + n, 5)
                            + 342.0 * np.power(1.0 + n, 6)
                            + 28.0 * np.power(1.0 + n, 7)
                            + np.power(1.0 + n, 8)
                        )
                        * (1 / (1.0 + n) + S1)
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                        * np.power(5.0 + n, 2)
                        * np.power(6.0 + n, 2)
                        * np.power(7.0 + n, 2)
                    )
                    + (
                        1 / (1.0 + n)
                        + (
                            (7.0 + 2.0 * (1.0 + n))
                            * (
                                252.0
                                + 392.0 * (1.0 + n)
                                + 203.0 * np.power(1.0 + n, 2)
                                + 42.0 * np.power(1.0 + n, 3)
                                + 3.0 * np.power(1.0 + n, 4)
                            )
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                        )
                        + S1
                    )
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + (
                            3.0
                            * (7.0 + 2.0 * (1.0 + n))
                            * (
                                20016.0
                                + 47936.0 * (1.0 + n)
                                + 49184.0 * np.power(1.0 + n, 2)
                                + 28560.0 * np.power(1.0 + n, 3)
                                + 10321.0 * np.power(1.0 + n, 4)
                                + 2380.0 * np.power(1.0 + n, 5)
                                + 342.0 * np.power(1.0 + n, 6)
                                + 28.0 * np.power(1.0 + n, 7)
                                + np.power(1.0 + n, 8)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                        )
                    )
                )
            )
            / (7.0 + n)
            + n
            * (
                np.power(7.0 + n, -5)
                - 0.8224670334241131 / np.power(7.0 + n, 3)
                - (0.8224670334241131 * np.power(-1.0, 6.0 + n)) / np.power(7.0 + n, 3)
                + 0.419833592426477 / np.power(7.0 + n, 2)
                + (1.6218904955860713 * np.power(-1.0, 6.0 + n)) / np.power(7.0 + n, 2)
                + (1.2020569031595942 * np.power(-1.0, 7.0 + n)) / np.power(7.0 + n, 2)
                - 0.3382260105347306 / (7.0 + n)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 6.0 + n)
                    * (
                        1 / (1.0 + n)
                        + (
                            274.0
                            + 450.0 * (1.0 + n)
                            + 255.0 * np.power(1.0 + n, 2)
                            + 60.0 * np.power(1.0 + n, 3)
                            + 5.0 * np.power(1.0 + n, 4)
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n) * (6.0 + n))
                        + S1
                    )
                )
                / np.power(7.0 + n, 2)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 7.0 + n)
                    * (
                        Sm1
                        - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                        - (
                            1.0
                            * (
                                -94.0
                                - 114.0 * (1.0 + n)
                                - 55.0 * np.power(1.0 + n, 2)
                                - 12.0 * np.power(1.0 + n, 3)
                                - 1.0 * np.power(1.0 + n, 4)
                            )
                            * np.power(-1.0, n)
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n) * (6.0 + n))
                    )
                )
                / np.power(7.0 + n, 2)
                + (
                    np.power(-1.0, 7.0 + n)
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (
                            1.0
                            * (
                                -12076.0
                                - 29100.0 * (1.0 + n)
                                - 30230.0 * np.power(1.0 + n, 2)
                                - 17964.0 * np.power(1.0 + n, 3)
                                - 6753.0 * np.power(1.0 + n, 4)
                                - 1656.0 * np.power(1.0 + n, 5)
                                - 260.0 * np.power(1.0 + n, 6)
                                - 24.0 * np.power(1.0 + n, 7)
                                - 1.0 * np.power(1.0 + n, 8)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                        )
                    )
                )
                / np.power(7.0 + n, 3)
                + (
                    np.power(-1.0, 7.0 + n)
                    * (
                        -1.0 * Sm21
                        + Sm3
                        + (
                            (
                                -1.364824e6
                                - 4.959e6 * (1.0 + n)
                                - 8.21809e6 * np.power(1.0 + n, 2)
                                - 8.317171e6 * np.power(1.0 + n, 3)
                                - 5.805556e6 * np.power(1.0 + n, 4)
                                - 2.979747e6 * np.power(1.0 + n, 5)
                                - 1.160441e6 * np.power(1.0 + n, 6)
                                - 345225.0 * np.power(1.0 + n, 7)
                                - 77357.0 * np.power(1.0 + n, 8)
                                - 12617.0 * np.power(1.0 + n, 9)
                                - 1409.0 * np.power(1.0 + n, 10)
                                - 96.0 * np.power(1.0 + n, 11)
                                - 3.0 * np.power(1.0 + n, 12)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                            * np.power(6.0 + n, 3)
                        )
                        - (
                            1.0
                            * (
                                -1.562824e6
                                - 5.7933e6 * (1.0 + n)
                                - 9.66711e6 * np.power(1.0 + n, 2)
                                - 9.628272e6 * np.power(1.0 + n, 3)
                                - 6.401058e6 * np.power(1.0 + n, 4)
                                - 3.007494e6 * np.power(1.0 + n, 5)
                                - 1.029715e6 * np.power(1.0 + n, 6)
                                - 260424.0 * np.power(1.0 + n, 7)
                                - 48597.0 * np.power(1.0 + n, 8)
                                - 6570.0 * np.power(1.0 + n, 9)
                                - 615.0 * np.power(1.0 + n, 10)
                                - 36.0 * np.power(1.0 + n, 11)
                                - 1.0 * np.power(1.0 + n, 12)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                            * np.power(6.0 + n, 3)
                        )
                        + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + (
                            (
                                -12076.0
                                - 29100.0 * (1.0 + n)
                                - 30230.0 * np.power(1.0 + n, 2)
                                - 17964.0 * np.power(1.0 + n, 3)
                                - 6753.0 * np.power(1.0 + n, 4)
                                - 1656.0 * np.power(1.0 + n, 5)
                                - 260.0 * np.power(1.0 + n, 6)
                                - 24.0 * np.power(1.0 + n, 7)
                                - 1.0 * np.power(1.0 + n, 8)
                            )
                            * (1 / (1.0 + n) + S1)
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                        )
                        + (
                            1 / (1.0 + n)
                            + (
                                274.0
                                + 450.0 * (1.0 + n)
                                + 255.0 * np.power(1.0 + n, 2)
                                + 60.0 * np.power(1.0 + n, 3)
                                + 5.0 * np.power(1.0 + n, 4)
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                            )
                            + S1
                        )
                        * (
                            Sm2
                            - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                            - (
                                1.0
                                * (
                                    -12076.0
                                    - 29100.0 * (1.0 + n)
                                    - 30230.0 * np.power(1.0 + n, 2)
                                    - 17964.0 * np.power(1.0 + n, 3)
                                    - 6753.0 * np.power(1.0 + n, 4)
                                    - 1656.0 * np.power(1.0 + n, 5)
                                    - 260.0 * np.power(1.0 + n, 6)
                                    - 24.0 * np.power(1.0 + n, 7)
                                    - 1.0 * np.power(1.0 + n, 8)
                                )
                                * np.power(-1.0, n)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                                * np.power(6.0 + n, 2)
                            )
                        )
                    )
                )
                / np.power(7.0 + n, 2)
            )
        )
        + 0.056951717764149916
        * (
            -0.419833592426477 / (8.0 + n)
            - (0.18119485915332012 * np.power(-1.0, 8.0 + n)) / (8.0 + n)
            - (0.6010284515797971 * np.power(-1.0, 9.0 + n)) / (8.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 8.0 + n)
                * (
                    1 / (1.0 + n)
                    + (
                        13068.0
                        + 26264.0 * (1.0 + n)
                        + 20307.0 * np.power(1.0 + n, 2)
                        + 7840.0 * np.power(1.0 + n, 3)
                        + 1610.0 * np.power(1.0 + n, 4)
                        + 168.0 * np.power(1.0 + n, 5)
                        + 7.0 * np.power(1.0 + n, 6)
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                    )
                    + S1
                )
            )
            / (8.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 9.0 + n)
                * (
                    Sm1
                    - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                    - (
                        1.0
                        * (
                            -3828.0
                            - 5736.0 * (1.0 + n)
                            - 3661.0 * np.power(1.0 + n, 2)
                            - 1248.0 * np.power(1.0 + n, 3)
                            - 238.0 * np.power(1.0 + n, 4)
                            - 24.0 * np.power(1.0 + n, 5)
                            - 1.0 * np.power(1.0 + n, 6)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                    )
                )
            )
            / (8.0 + n)
            + (
                np.power(-1.0, 9.0 + n)
                * (
                    -1.0 * Sm21
                    + Sm3
                    - (
                        1.0
                        * (
                            -1.15567048512e11
                            - 5.35159384704e11 * (1.0 + n)
                            - 1.151188217424e12 * np.power(1.0 + n, 2)
                            - 1.53078715296e12 * np.power(1.0 + n, 3)
                            - 1.412584727652e12 * np.power(1.0 + n, 4)
                            - 9.62381167416e11 * np.power(1.0 + n, 5)
                            - 5.02598549197e11 * np.power(1.0 + n, 6)
                            - 2.0609943264e11 * np.power(1.0 + n, 7)
                            - 6.7393018182e10 * np.power(1.0 + n, 8)
                            - 1.7735954328e10 * np.power(1.0 + n, 9)
                            - 3.772650903e9 * np.power(1.0 + n, 10)
                            - 6.48395136e8 * np.power(1.0 + n, 11)
                            - 8.9565928e7 * np.power(1.0 + n, 12)
                            - 9.831528e6 * np.power(1.0 + n, 13)
                            - 840651.0 * np.power(1.0 + n, 14)
                            - 54144.0 * np.power(1.0 + n, 15)
                            - 2478.0 * np.power(1.0 + n, 16)
                            - 72.0 * np.power(1.0 + n, 17)
                            - 1.0 * np.power(1.0 + n, 18)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                        * np.power(7.0 + n, 3)
                        * np.power(8.0 + n, 3)
                    )
                    - (
                        2.0
                        * (
                            4.9589391456e10
                            + 2.24271058032e11 * (1.0 + n)
                            + 4.7403095628e11 * np.power(1.0 + n, 2)
                            + 6.25731974284e11 * np.power(1.0 + n, 3)
                            + 5.81676555432e11 * np.power(1.0 + n, 4)
                            + 4.0689079961e11 * np.power(1.0 + n, 5)
                            + 2.23175026185e11 * np.power(1.0 + n, 6)
                            + 9.8520885539e10 * np.power(1.0 + n, 7)
                            + 3.554804558e10 * np.power(1.0 + n, 8)
                            + 1.0556408108e10 * np.power(1.0 + n, 9)
                            + 2.579863556e9 * np.power(1.0 + n, 10)
                            + 5.15736142e8 * np.power(1.0 + n, 11)
                            + 8.3361904e7 * np.power(1.0 + n, 12)
                            + 1.0703902e7 * np.power(1.0 + n, 13)
                            + 1.064065e6 * np.power(1.0 + n, 14)
                            + 78795.0 * np.power(1.0 + n, 15)
                            + 4084.0 * np.power(1.0 + n, 16)
                            + 132.0 * np.power(1.0 + n, 17)
                            + 2.0 * np.power(1.0 + n, 18)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                        * np.power(7.0 + n, 3)
                        * np.power(8.0 + n, 3)
                    )
                    + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                    + (
                        (
                            -2.1114864e7
                            - 6.3635712e7 * (1.0 + n)
                            - 8.634864e7 * np.power(1.0 + n, 2)
                            - 7.024968e7 * np.power(1.0 + n, 3)
                            - 3.8347981e7 * np.power(1.0 + n, 4)
                            - 1.4846592e7 * np.power(1.0 + n, 5)
                            - 4.190576e6 * np.power(1.0 + n, 6)
                            - 870720.0 * np.power(1.0 + n, 7)
                            - 132426.0 * np.power(1.0 + n, 8)
                            - 14400.0 * np.power(1.0 + n, 9)
                            - 1064.0 * np.power(1.0 + n, 10)
                            - 48.0 * np.power(1.0 + n, 11)
                            - 1.0 * np.power(1.0 + n, 12)
                        )
                        * (1 / (1.0 + n) + S1)
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                        * np.power(5.0 + n, 2)
                        * np.power(6.0 + n, 2)
                        * np.power(7.0 + n, 2)
                        * np.power(8.0 + n, 2)
                    )
                    + (
                        1 / (1.0 + n)
                        + (
                            13068.0
                            + 26264.0 * (1.0 + n)
                            + 20307.0 * np.power(1.0 + n, 2)
                            + 7840.0 * np.power(1.0 + n, 3)
                            + 1610.0 * np.power(1.0 + n, 4)
                            + 168.0 * np.power(1.0 + n, 5)
                            + 7.0 * np.power(1.0 + n, 6)
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                        )
                        + S1
                    )
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (
                            1.0
                            * (
                                -2.1114864e7
                                - 6.3635712e7 * (1.0 + n)
                                - 8.634864e7 * np.power(1.0 + n, 2)
                                - 7.024968e7 * np.power(1.0 + n, 3)
                                - 3.8347981e7 * np.power(1.0 + n, 4)
                                - 1.4846592e7 * np.power(1.0 + n, 5)
                                - 4.190576e6 * np.power(1.0 + n, 6)
                                - 870720.0 * np.power(1.0 + n, 7)
                                - 132426.0 * np.power(1.0 + n, 8)
                                - 14400.0 * np.power(1.0 + n, 9)
                                - 1064.0 * np.power(1.0 + n, 10)
                                - 48.0 * np.power(1.0 + n, 11)
                                - 1.0 * np.power(1.0 + n, 12)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                            * np.power(8.0 + n, 2)
                        )
                    )
                )
            )
            / (8.0 + n)
            + n
            * (
                np.power(8.0 + n, -5)
                - 0.8224670334241131 / np.power(8.0 + n, 3)
                - (0.8224670334241131 * np.power(-1.0, 7.0 + n)) / np.power(8.0 + n, 3)
                + 0.419833592426477 / np.power(8.0 + n, 2)
                + (1.6218904955860713 * np.power(-1.0, 7.0 + n)) / np.power(8.0 + n, 2)
                + (1.2020569031595942 * np.power(-1.0, 8.0 + n)) / np.power(8.0 + n, 2)
                - 0.3382260105347306 / (8.0 + n)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 7.0 + n)
                    * (
                        1 / (1.0 + n)
                        + (
                            (7.0 + 2.0 * (1.0 + n))
                            * (
                                252.0
                                + 392.0 * (1.0 + n)
                                + 203.0 * np.power(1.0 + n, 2)
                                + 42.0 * np.power(1.0 + n, 3)
                                + 3.0 * np.power(1.0 + n, 4)
                            )
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                        )
                        + S1
                    )
                )
                / np.power(8.0 + n, 2)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 8.0 + n)
                    * (
                        Sm1
                        - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                        + (
                            3.0
                            * (
                                148.0
                                + 168.0 * (1.0 + n)
                                + 73.0 * np.power(1.0 + n, 2)
                                + 14.0 * np.power(1.0 + n, 3)
                                + np.power(1.0 + n, 4)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                        )
                    )
                )
                / np.power(8.0 + n, 2)
                + (
                    np.power(-1.0, 8.0 + n)
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + (
                            3.0
                            * (7.0 + 2.0 * (1.0 + n))
                            * (
                                20016.0
                                + 47936.0 * (1.0 + n)
                                + 49184.0 * np.power(1.0 + n, 2)
                                + 28560.0 * np.power(1.0 + n, 3)
                                + 10321.0 * np.power(1.0 + n, 4)
                                + 2380.0 * np.power(1.0 + n, 5)
                                + 342.0 * np.power(1.0 + n, 6)
                                + 28.0 * np.power(1.0 + n, 7)
                                + np.power(1.0 + n, 8)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                        )
                    )
                )
                / np.power(8.0 + n, 3)
                + (
                    np.power(-1.0, 8.0 + n)
                    * (
                        -1.0 * Sm21
                        + Sm3
                        + (
                            9.0
                            * (
                                3.7315776e7
                                + 1.56477888e8 * (1.0 + n)
                                + 3.00572848e8 * np.power(1.0 + n, 2)
                                + 3.51218448e8 * np.power(1.0 + n, 3)
                                + 2.79551676e8 * np.power(1.0 + n, 4)
                                + 1.60708716e8 * np.power(1.0 + n, 5)
                                + 6.8959587e7 * np.power(1.0 + n, 6)
                                + 2.2477189e7 * np.power(1.0 + n, 7)
                                + 5.600212e6 * np.power(1.0 + n, 8)
                                + 1.062467e6 * np.power(1.0 + n, 9)
                                + 151200.0 * np.power(1.0 + n, 10)
                                + 15659.0 * np.power(1.0 + n, 11)
                                + 1116.0 * np.power(1.0 + n, 12)
                                + 49.0 * np.power(1.0 + n, 13)
                                + np.power(1.0 + n, 14)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                            * np.power(6.0 + n, 3)
                            * np.power(7.0 + n, 3)
                        )
                        + (
                            (
                                -2.69400384e8
                                - 1.055773152e9 * (1.0 + n)
                                - 1.862215728e9 * np.power(1.0 + n, 2)
                                - 1.946883032e9 * np.power(1.0 + n, 3)
                                - 1.328424984e9 * np.power(1.0 + n, 4)
                                - 6.04538588e8 * np.power(1.0 + n, 5)
                                - 1.71139894e8 * np.power(1.0 + n, 6)
                                - 1.745252e7 * np.power(1.0 + n, 7)
                                + 8.746623e6 * np.power(1.0 + n, 8)
                                + 5.172041e6 * np.power(1.0 + n, 9)
                                + 1.470723e6 * np.power(1.0 + n, 10)
                                + 270665.0 * np.power(1.0 + n, 11)
                                + 33685.0 * np.power(1.0 + n, 12)
                                + 2759.0 * np.power(1.0 + n, 13)
                                + 135.0 * np.power(1.0 + n, 14)
                                + 3.0 * np.power(1.0 + n, 15)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                            * np.power(6.0 + n, 3)
                            * np.power(7.0 + n, 3)
                        )
                        + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (
                            3.0
                            * (7.0 + 2.0 * (1.0 + n))
                            * (
                                20016.0
                                + 47936.0 * (1.0 + n)
                                + 49184.0 * np.power(1.0 + n, 2)
                                + 28560.0 * np.power(1.0 + n, 3)
                                + 10321.0 * np.power(1.0 + n, 4)
                                + 2380.0 * np.power(1.0 + n, 5)
                                + 342.0 * np.power(1.0 + n, 6)
                                + 28.0 * np.power(1.0 + n, 7)
                                + np.power(1.0 + n, 8)
                            )
                            * (1 / (1.0 + n) + S1)
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                        )
                        + (
                            1 / (1.0 + n)
                            + (
                                (7.0 + 2.0 * (1.0 + n))
                                * (
                                    252.0
                                    + 392.0 * (1.0 + n)
                                    + 203.0 * np.power(1.0 + n, 2)
                                    + 42.0 * np.power(1.0 + n, 3)
                                    + 3.0 * np.power(1.0 + n, 4)
                                )
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                                * (7.0 + n)
                            )
                            + S1
                        )
                        * (
                            Sm2
                            - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                            + (
                                3.0
                                * (7.0 + 2.0 * (1.0 + n))
                                * (
                                    20016.0
                                    + 47936.0 * (1.0 + n)
                                    + 49184.0 * np.power(1.0 + n, 2)
                                    + 28560.0 * np.power(1.0 + n, 3)
                                    + 10321.0 * np.power(1.0 + n, 4)
                                    + 2380.0 * np.power(1.0 + n, 5)
                                    + 342.0 * np.power(1.0 + n, 6)
                                    + 28.0 * np.power(1.0 + n, 7)
                                    + np.power(1.0 + n, 8)
                                )
                                * np.power(-1.0, n)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                                * np.power(6.0 + n, 2)
                                * np.power(7.0 + n, 2)
                            )
                        )
                    )
                )
                / np.power(8.0 + n, 2)
            )
        )
        - 0.019847559824380426
        * (
            -0.419833592426477 / (9.0 + n)
            - (0.18119485915332012 * np.power(-1.0, 9.0 + n)) / (9.0 + n)
            - (0.6010284515797971 * np.power(-1.0, 10.0 + n)) / (9.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 9.0 + n)
                * (
                    1 / (1.0 + n)
                    + (
                        4.0
                        * (9.0 + 2.0 * (1.0 + n))
                        * (
                            3044.0
                            + 5886.0 * (1.0 + n)
                            + 4299.0 * np.power(1.0 + n, 2)
                            + 1539.0 * np.power(1.0 + n, 3)
                            + 288.0 * np.power(1.0 + n, 4)
                            + 27.0 * np.power(1.0 + n, 5)
                            + np.power(1.0 + n, 6)
                        )
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                        * (9.0 + n)
                    )
                    + S1
                )
            )
            / (9.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 10.0 + n)
                * (
                    Sm1
                    - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                    + (
                        4.0
                        * (
                            6396.0
                            + 9162.0 * (1.0 + n)
                            + 5473.0 * np.power(1.0 + n, 2)
                            + 1719.0 * np.power(1.0 + n, 3)
                            + 298.0 * np.power(1.0 + n, 4)
                            + 27.0 * np.power(1.0 + n, 5)
                            + np.power(1.0 + n, 6)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                        * (9.0 + n)
                    )
                )
            )
            / (9.0 + n)
            + (
                np.power(-1.0, 10.0 + n)
                * (
                    -1.0 * Sm21
                    + Sm3
                    + (
                        4.0
                        * (
                            1.4760576193536e13
                            + 7.3798658489088e13 * (1.0 + n)
                            + 1.72837443710016e14 * np.power(1.0 + n, 2)
                            + 2.52453402491616e14 * np.power(1.0 + n, 3)
                            + 2.5828967175624e14 * np.power(1.0 + n, 4)
                            + 1.97032446481464e14 * np.power(1.0 + n, 5)
                            + 1.16425369498108e14 * np.power(1.0 + n, 6)
                            + 5.4627507667116e13 * np.power(1.0 + n, 7)
                            + 2.0690074606371e13 * np.power(1.0 + n, 8)
                            + 6.392775359655e12 * np.power(1.0 + n, 9)
                            + 1.621160332314e12 * np.power(1.0 + n, 10)
                            + 3.38175413478e11 * np.power(1.0 + n, 11)
                            + 5.7948536701e10 * np.power(1.0 + n, 12)
                            + 8.115008166e9 * np.power(1.0 + n, 13)
                            + 9.1986012e8 * np.power(1.0 + n, 14)
                            + 8.3116584e7 * np.power(1.0 + n, 15)
                            + 5.847213e6 * np.power(1.0 + n, 16)
                            + 308691.0 * np.power(1.0 + n, 17)
                            + 11506.0 * np.power(1.0 + n, 18)
                            + 270.0 * np.power(1.0 + n, 19)
                            + 3.0 * np.power(1.0 + n, 20)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                        * np.power(7.0 + n, 3)
                        * np.power(8.0 + n, 3)
                        * np.power(9.0 + n, 3)
                    )
                    + (
                        2.0
                        * (
                            -2.3997963958272e13
                            - 1.14129905965056e14 * (1.0 + n)
                            - 2.5222059905856e14 * np.power(1.0 + n, 2)
                            - 3.44033181492512e14 * np.power(1.0 + n, 3)
                            - 3.23935732772496e14 * np.power(1.0 + n, 4)
                            - 2.22502088875352e14 * np.power(1.0 + n, 5)
                            - 1.14348498644148e14 * np.power(1.0 + n, 6)
                            - 4.3968646592044e13 * np.power(1.0 + n, 7)
                            - 1.21438136977e13 * np.power(1.0 + n, 8)
                            - 2.010931672623e12 * np.power(1.0 + n, 9)
                            + 4.9482178305e10 * np.power(1.0 + n, 10)
                            + 1.59991878826e11 * np.power(1.0 + n, 11)
                            + 6.0723226806e10 * np.power(1.0 + n, 12)
                            + 1.4651858516e10 * np.power(1.0 + n, 13)
                            + 2.59766429e9 * np.power(1.0 + n, 14)
                            + 3.51680472e8 * np.power(1.0 + n, 15)
                            + 3.6575004e7 * np.power(1.0 + n, 16)
                            + 2.886025e6 * np.power(1.0 + n, 17)
                            + 167625.0 * np.power(1.0 + n, 18)
                            + 6770.0 * np.power(1.0 + n, 19)
                            + 170.0 * np.power(1.0 + n, 20)
                            + 2.0 * np.power(1.0 + n, 21)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                        * np.power(7.0 + n, 3)
                        * np.power(8.0 + n, 3)
                        * np.power(9.0 + n, 3)
                    )
                    + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                    - (
                        4.0
                        * (9.0 + 2.0 * (1.0 + n))
                        * (
                            3.6831936e7
                            + 1.10670624e8 * (1.0 + n)
                            + 1.4936364e8 * np.power(1.0 + n, 2)
                            + 1.2041208e8 * np.power(1.0 + n, 3)
                            + 6.4783246e7 * np.power(1.0 + n, 4)
                            + 2.454111e7 * np.power(1.0 + n, 5)
                            + 6.715739e6 * np.power(1.0 + n, 6)
                            + 1.33785e6 * np.power(1.0 + n, 7)
                            + 192561.0 * np.power(1.0 + n, 8)
                            + 19530.0 * np.power(1.0 + n, 9)
                            + 1325.0 * np.power(1.0 + n, 10)
                            + 54.0 * np.power(1.0 + n, 11)
                            + np.power(1.0 + n, 12)
                        )
                        * (1 / (1.0 + n) + S1)
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                        * np.power(5.0 + n, 2)
                        * np.power(6.0 + n, 2)
                        * np.power(7.0 + n, 2)
                        * np.power(8.0 + n, 2)
                        * np.power(9.0 + n, 2)
                    )
                    + (
                        1 / (1.0 + n)
                        + (
                            4.0
                            * (9.0 + 2.0 * (1.0 + n))
                            * (
                                3044.0
                                + 5886.0 * (1.0 + n)
                                + 4299.0 * np.power(1.0 + n, 2)
                                + 1539.0 * np.power(1.0 + n, 3)
                                + 288.0 * np.power(1.0 + n, 4)
                                + 27.0 * np.power(1.0 + n, 5)
                                + np.power(1.0 + n, 6)
                            )
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                            * (9.0 + n)
                        )
                        + S1
                    )
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + (
                            4.0
                            * (9.0 + 2.0 * (1.0 + n))
                            * (
                                3.6831936e7
                                + 1.10670624e8 * (1.0 + n)
                                + 1.4936364e8 * np.power(1.0 + n, 2)
                                + 1.2041208e8 * np.power(1.0 + n, 3)
                                + 6.4783246e7 * np.power(1.0 + n, 4)
                                + 2.454111e7 * np.power(1.0 + n, 5)
                                + 6.715739e6 * np.power(1.0 + n, 6)
                                + 1.33785e6 * np.power(1.0 + n, 7)
                                + 192561.0 * np.power(1.0 + n, 8)
                                + 19530.0 * np.power(1.0 + n, 9)
                                + 1325.0 * np.power(1.0 + n, 10)
                                + 54.0 * np.power(1.0 + n, 11)
                                + np.power(1.0 + n, 12)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                            * np.power(8.0 + n, 2)
                            * np.power(9.0 + n, 2)
                        )
                    )
                )
            )
            / (9.0 + n)
            + n
            * (
                np.power(9.0 + n, -5)
                - 0.8224670334241131 / np.power(9.0 + n, 3)
                - (0.8224670334241131 * np.power(-1.0, 8.0 + n)) / np.power(9.0 + n, 3)
                + 0.419833592426477 / np.power(9.0 + n, 2)
                + (1.6218904955860713 * np.power(-1.0, 8.0 + n)) / np.power(9.0 + n, 2)
                + (1.2020569031595942 * np.power(-1.0, 9.0 + n)) / np.power(9.0 + n, 2)
                - 0.3382260105347306 / (9.0 + n)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 8.0 + n)
                    * (
                        1 / (1.0 + n)
                        + (
                            13068.0
                            + 26264.0 * (1.0 + n)
                            + 20307.0 * np.power(1.0 + n, 2)
                            + 7840.0 * np.power(1.0 + n, 3)
                            + 1610.0 * np.power(1.0 + n, 4)
                            + 168.0 * np.power(1.0 + n, 5)
                            + 7.0 * np.power(1.0 + n, 6)
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                        )
                        + S1
                    )
                )
                / np.power(9.0 + n, 2)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 9.0 + n)
                    * (
                        Sm1
                        - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                        - (
                            1.0
                            * (
                                -3828.0
                                - 5736.0 * (1.0 + n)
                                - 3661.0 * np.power(1.0 + n, 2)
                                - 1248.0 * np.power(1.0 + n, 3)
                                - 238.0 * np.power(1.0 + n, 4)
                                - 24.0 * np.power(1.0 + n, 5)
                                - 1.0 * np.power(1.0 + n, 6)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                        )
                    )
                )
                / np.power(9.0 + n, 2)
                + (
                    np.power(-1.0, 9.0 + n)
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (
                            1.0
                            * (
                                -2.1114864e7
                                - 6.3635712e7 * (1.0 + n)
                                - 8.634864e7 * np.power(1.0 + n, 2)
                                - 7.024968e7 * np.power(1.0 + n, 3)
                                - 3.8347981e7 * np.power(1.0 + n, 4)
                                - 1.4846592e7 * np.power(1.0 + n, 5)
                                - 4.190576e6 * np.power(1.0 + n, 6)
                                - 870720.0 * np.power(1.0 + n, 7)
                                - 132426.0 * np.power(1.0 + n, 8)
                                - 14400.0 * np.power(1.0 + n, 9)
                                - 1064.0 * np.power(1.0 + n, 10)
                                - 48.0 * np.power(1.0 + n, 11)
                                - 1.0 * np.power(1.0 + n, 12)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                            * np.power(8.0 + n, 2)
                        )
                    )
                )
                / np.power(9.0 + n, 3)
                + (
                    np.power(-1.0, 9.0 + n)
                    * (
                        -1.0 * Sm21
                        + Sm3
                        - (
                            1.0
                            * (
                                -1.15567048512e11
                                - 5.35159384704e11 * (1.0 + n)
                                - 1.151188217424e12 * np.power(1.0 + n, 2)
                                - 1.53078715296e12 * np.power(1.0 + n, 3)
                                - 1.412584727652e12 * np.power(1.0 + n, 4)
                                - 9.62381167416e11 * np.power(1.0 + n, 5)
                                - 5.02598549197e11 * np.power(1.0 + n, 6)
                                - 2.0609943264e11 * np.power(1.0 + n, 7)
                                - 6.7393018182e10 * np.power(1.0 + n, 8)
                                - 1.7735954328e10 * np.power(1.0 + n, 9)
                                - 3.772650903e9 * np.power(1.0 + n, 10)
                                - 6.48395136e8 * np.power(1.0 + n, 11)
                                - 8.9565928e7 * np.power(1.0 + n, 12)
                                - 9.831528e6 * np.power(1.0 + n, 13)
                                - 840651.0 * np.power(1.0 + n, 14)
                                - 54144.0 * np.power(1.0 + n, 15)
                                - 2478.0 * np.power(1.0 + n, 16)
                                - 72.0 * np.power(1.0 + n, 17)
                                - 1.0 * np.power(1.0 + n, 18)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                            * np.power(6.0 + n, 3)
                            * np.power(7.0 + n, 3)
                            * np.power(8.0 + n, 3)
                        )
                        - (
                            2.0
                            * (
                                4.9589391456e10
                                + 2.24271058032e11 * (1.0 + n)
                                + 4.7403095628e11 * np.power(1.0 + n, 2)
                                + 6.25731974284e11 * np.power(1.0 + n, 3)
                                + 5.81676555432e11 * np.power(1.0 + n, 4)
                                + 4.0689079961e11 * np.power(1.0 + n, 5)
                                + 2.23175026185e11 * np.power(1.0 + n, 6)
                                + 9.8520885539e10 * np.power(1.0 + n, 7)
                                + 3.554804558e10 * np.power(1.0 + n, 8)
                                + 1.0556408108e10 * np.power(1.0 + n, 9)
                                + 2.579863556e9 * np.power(1.0 + n, 10)
                                + 5.15736142e8 * np.power(1.0 + n, 11)
                                + 8.3361904e7 * np.power(1.0 + n, 12)
                                + 1.0703902e7 * np.power(1.0 + n, 13)
                                + 1.064065e6 * np.power(1.0 + n, 14)
                                + 78795.0 * np.power(1.0 + n, 15)
                                + 4084.0 * np.power(1.0 + n, 16)
                                + 132.0 * np.power(1.0 + n, 17)
                                + 2.0 * np.power(1.0 + n, 18)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                            * np.power(6.0 + n, 3)
                            * np.power(7.0 + n, 3)
                            * np.power(8.0 + n, 3)
                        )
                        + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + (
                            (
                                -2.1114864e7
                                - 6.3635712e7 * (1.0 + n)
                                - 8.634864e7 * np.power(1.0 + n, 2)
                                - 7.024968e7 * np.power(1.0 + n, 3)
                                - 3.8347981e7 * np.power(1.0 + n, 4)
                                - 1.4846592e7 * np.power(1.0 + n, 5)
                                - 4.190576e6 * np.power(1.0 + n, 6)
                                - 870720.0 * np.power(1.0 + n, 7)
                                - 132426.0 * np.power(1.0 + n, 8)
                                - 14400.0 * np.power(1.0 + n, 9)
                                - 1064.0 * np.power(1.0 + n, 10)
                                - 48.0 * np.power(1.0 + n, 11)
                                - 1.0 * np.power(1.0 + n, 12)
                            )
                            * (1 / (1.0 + n) + S1)
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                            * np.power(8.0 + n, 2)
                        )
                        + (
                            1 / (1.0 + n)
                            + (
                                13068.0
                                + 26264.0 * (1.0 + n)
                                + 20307.0 * np.power(1.0 + n, 2)
                                + 7840.0 * np.power(1.0 + n, 3)
                                + 1610.0 * np.power(1.0 + n, 4)
                                + 168.0 * np.power(1.0 + n, 5)
                                + 7.0 * np.power(1.0 + n, 6)
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                                * (7.0 + n)
                                * (8.0 + n)
                            )
                            + S1
                        )
                        * (
                            Sm2
                            - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                            - (
                                1.0
                                * (
                                    -2.1114864e7
                                    - 6.3635712e7 * (1.0 + n)
                                    - 8.634864e7 * np.power(1.0 + n, 2)
                                    - 7.024968e7 * np.power(1.0 + n, 3)
                                    - 3.8347981e7 * np.power(1.0 + n, 4)
                                    - 1.4846592e7 * np.power(1.0 + n, 5)
                                    - 4.190576e6 * np.power(1.0 + n, 6)
                                    - 870720.0 * np.power(1.0 + n, 7)
                                    - 132426.0 * np.power(1.0 + n, 8)
                                    - 14400.0 * np.power(1.0 + n, 9)
                                    - 1064.0 * np.power(1.0 + n, 10)
                                    - 48.0 * np.power(1.0 + n, 11)
                                    - 1.0 * np.power(1.0 + n, 12)
                                )
                                * np.power(-1.0, n)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                                * np.power(6.0 + n, 2)
                                * np.power(7.0 + n, 2)
                                * np.power(8.0 + n, 2)
                            )
                        )
                    )
                )
                / np.power(9.0 + n, 2)
            )
        )
        + 0.003243204652309423
        * (
            -0.419833592426477 / (10.0 + n)
            - (0.18119485915332012 * np.power(-1.0, 10.0 + n)) / (10.0 + n)
            - (0.6010284515797971 * np.power(-1.0, 11.0 + n)) / (10.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 10.0 + n)
                * (
                    1 / (1.0 + n)
                    + (
                        3.0
                        * (
                            342192.0
                            + 781800.0 * (1.0 + n)
                            + 723680.0 * np.power(1.0 + n, 2)
                            + 359100.0 * np.power(1.0 + n, 3)
                            + 105455.0 * np.power(1.0 + n, 4)
                            + 18900.0 * np.power(1.0 + n, 5)
                            + 2030.0 * np.power(1.0 + n, 6)
                            + 120.0 * np.power(1.0 + n, 7)
                            + 3.0 * np.power(1.0 + n, 8)
                        )
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                        * (9.0 + n)
                        * (10.0 + n)
                    )
                    + S1
                )
            )
            / (10.0 + n)
            - (
                0.8224670334241131
                * np.power(-1.0, 11.0 + n)
                * (
                    Sm1
                    - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                    - (
                        1.0
                        * (
                            -270576.0
                            - 465000.0 * (1.0 + n)
                            - 351800.0 * np.power(1.0 + n, 2)
                            - 151060.0 * np.power(1.0 + n, 3)
                            - 40053.0 * np.power(1.0 + n, 4)
                            - 6700.0 * np.power(1.0 + n, 5)
                            - 690.0 * np.power(1.0 + n, 6)
                            - 40.0 * np.power(1.0 + n, 7)
                            - 1.0 * np.power(1.0 + n, 8)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                        * (9.0 + n)
                        * (10.0 + n)
                    )
                )
            )
            / (10.0 + n)
            + (
                np.power(-1.0, 11.0 + n)
                * (
                    -1.0 * Sm21
                    + Sm3
                    + (
                        (
                            -3.665793851814298e16
                            - 1.909490377752576e17 * (1.0 + n)
                            - 4.70862544109472e17 * np.power(1.0 + n, 2)
                            - 7.33980385029854e17 * np.power(1.0 + n, 3)
                            - 8.148989973914079e17 * np.power(1.0 + n, 4)
                            - 6.882981306584479e17 * np.power(1.0 + n, 5)
                            - 4.611713296031033e17 * np.power(1.0 + n, 6)
                            - 2.5219843129581005e17 * np.power(1.0 + n, 7)
                            - 1.14842783872951e17 * np.power(1.0 + n, 8)
                            - 4.415488009076552e16 * np.power(1.0 + n, 9)
                            - 1.44652124073368e16 * np.power(1.0 + n, 10)
                            - 4.05880131245378e15 * np.power(1.0 + n, 11)
                            - 9.77306344262685e14 * np.power(1.0 + n, 12)
                            - 2.01769269859842e14 * np.power(1.0 + n, 13)
                            - 3.560081466145e13 * np.power(1.0 + n, 14)
                            - 5.339127383592e12 * np.power(1.0 + n, 15)
                            - 6.75333270995e11 * np.power(1.0 + n, 16)
                            - 7.1298201266e10 * np.power(1.0 + n, 17)
                            - 6.19612062e9 * np.power(1.0 + n, 18)
                            - 4.34978004e8 * np.power(1.0 + n, 19)
                            - 2.4024499e7 * np.power(1.0 + n, 20)
                            - 1.00395e6 * np.power(1.0 + n, 21)
                            - 29810.0 * np.power(1.0 + n, 22)
                            - 560.0 * np.power(1.0 + n, 23)
                            - 5.0 * np.power(1.0 + n, 24)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                        * np.power(7.0 + n, 3)
                        * np.power(8.0 + n, 3)
                        * np.power(9.0 + n, 3)
                        * np.power(10.0 + n, 3)
                    )
                    - (
                        1.0
                        * (
                            -4.310738850111898e16
                            - 2.300786211297024e17 * (1.0 + n)
                            - 5.793490942232486e17 * np.power(1.0 + n, 2)
                            - 9.169570554312557e17 * np.power(1.0 + n, 3)
                            - 1.0253555704764628e18 * np.power(1.0 + n, 4)
                            - 8.63111634551316e17 * np.power(1.0 + n, 5)
                            - 5.689117565311652e17 * np.power(1.0 + n, 6)
                            - 3.014933810188104e17 * np.power(1.0 + n, 7)
                            - 1.3085272169429526e17 * np.power(1.0 + n, 8)
                            - 4.712719391395e16 * np.power(1.0 + n, 9)
                            - 1.42167692592585e16 * np.power(1.0 + n, 10)
                            - 3.6154166212347e15 * np.power(1.0 + n, 11)
                            - 7.78200392291745e14 * np.power(1.0 + n, 12)
                            - 1.420469104479e14 * np.power(1.0 + n, 13)
                            - 2.198557186497e13 * np.power(1.0 + n, 14)
                            - 2.8791357052e12 * np.power(1.0 + n, 15)
                            - 3.17567574315e11 * np.power(1.0 + n, 16)
                            - 2.92849434e10 * np.power(1.0 + n, 17)
                            - 2.23273176e9 * np.power(1.0 + n, 18)
                            - 1.384419e8 * np.power(1.0 + n, 19)
                            - 6.812919e6 * np.power(1.0 + n, 20)
                            - 256300.0 * np.power(1.0 + n, 21)
                            - 6930.0 * np.power(1.0 + n, 22)
                            - 120.0 * np.power(1.0 + n, 23)
                            - 1.0 * np.power(1.0 + n, 24)
                        )
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 3)
                        * np.power(3.0 + n, 3)
                        * np.power(4.0 + n, 3)
                        * np.power(5.0 + n, 3)
                        * np.power(6.0 + n, 3)
                        * np.power(7.0 + n, 3)
                        * np.power(8.0 + n, 3)
                        * np.power(9.0 + n, 3)
                        * np.power(10.0 + n, 3)
                    )
                    + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                    + (
                        (
                            -1.09027627776e11
                            - 3.792865824e11 * (1.0 + n)
                            - 6.0713742384e11 * np.power(1.0 + n, 2)
                            - 5.9622705312e11 * np.power(1.0 + n, 3)
                            - 4.03242887656e11 * np.power(1.0 + n, 4)
                            - 1.99571643e11 * np.power(1.0 + n, 5)
                            - 7.48814979e10 * np.power(1.0 + n, 6)
                            - 2.175554084e10 * np.power(1.0 + n, 7)
                            - 4.951843521e9 * np.power(1.0 + n, 8)
                            - 8.86903e8 * np.power(1.0 + n, 9)
                            - 1.2470866e8 * np.power(1.0 + n, 10)
                            - 1.363476e7 * np.power(1.0 + n, 11)
                            - 1.137246e6 * np.power(1.0 + n, 12)
                            - 70000.0 * np.power(1.0 + n, 13)
                            - 3000.0 * np.power(1.0 + n, 14)
                            - 80.0 * np.power(1.0 + n, 15)
                            - 1.0 * np.power(1.0 + n, 16)
                        )
                        * (1 / (1.0 + n) + S1)
                        * np.power(-1.0, n)
                    )
                    / (
                        np.power(2.0 + n, 2)
                        * np.power(3.0 + n, 2)
                        * np.power(4.0 + n, 2)
                        * np.power(5.0 + n, 2)
                        * np.power(6.0 + n, 2)
                        * np.power(7.0 + n, 2)
                        * np.power(8.0 + n, 2)
                        * np.power(9.0 + n, 2)
                        * np.power(10.0 + n, 2)
                    )
                    + (
                        1 / (1.0 + n)
                        + (
                            3.0
                            * (
                                342192.0
                                + 781800.0 * (1.0 + n)
                                + 723680.0 * np.power(1.0 + n, 2)
                                + 359100.0 * np.power(1.0 + n, 3)
                                + 105455.0 * np.power(1.0 + n, 4)
                                + 18900.0 * np.power(1.0 + n, 5)
                                + 2030.0 * np.power(1.0 + n, 6)
                                + 120.0 * np.power(1.0 + n, 7)
                                + 3.0 * np.power(1.0 + n, 8)
                            )
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                            * (9.0 + n)
                            * (10.0 + n)
                        )
                        + S1
                    )
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (
                            1.0
                            * (
                                -1.09027627776e11
                                - 3.792865824e11 * (1.0 + n)
                                - 6.0713742384e11 * np.power(1.0 + n, 2)
                                - 5.9622705312e11 * np.power(1.0 + n, 3)
                                - 4.03242887656e11 * np.power(1.0 + n, 4)
                                - 1.99571643e11 * np.power(1.0 + n, 5)
                                - 7.48814979e10 * np.power(1.0 + n, 6)
                                - 2.175554084e10 * np.power(1.0 + n, 7)
                                - 4.951843521e9 * np.power(1.0 + n, 8)
                                - 8.86903e8 * np.power(1.0 + n, 9)
                                - 1.2470866e8 * np.power(1.0 + n, 10)
                                - 1.363476e7 * np.power(1.0 + n, 11)
                                - 1.137246e6 * np.power(1.0 + n, 12)
                                - 70000.0 * np.power(1.0 + n, 13)
                                - 3000.0 * np.power(1.0 + n, 14)
                                - 80.0 * np.power(1.0 + n, 15)
                                - 1.0 * np.power(1.0 + n, 16)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                            * np.power(8.0 + n, 2)
                            * np.power(9.0 + n, 2)
                            * np.power(10.0 + n, 2)
                        )
                    )
                )
            )
            / (10.0 + n)
            + n
            * (
                np.power(10.0 + n, -5)
                - 0.8224670334241131 / np.power(10.0 + n, 3)
                - (0.8224670334241131 * np.power(-1.0, 9.0 + n)) / np.power(10.0 + n, 3)
                + 0.419833592426477 / np.power(10.0 + n, 2)
                + (1.6218904955860713 * np.power(-1.0, 9.0 + n)) / np.power(10.0 + n, 2)
                + (1.2020569031595942 * np.power(-1.0, 10.0 + n))
                / np.power(10.0 + n, 2)
                - 0.3382260105347306 / (10.0 + n)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 9.0 + n)
                    * (
                        1 / (1.0 + n)
                        + (
                            4.0
                            * (9.0 + 2.0 * (1.0 + n))
                            * (
                                3044.0
                                + 5886.0 * (1.0 + n)
                                + 4299.0 * np.power(1.0 + n, 2)
                                + 1539.0 * np.power(1.0 + n, 3)
                                + 288.0 * np.power(1.0 + n, 4)
                                + 27.0 * np.power(1.0 + n, 5)
                                + np.power(1.0 + n, 6)
                            )
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                            * (9.0 + n)
                        )
                        + S1
                    )
                )
                / np.power(10.0 + n, 2)
                - (
                    0.8224670334241131
                    * np.power(-1.0, 10.0 + n)
                    * (
                        Sm1
                        - (1.0 * np.power(-1.0, n)) / (1.0 + n)
                        + (
                            4.0
                            * (
                                6396.0
                                + 9162.0 * (1.0 + n)
                                + 5473.0 * np.power(1.0 + n, 2)
                                + 1719.0 * np.power(1.0 + n, 3)
                                + 298.0 * np.power(1.0 + n, 4)
                                + 27.0 * np.power(1.0 + n, 5)
                                + np.power(1.0 + n, 6)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                            * (9.0 + n)
                        )
                    )
                )
                / np.power(10.0 + n, 2)
                + (
                    np.power(-1.0, 10.0 + n)
                    * (
                        Sm2
                        - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        + (
                            4.0
                            * (9.0 + 2.0 * (1.0 + n))
                            * (
                                3.6831936e7
                                + 1.10670624e8 * (1.0 + n)
                                + 1.4936364e8 * np.power(1.0 + n, 2)
                                + 1.2041208e8 * np.power(1.0 + n, 3)
                                + 6.4783246e7 * np.power(1.0 + n, 4)
                                + 2.454111e7 * np.power(1.0 + n, 5)
                                + 6.715739e6 * np.power(1.0 + n, 6)
                                + 1.33785e6 * np.power(1.0 + n, 7)
                                + 192561.0 * np.power(1.0 + n, 8)
                                + 19530.0 * np.power(1.0 + n, 9)
                                + 1325.0 * np.power(1.0 + n, 10)
                                + 54.0 * np.power(1.0 + n, 11)
                                + np.power(1.0 + n, 12)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                            * np.power(8.0 + n, 2)
                            * np.power(9.0 + n, 2)
                        )
                    )
                )
                / np.power(10.0 + n, 3)
                + (
                    np.power(-1.0, 10.0 + n)
                    * (
                        -1.0 * Sm21
                        + Sm3
                        + (
                            4.0
                            * (
                                1.4760576193536e13
                                + 7.3798658489088e13 * (1.0 + n)
                                + 1.72837443710016e14 * np.power(1.0 + n, 2)
                                + 2.52453402491616e14 * np.power(1.0 + n, 3)
                                + 2.5828967175624e14 * np.power(1.0 + n, 4)
                                + 1.97032446481464e14 * np.power(1.0 + n, 5)
                                + 1.16425369498108e14 * np.power(1.0 + n, 6)
                                + 5.4627507667116e13 * np.power(1.0 + n, 7)
                                + 2.0690074606371e13 * np.power(1.0 + n, 8)
                                + 6.392775359655e12 * np.power(1.0 + n, 9)
                                + 1.621160332314e12 * np.power(1.0 + n, 10)
                                + 3.38175413478e11 * np.power(1.0 + n, 11)
                                + 5.7948536701e10 * np.power(1.0 + n, 12)
                                + 8.115008166e9 * np.power(1.0 + n, 13)
                                + 9.1986012e8 * np.power(1.0 + n, 14)
                                + 8.3116584e7 * np.power(1.0 + n, 15)
                                + 5.847213e6 * np.power(1.0 + n, 16)
                                + 308691.0 * np.power(1.0 + n, 17)
                                + 11506.0 * np.power(1.0 + n, 18)
                                + 270.0 * np.power(1.0 + n, 19)
                                + 3.0 * np.power(1.0 + n, 20)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                            * np.power(6.0 + n, 3)
                            * np.power(7.0 + n, 3)
                            * np.power(8.0 + n, 3)
                            * np.power(9.0 + n, 3)
                        )
                        + (
                            2.0
                            * (
                                -2.3997963958272e13
                                - 1.14129905965056e14 * (1.0 + n)
                                - 2.5222059905856e14 * np.power(1.0 + n, 2)
                                - 3.44033181492512e14 * np.power(1.0 + n, 3)
                                - 3.23935732772496e14 * np.power(1.0 + n, 4)
                                - 2.22502088875352e14 * np.power(1.0 + n, 5)
                                - 1.14348498644148e14 * np.power(1.0 + n, 6)
                                - 4.3968646592044e13 * np.power(1.0 + n, 7)
                                - 1.21438136977e13 * np.power(1.0 + n, 8)
                                - 2.010931672623e12 * np.power(1.0 + n, 9)
                                + 4.9482178305e10 * np.power(1.0 + n, 10)
                                + 1.59991878826e11 * np.power(1.0 + n, 11)
                                + 6.0723226806e10 * np.power(1.0 + n, 12)
                                + 1.4651858516e10 * np.power(1.0 + n, 13)
                                + 2.59766429e9 * np.power(1.0 + n, 14)
                                + 3.51680472e8 * np.power(1.0 + n, 15)
                                + 3.6575004e7 * np.power(1.0 + n, 16)
                                + 2.886025e6 * np.power(1.0 + n, 17)
                                + 167625.0 * np.power(1.0 + n, 18)
                                + 6770.0 * np.power(1.0 + n, 19)
                                + 170.0 * np.power(1.0 + n, 20)
                                + 2.0 * np.power(1.0 + n, 21)
                            )
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                            * np.power(6.0 + n, 3)
                            * np.power(7.0 + n, 3)
                            * np.power(8.0 + n, 3)
                            * np.power(9.0 + n, 3)
                        )
                        + (S1 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                        - (
                            4.0
                            * (9.0 + 2.0 * (1.0 + n))
                            * (
                                3.6831936e7
                                + 1.10670624e8 * (1.0 + n)
                                + 1.4936364e8 * np.power(1.0 + n, 2)
                                + 1.2041208e8 * np.power(1.0 + n, 3)
                                + 6.4783246e7 * np.power(1.0 + n, 4)
                                + 2.454111e7 * np.power(1.0 + n, 5)
                                + 6.715739e6 * np.power(1.0 + n, 6)
                                + 1.33785e6 * np.power(1.0 + n, 7)
                                + 192561.0 * np.power(1.0 + n, 8)
                                + 19530.0 * np.power(1.0 + n, 9)
                                + 1325.0 * np.power(1.0 + n, 10)
                                + 54.0 * np.power(1.0 + n, 11)
                                + np.power(1.0 + n, 12)
                            )
                            * (1 / (1.0 + n) + S1)
                            * np.power(-1.0, n)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                            * np.power(8.0 + n, 2)
                            * np.power(9.0 + n, 2)
                        )
                        + (
                            1 / (1.0 + n)
                            + (
                                4.0
                                * (9.0 + 2.0 * (1.0 + n))
                                * (
                                    3044.0
                                    + 5886.0 * (1.0 + n)
                                    + 4299.0 * np.power(1.0 + n, 2)
                                    + 1539.0 * np.power(1.0 + n, 3)
                                    + 288.0 * np.power(1.0 + n, 4)
                                    + 27.0 * np.power(1.0 + n, 5)
                                    + np.power(1.0 + n, 6)
                                )
                            )
                            / (
                                (2.0 + n)
                                * (3.0 + n)
                                * (4.0 + n)
                                * (5.0 + n)
                                * (6.0 + n)
                                * (7.0 + n)
                                * (8.0 + n)
                                * (9.0 + n)
                            )
                            + S1
                        )
                        * (
                            Sm2
                            - (1.0 * np.power(-1.0, n)) / np.power(1.0 + n, 2)
                            + (
                                4.0
                                * (9.0 + 2.0 * (1.0 + n))
                                * (
                                    3.6831936e7
                                    + 1.10670624e8 * (1.0 + n)
                                    + 1.4936364e8 * np.power(1.0 + n, 2)
                                    + 1.2041208e8 * np.power(1.0 + n, 3)
                                    + 6.4783246e7 * np.power(1.0 + n, 4)
                                    + 2.454111e7 * np.power(1.0 + n, 5)
                                    + 6.715739e6 * np.power(1.0 + n, 6)
                                    + 1.33785e6 * np.power(1.0 + n, 7)
                                    + 192561.0 * np.power(1.0 + n, 8)
                                    + 19530.0 * np.power(1.0 + n, 9)
                                    + 1325.0 * np.power(1.0 + n, 10)
                                    + 54.0 * np.power(1.0 + n, 11)
                                    + np.power(1.0 + n, 12)
                                )
                                * np.power(-1.0, n)
                            )
                            / (
                                np.power(2.0 + n, 2)
                                * np.power(3.0 + n, 2)
                                * np.power(4.0 + n, 2)
                                * np.power(5.0 + n, 2)
                                * np.power(6.0 + n, 2)
                                * np.power(7.0 + n, 2)
                                * np.power(8.0 + n, 2)
                                * np.power(9.0 + n, 2)
                            )
                        )
                    )
                )
                / np.power(10.0 + n, 2)
            )
        )
    )


@nb.njit("c16(c16,c16,c16)", cache=True)
def F13(n, S1, S2):
    return (
        -0.15312792746068732 * n
        + (0.13621083778040208 * n) / (2.0 + n)
        - (0.474631789932249 * n) / (3.0 + n)
        + (0.24528438212633397 * n) / (4.0 + n)
        - (0.26580874921126374 * n) / (5.0 + n)
        + (1.2217722976683179 * n) / (6.0 + n)
        - (3.6324293738026023 * n) / (7.0 + n)
        + (7.4838836775956015 * n) / (8.0 + n)
        - (10.706375063797914 * n) / (9.0 + n)
        + (10.449787985527623 * n) / (10.0 + n)
        - (6.649468393739114 * n) / (11.0 + n)
        + (2.4904695902320904 * n) / (12.0 + n)
        - (0.41762920477450316 * n) / (13.0 + n)
        - 0.2720646169555415 * (-1.0 + 1 / (1.0 + n))
        - 0.0030864197530864196
        * n
        * (
            -49.613452021037574
            + 1695.6636939202713 / (1.0 + n)
            + 297.65017554444273 / (2.0 + n)
            - 53.043164791285136 / (3.0 + n)
            + (280.1816714156928 * (1.0 + (1.0 + n) * S1)) / np.power(1.0 + n, 2)
            + (566.2149227313704 * (1.0 + (2.0 + n) * (1 / (1.0 + n) + S1)))
            / np.power(2.0 + n, 2)
            - (
                115.5647471869277
                * (1.0 + (3.0 + n) * (1 / (1.0 + n) + 1 / (2.0 + n) + S1))
            )
            / np.power(3.0 + n, 2)
            - (
                1607.5136662661575
                * (
                    1.0
                    + n
                    * (1 / (1.0 + n) + (1.0 - 2.0 * (1.0 + n)) / (n * (1.0 + n)) + S1)
                )
            )
            / np.power(n, 2)
            + (
                972.0
                * (
                    1.0
                    + (2.0 + n) * (1 / (1.0 + n) + S1)
                    + np.power(2.0 + n, 2)
                    * (
                        np.power(1.0 + n, -2)
                        + S1 / (1.0 + n)
                        + 0.5 * (np.power(S1, 2) + S2)
                    )
                )
            )
            / np.power(2.0 + n, 3)
            - (
                1296.0
                * (
                    1.0
                    + (1.0 + n) * S1
                    + np.power(1.0 + n, 2)
                    * (
                        np.power(1.0 + n, -2)
                        + S1 / (1.0 + n)
                        - (1.0 * (1 / (1.0 + n) + S1)) / (1.0 + n)
                        + 0.5 * (np.power(S1, 2) + S2)
                    )
                )
            )
            / np.power(1.0 + n, 3)
            - (
                216.0
                * (
                    1.0
                    + (3.0 + n) * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)
                    + np.power(3.0 + n, 2)
                    * (
                        np.power(1.0 + n, -2)
                        + np.power(2.0 + n, -2)
                        + S1 / (1.0 + n)
                        + (1 / (1.0 + n) + S1) / (2.0 + n)
                        + 0.5 * (np.power(S1, 2) + S2)
                    )
                )
            )
            / np.power(3.0 + n, 3)
            + (
                540.0
                * (
                    1.0
                    + n
                    * (1 / (1.0 + n) + (1.0 - 2.0 * (1.0 + n)) / (n * (1.0 + n)) + S1)
                    + np.power(n, 2)
                    * (
                        np.power(1.0 + n, -2)
                        + 1 / (n * (1.0 + n))
                        + S1 / (1.0 + n)
                        + ((1.0 - 2.0 * (1.0 + n)) * (1 / (1.0 + n) + S1))
                        / (n * (1.0 + n))
                        + 0.5 * (np.power(S1, 2) + S2)
                    )
                )
            )
            / np.power(n, 3)
        )
    )


@nb.njit("c16(c16,c16,c16,c16)", cache=True)
def F19(n, S1, S2, S3):
    """Mellin tranfrom of eq 9.3 of :cite:`Blumlein:2009ta`"""
    return (
        7.548974594558902
        - 1.5497677311665408 / np.power(1.0 + n, 3)
        - 0.5497677311665407 / np.power(2.0 + n, 3)
        + 2.0 / np.power(2.0 + n, 2)
        - 11.975319856741933 / (np.power(1.0 + n, 2) * np.power(2.0 + n, 2))
        - (14.370383828090318 * n) / (np.power(1.0 + n, 2) * np.power(2.0 + n, 2))
        - (4.790127942696773 * np.power(n, 2))
        / (np.power(1.0 + n, 2) * np.power(2.0 + n, 2))
        + 3.0 / (2.0 + n)
        - 9.738329251443808 / ((1.0 + n) * (2.0 + n))
        - (6.492219500962539 * n) / ((1.0 + n) * (2.0 + n))
        - 0.2997677311665407 / np.power(3.0 + n, 3)
        - 0.1450639713483865 / np.power(3.0 + n, 2)
        - 0.05860975048126964 / (3.0 + n)
        - 0.18865662005542957 / np.power(4.0 + n, 3)
        - 0.07098989727431243 / np.power(4.0 + n, 2)
        - 0.021572713444232602 / (4.0 + n)
        - 0.12615662005542957 / np.power(5.0 + n, 3)
        - 0.03973989727431243 / np.power(5.0 + n, 2)
        - 0.009853963444232604 / (5.0 + n)
        - 0.08615662005542958 / np.power(6.0 + n, 3)
        - 0.02373989727431243 / np.power(6.0 + n, 2)
        - 0.005053963444232604 / (6.0 + n)
        - 0.058378842277651805 / np.power(7.0 + n, 3)
        - 0.01448063801505317 / np.power(7.0 + n, 2)
        - 0.0027391486294177886 / (7.0 + n)
        - 0.03797067901234568 / np.power(8.0 + n, 3)
        - 0.008649734224965707 / np.power(8.0 + n, 2)
        - 0.0014896692458276177 / (8.0 + n)
        - 0.02234567901234568 / np.power(9.0 + n, 3)
        - 0.004743484224965707 / np.power(9.0 + n, 2)
        - 0.0007572473708276177 / (9.0 + n)
        - 0.01 / np.power(10.0 + n, 3)
        - 0.002 / np.power(10.0 + n, 2)
        - 0.0003 / (10.0 + n)
        - 3.2461097504812697 * S1
        - 2.3950639713483866 * S2
        - (1.5497677311665408 * S3) / np.power(1.0 + n, 3)
        - (4.649303193499622 * n * S3) / np.power(1.0 + n, 3)
        - (4.649303193499622 * np.power(n, 2) * S3) / np.power(1.0 + n, 3)
        - (1.5497677311665408 * np.power(n, 3) * S3) / np.power(1.0 + n, 3)
    )


@nb.njit("c16(c16,c16,c16,c16)", cache=True)
def F21(n, Sm1, Sm2, Sm3):
    """Mellin transform of eq 9.4 of :cite:`Blumlein:2009ta`"""
    return 2.3148148148148148e-7 * (
        2.383072892806571e7 / np.power(-1.0, 1.0 * n)
        + 970000.0 / (2.0 + n)
        - 922800.0 / np.power(3.0 + n, 3)
        - 524120.0 / np.power(3.0 + n, 2)
        - 210625.0 / (3.0 + n)
        - 1.56e6 / np.power(4.0 + n, 3)
        + 1.1232e8 / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3))
        + (9.36e7 * n) / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3))
        + (2.808e7 * np.power(n, 2)) / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3))
        + (3.12e6 * np.power(n, 3)) / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3))
        - 1.4e6 / np.power(4.0 + n, 2)
        + 2.8e7 / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2))
        + (1.68e7 * n) / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2))
        + (2.8e6 * np.power(n, 2)) / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2))
        - 172800.0 / np.power(5.0 + n, 3)
        - 69120.0 / np.power(5.0 + n, 2)
        - 442800.0 / np.power(6.0 + n, 3)
        + 7.1131392e9
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        + (9.6920064e9 * n)
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        + (5.632416e9 * np.power(n, 2))
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        + (1.7853696e9 * np.power(n, 3))
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        + (3.241296e8 * np.power(n, 4))
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        + (3.18816e7 * np.power(n, 5))
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        + (1.3284e6 * np.power(n, 6))
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        - 204120.0 / np.power(6.0 + n, 2)
        + 1.6003008e8
        / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2) * np.power(6.0 + n, 2))
        + (1.5676416e8 * n)
        / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2) * np.power(6.0 + n, 2))
        + (5.878656e7 * np.power(n, 2))
        / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2) * np.power(6.0 + n, 2))
        + (9.79776e6 * np.power(n, 3))
        / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2) * np.power(6.0 + n, 2))
        + (612360.0 * np.power(n, 4))
        / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2) * np.power(6.0 + n, 2))
        + 428166.0 / (8.0 + 6.0 * n + np.power(n, 2))
        + (142722.0 * n) / (8.0 + 6.0 * n + np.power(n, 2))
        - 165888.0 / (15.0 + 8.0 * n + np.power(n, 2))
        - (41472.0 * n) / (15.0 + 8.0 * n + np.power(n, 2))
        + (1.4001361e7 * Sm1) / np.power(-1.0, 1.0 * n)
        + (1.024412e7 * Sm2) / np.power(-1.0, 1.0 * n)
        + (6.3228e6 * Sm3) / np.power(-1.0, 1.0 * n)
        + (
            np.power(-1.0, 1.0 - 1.0 * n)
            * (3.0568281e7 + 3.8246842e7 * n + 1.4001361e7 * np.power(n, 2))
            * np.power(-1.0, n)
        )
        / np.power(1.0 + n, 3)
    )


@nb.njit("c16(c16,c16,c16,c16)", cache=True)
def F20(n, Sm1, Sm2, Sm3):
    """Mellin transform of eq 9.5 :cite:`Blumlein:2009ta`"""
    return 2.3148148148148148e-7 * (
        1.8204889223408133e7 / np.power(-1.0, 1.0 * n)
        - 650000.0 / (2.0 + n)
        - 382800.0 / np.power(3.0 + n, 3)
        - 254120.0 / np.power(3.0 + n, 2)
        - 109375.0 / (3.0 + n)
        + 600000.0 / np.power(4.0 + n, 3)
        - 4.32e7 / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3))
        - (3.6e7 * n) / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3))
        - (1.08e7 * np.power(n, 2)) / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3))
        - (1.2e6 * np.power(n, 3)) / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3))
        + 760000.0 / np.power(4.0 + n, 2)
        - 1.52e7 / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2))
        - (9.12e6 * n) / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2))
        - (1.52e6 * np.power(n, 2)) / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2))
        - 172800.0 / np.power(5.0 + n, 3)
        - 69120.0 / np.power(5.0 + n, 2)
        + 97200.0 / np.power(6.0 + n, 3)
        - 1.5614208e9
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        - (2.1275136e9 * n)
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        - (1.236384e9 * np.power(n, 2))
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        - (3.919104e8 * np.power(n, 3))
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        - (7.11504e7 * np.power(n, 4))
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        - (6.9984e6 * np.power(n, 5))
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        - (291600.0 * np.power(n, 6))
        / (np.power(2.0 + n, 3) * np.power(4.0 + n, 3) * np.power(6.0 + n, 3))
        + 65880.0 / np.power(6.0 + n, 2)
        - 5.164992e7
        / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2) * np.power(6.0 + n, 2))
        - (5.059584e7 * n)
        / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2) * np.power(6.0 + n, 2))
        - (1.897344e7 * np.power(n, 2))
        / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2) * np.power(6.0 + n, 2))
        - (3.16224e6 * np.power(n, 3))
        / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2) * np.power(6.0 + n, 2))
        - (197640.0 * np.power(n, 4))
        / (np.power(2.0 + n, 2) * np.power(4.0 + n, 2) * np.power(6.0 + n, 2))
        - 179334.0 / (8.0 + 6.0 * n + np.power(n, 2))
        - (59778.0 * n) / (8.0 + 6.0 * n + np.power(n, 2))
        - 165888.0 / (15.0 + 8.0 * n + np.power(n, 2))
        - (41472.0 * n) / (15.0 + 8.0 * n + np.power(n, 2))
        + (1.2280111e7 * Sm1) / np.power(-1.0, 1.0 * n)
        + (7.81412e6 * Sm2) / np.power(-1.0, 1.0 * n)
        + (3.6228e6 * Sm3) / np.power(-1.0, 1.0 * n)
        + (
            np.power(-1.0, 1.0 - 1.0 * n)
            * (2.3717031e7 + 3.2374342e7 * n + 1.2280111e7 * np.power(n, 2))
            * np.power(-1.0, n)
        )
        / np.power(1.0 + n, 3)
    )


@nb.njit("c16(c16,c16,c16)", cache=True)
def F14F12(n, S1, S21):
    """Linear combination of :math:`M[( 2 S_{2,2}(x)- Li_2(x)^2/2)/(1+x)](N)`"""
    return (
        -0.5626569734260486
        + 0.49999902059348167
        * (
            (-1.6449340668482262 * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)) / (2.0 + n)
            + (
                np.power(1.0 + n, -3)
                + np.power(2.0 + n, -3)
                + S1 / np.power(1.0 + n, 2)
                + (1 / (1.0 + n) + S1) / np.power(2.0 + n, 2)
                + S21
            )
            / (2.0 + n)
            + n
            * (
                -1.0 / np.power(2.0 + n, 5)
                + 1.6449340668482262 / np.power(2.0 + n, 3)
                - 0.8117424252833533 / (2.0 + n)
                - (1.0 * (1 / (1.0 + n) + S1)) / np.power(2.0 + n, 4)
                + (1.6449340668482262 * (1 / (1.0 + n) + S1)) / np.power(2.0 + n, 2)
                - (1.0 * (np.power(1.0 + n, -3) + S1 / np.power(1.0 + n, 2) + S21))
                / np.power(2.0 + n, 2)
            )
        )
        - 0.9999999952263307
        * (
            (-1.6449340668482262 * (1 / (1.0 + n) + S1)) / (1.0 + n)
            + (np.power(1.0 + n, -3) + S1 / np.power(1.0 + n, 2) + S21) / (1.0 + n)
            + n
            * (
                -1.0 / np.power(1.0 + n, 5)
                + 1.6449340668482262 / np.power(1.0 + n, 3)
                - 0.8117424252833533 / (1.0 + n)
                - (1.0 * S1) / np.power(1.0 + n, 4)
                + (1.6449340668482262 * S1) / np.power(1.0 + n, 2)
                - (
                    1.0
                    * (
                        np.power(1.0 + n, -3)
                        + S1 / np.power(1.0 + n, 2)
                        - (1.0 * (1 / (1.0 + n) + S1)) / np.power(1.0 + n, 2)
                        + S21
                    )
                )
                / np.power(1.0 + n, 2)
            )
        )
        - 0.3332995604546604
        * (
            (
                -1.6449340668482262
                * (
                    1 / (1.0 + n)
                    + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                    + S1
                )
            )
            / (3.0 + n)
            + (
                np.power(1.0 + n, -3)
                + (
                    11.0
                    + 20.0 * (1.0 + n)
                    + 13.0 * np.power(1.0 + n, 2)
                    + 3.0 * np.power(1.0 + n, 3)
                )
                / (np.power(2.0 + n, 3) * np.power(3.0 + n, 3))
                + S1 / np.power(1.0 + n, 2)
                + (
                    (5.0 + 6.0 * (1.0 + n) + 2.0 * np.power(1.0 + n, 2))
                    * (1 / (1.0 + n) + S1)
                )
                / (np.power(2.0 + n, 2) * np.power(3.0 + n, 2))
                + S21
            )
            / (3.0 + n)
            + n
            * (
                -1.0 / np.power(3.0 + n, 5)
                + 1.6449340668482262 / np.power(3.0 + n, 3)
                - 0.8117424252833533 / (3.0 + n)
                - (1.0 * (1 / (1.0 + n) + 1 / (2.0 + n) + S1)) / np.power(3.0 + n, 4)
                + (1.6449340668482262 * (1 / (1.0 + n) + 1 / (2.0 + n) + S1))
                / np.power(3.0 + n, 2)
                - (
                    1.0
                    * (
                        np.power(1.0 + n, -3)
                        + np.power(2.0 + n, -3)
                        + S1 / np.power(1.0 + n, 2)
                        + (1 / (1.0 + n) + S1) / np.power(2.0 + n, 2)
                        + S21
                    )
                )
                / np.power(3.0 + n, 2)
            )
        )
        + 0.24954082848379078
        * (
            (
                -1.6449340668482262
                * (
                    1 / (1.0 + n)
                    + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                    + S1
                )
            )
            / (4.0 + n)
            + (
                np.power(1.0 + n, -3)
                + (
                    341.0
                    + 1017.0 * (1.0 + n)
                    + 1289.0 * np.power(1.0 + n, 2)
                    + 881.0 * np.power(1.0 + n, 3)
                    + 340.0 * np.power(1.0 + n, 4)
                    + 70.0 * np.power(1.0 + n, 5)
                    + 6.0 * np.power(1.0 + n, 6)
                )
                / (np.power(2.0 + n, 3) * np.power(3.0 + n, 3) * np.power(4.0 + n, 3))
                + S1 / np.power(1.0 + n, 2)
                + (
                    (
                        49.0
                        + 96.0 * (1.0 + n)
                        + 72.0 * np.power(1.0 + n, 2)
                        + 24.0 * np.power(1.0 + n, 3)
                        + 3.0 * np.power(1.0 + n, 4)
                    )
                    * (1 / (1.0 + n) + S1)
                )
                / (np.power(2.0 + n, 2) * np.power(3.0 + n, 2) * np.power(4.0 + n, 2))
                + S21
            )
            / (4.0 + n)
            + n
            * (
                -1.0 / np.power(4.0 + n, 5)
                + 1.6449340668482262 / np.power(4.0 + n, 3)
                - 0.8117424252833533 / (4.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                        + S1
                    )
                )
                / np.power(4.0 + n, 4)
                + (
                    1.6449340668482262
                    * (
                        1 / (1.0 + n)
                        + (3.0 + 2.0 * (1.0 + n)) / ((2.0 + n) * (3.0 + n))
                        + S1
                    )
                )
                / np.power(4.0 + n, 2)
                - (
                    1.0
                    * (
                        np.power(1.0 + n, -3)
                        + (
                            11.0
                            + 20.0 * (1.0 + n)
                            + 13.0 * np.power(1.0 + n, 2)
                            + 3.0 * np.power(1.0 + n, 3)
                        )
                        / (np.power(2.0 + n, 3) * np.power(3.0 + n, 3))
                        + S1 / np.power(1.0 + n, 2)
                        + (
                            (5.0 + 6.0 * (1.0 + n) + 2.0 * np.power(1.0 + n, 2))
                            * (1 / (1.0 + n) + S1)
                        )
                        / (np.power(2.0 + n, 2) * np.power(3.0 + n, 2))
                        + S21
                    )
                )
                / np.power(4.0 + n, 2)
            )
        )
        - 0.1967571967137462
        * (
            (
                -1.6449340668482262
                * (
                    1 / (1.0 + n)
                    + (
                        2.0
                        * (5.0 + 2.0 * (1.0 + n))
                        * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                    )
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                    + S1
                )
            )
            / (5.0 + n)
            + (
                np.power(1.0 + n, -3)
                + (
                    23624.0
                    + 90576.0 * (1.0 + n)
                    + 155374.0 * np.power(1.0 + n, 2)
                    + 155615.0 * np.power(1.0 + n, 3)
                    + 99831.0 * np.power(1.0 + n, 4)
                    + 42413.0 * np.power(1.0 + n, 5)
                    + 11911.0 * np.power(1.0 + n, 6)
                    + 2130.0 * np.power(1.0 + n, 7)
                    + 220.0 * np.power(1.0 + n, 8)
                    + 10.0 * np.power(1.0 + n, 9)
                )
                / (
                    np.power(2.0 + n, 3)
                    * np.power(3.0 + n, 3)
                    * np.power(4.0 + n, 3)
                    * np.power(5.0 + n, 3)
                )
                + S1 / np.power(1.0 + n, 2)
                + (
                    2.0
                    * (
                        410.0
                        + 1030.0 * (1.0 + n)
                        + 1081.0 * np.power(1.0 + n, 2)
                        + 600.0 * np.power(1.0 + n, 3)
                        + 185.0 * np.power(1.0 + n, 4)
                        + 30.0 * np.power(1.0 + n, 5)
                        + 2.0 * np.power(1.0 + n, 6)
                    )
                    * (1 / (1.0 + n) + S1)
                )
                / (
                    np.power(2.0 + n, 2)
                    * np.power(3.0 + n, 2)
                    * np.power(4.0 + n, 2)
                    * np.power(5.0 + n, 2)
                )
                + S21
            )
            / (5.0 + n)
            + n
            * (
                -1.0 / np.power(5.0 + n, 5)
                + 1.6449340668482262 / np.power(5.0 + n, 3)
                - 0.8117424252833533 / (5.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                        + S1
                    )
                )
                / np.power(5.0 + n, 4)
                + (
                    1.6449340668482262
                    * (
                        1 / (1.0 + n)
                        + (11.0 + 12.0 * (1.0 + n) + 3.0 * np.power(1.0 + n, 2))
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n))
                        + S1
                    )
                )
                / np.power(5.0 + n, 2)
                - (
                    1.0
                    * (
                        np.power(1.0 + n, -3)
                        + (
                            341.0
                            + 1017.0 * (1.0 + n)
                            + 1289.0 * np.power(1.0 + n, 2)
                            + 881.0 * np.power(1.0 + n, 3)
                            + 340.0 * np.power(1.0 + n, 4)
                            + 70.0 * np.power(1.0 + n, 5)
                            + 6.0 * np.power(1.0 + n, 6)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                        )
                        + S1 / np.power(1.0 + n, 2)
                        + (
                            (
                                49.0
                                + 96.0 * (1.0 + n)
                                + 72.0 * np.power(1.0 + n, 2)
                                + 24.0 * np.power(1.0 + n, 3)
                                + 3.0 * np.power(1.0 + n, 4)
                            )
                            * (1 / (1.0 + n) + S1)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                        )
                        + S21
                    )
                )
                / np.power(5.0 + n, 2)
            )
        )
        + 0.1530503487172192
        * (
            (
                -1.6449340668482262
                * (
                    1 / (1.0 + n)
                    + (
                        274.0
                        + 450.0 * (1.0 + n)
                        + 255.0 * np.power(1.0 + n, 2)
                        + 60.0 * np.power(1.0 + n, 3)
                        + 5.0 * np.power(1.0 + n, 4)
                    )
                    / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n) * (6.0 + n))
                    + S1
                )
            )
            / (6.0 + n)
            + (
                np.power(1.0 + n, -3)
                + (
                    3.110824e6
                    + 1.40106e7 * (1.0 + n)
                    + 2.894151e7 * np.power(1.0 + n, 2)
                    + 3.6105269e7 * np.power(1.0 + n, 3)
                    + 3.0197768e7 * np.power(1.0 + n, 4)
                    + 1.7798299e7 * np.power(1.0 + n, 5)
                    + 7.568825e6 * np.power(1.0 + n, 6)
                    + 2.337861e6 * np.power(1.0 + n, 7)
                    + 520317.0 * np.power(1.0 + n, 8)
                    + 81361.0 * np.power(1.0 + n, 9)
                    + 8485.0 * np.power(1.0 + n, 10)
                    + 530.0 * np.power(1.0 + n, 11)
                    + 15.0 * np.power(1.0 + n, 12)
                )
                / (
                    np.power(2.0 + n, 3)
                    * np.power(3.0 + n, 3)
                    * np.power(4.0 + n, 3)
                    * np.power(5.0 + n, 3)
                    * np.power(6.0 + n, 3)
                )
                + S1 / np.power(1.0 + n, 2)
                + (
                    (
                        21076.0
                        + 62100.0 * (1.0 + n)
                        + 79650.0 * np.power(1.0 + n, 2)
                        + 57660.0 * np.power(1.0 + n, 3)
                        + 25685.0 * np.power(1.0 + n, 4)
                        + 7200.0 * np.power(1.0 + n, 5)
                        + 1240.0 * np.power(1.0 + n, 6)
                        + 120.0 * np.power(1.0 + n, 7)
                        + 5.0 * np.power(1.0 + n, 8)
                    )
                    * (1 / (1.0 + n) + S1)
                )
                / (
                    np.power(2.0 + n, 2)
                    * np.power(3.0 + n, 2)
                    * np.power(4.0 + n, 2)
                    * np.power(5.0 + n, 2)
                    * np.power(6.0 + n, 2)
                )
                + S21
            )
            / (6.0 + n)
            + n
            * (
                -1.0 / np.power(6.0 + n, 5)
                + 1.6449340668482262 / np.power(6.0 + n, 3)
                - 0.8117424252833533 / (6.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (
                            2.0
                            * (5.0 + 2.0 * (1.0 + n))
                            * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                        + S1
                    )
                )
                / np.power(6.0 + n, 4)
                + (
                    1.6449340668482262
                    * (
                        1 / (1.0 + n)
                        + (
                            2.0
                            * (5.0 + 2.0 * (1.0 + n))
                            * (5.0 + 5.0 * (1.0 + n) + np.power(1.0 + n, 2))
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n))
                        + S1
                    )
                )
                / np.power(6.0 + n, 2)
                - (
                    1.0
                    * (
                        np.power(1.0 + n, -3)
                        + (
                            23624.0
                            + 90576.0 * (1.0 + n)
                            + 155374.0 * np.power(1.0 + n, 2)
                            + 155615.0 * np.power(1.0 + n, 3)
                            + 99831.0 * np.power(1.0 + n, 4)
                            + 42413.0 * np.power(1.0 + n, 5)
                            + 11911.0 * np.power(1.0 + n, 6)
                            + 2130.0 * np.power(1.0 + n, 7)
                            + 220.0 * np.power(1.0 + n, 8)
                            + 10.0 * np.power(1.0 + n, 9)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                        )
                        + S1 / np.power(1.0 + n, 2)
                        + (
                            2.0
                            * (
                                410.0
                                + 1030.0 * (1.0 + n)
                                + 1081.0 * np.power(1.0 + n, 2)
                                + 600.0 * np.power(1.0 + n, 3)
                                + 185.0 * np.power(1.0 + n, 4)
                                + 30.0 * np.power(1.0 + n, 5)
                                + 2.0 * np.power(1.0 + n, 6)
                            )
                            * (1 / (1.0 + n) + S1)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                        )
                        + S21
                    )
                )
                / np.power(6.0 + n, 2)
            )
        )
        - 0.10602798528818422
        * (
            (
                -1.6449340668482262
                * (
                    1 / (1.0 + n)
                    + (
                        (7.0 + 2.0 * (1.0 + n))
                        * (
                            252.0
                            + 392.0 * (1.0 + n)
                            + 203.0 * np.power(1.0 + n, 2)
                            + 42.0 * np.power(1.0 + n, 3)
                            + 3.0 * np.power(1.0 + n, 4)
                        )
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                    )
                    + S1
                )
            )
            / (7.0 + n)
            + (
                np.power(1.0 + n, -3)
                + (
                    6.97339584e8
                    + 3.525030432e9 * (1.0 + n)
                    + 8.293536336e9 * np.power(1.0 + n, 2)
                    + 1.2007529256e10 * np.power(1.0 + n, 3)
                    + 1.193375892e10 * np.power(1.0 + n, 4)
                    + 8.60864186e9 * np.power(1.0 + n, 5)
                    + 4.650892802e9 * np.power(1.0 + n, 6)
                    + 1.914862936e9 * np.power(1.0 + n, 7)
                    + 6.05522329e8 * np.power(1.0 + n, 8)
                    + 1.47044895e8 * np.power(1.0 + n, 9)
                    + 2.7198669e7 * np.power(1.0 + n, 10)
                    + 3.763711e6 * np.power(1.0 + n, 11)
                    + 377251.0 * np.power(1.0 + n, 12)
                    + 25865.0 * np.power(1.0 + n, 13)
                    + 1085.0 * np.power(1.0 + n, 14)
                    + 21.0 * np.power(1.0 + n, 15)
                )
                / (
                    np.power(2.0 + n, 3)
                    * np.power(3.0 + n, 3)
                    * np.power(4.0 + n, 3)
                    * np.power(5.0 + n, 3)
                    * np.power(6.0 + n, 3)
                    * np.power(7.0 + n, 3)
                )
                + S1 / np.power(1.0 + n, 2)
                + (
                    (
                        773136.0
                        + 2.554272e6 * (1.0 + n)
                        + 3.762752e6 * np.power(1.0 + n, 2)
                        + 3.23736e6 * np.power(1.0 + n, 3)
                        + 1.797035e6 * np.power(1.0 + n, 4)
                        + 671790.0 * np.power(1.0 + n, 5)
                        + 171248.0 * np.power(1.0 + n, 6)
                        + 29400.0 * np.power(1.0 + n, 7)
                        + 3255.0 * np.power(1.0 + n, 8)
                        + 210.0 * np.power(1.0 + n, 9)
                        + 6.0 * np.power(1.0 + n, 10)
                    )
                    * (1 / (1.0 + n) + S1)
                )
                / (
                    np.power(2.0 + n, 2)
                    * np.power(3.0 + n, 2)
                    * np.power(4.0 + n, 2)
                    * np.power(5.0 + n, 2)
                    * np.power(6.0 + n, 2)
                    * np.power(7.0 + n, 2)
                )
                + S21
            )
            / (7.0 + n)
            + n
            * (
                -1.0 / np.power(7.0 + n, 5)
                + 1.6449340668482262 / np.power(7.0 + n, 3)
                - 0.8117424252833533 / (7.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (
                            274.0
                            + 450.0 * (1.0 + n)
                            + 255.0 * np.power(1.0 + n, 2)
                            + 60.0 * np.power(1.0 + n, 3)
                            + 5.0 * np.power(1.0 + n, 4)
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n) * (6.0 + n))
                        + S1
                    )
                )
                / np.power(7.0 + n, 4)
                + (
                    1.6449340668482262
                    * (
                        1 / (1.0 + n)
                        + (
                            274.0
                            + 450.0 * (1.0 + n)
                            + 255.0 * np.power(1.0 + n, 2)
                            + 60.0 * np.power(1.0 + n, 3)
                            + 5.0 * np.power(1.0 + n, 4)
                        )
                        / ((2.0 + n) * (3.0 + n) * (4.0 + n) * (5.0 + n) * (6.0 + n))
                        + S1
                    )
                )
                / np.power(7.0 + n, 2)
                - (
                    1.0
                    * (
                        np.power(1.0 + n, -3)
                        + (
                            3.110824e6
                            + 1.40106e7 * (1.0 + n)
                            + 2.894151e7 * np.power(1.0 + n, 2)
                            + 3.6105269e7 * np.power(1.0 + n, 3)
                            + 3.0197768e7 * np.power(1.0 + n, 4)
                            + 1.7798299e7 * np.power(1.0 + n, 5)
                            + 7.568825e6 * np.power(1.0 + n, 6)
                            + 2.337861e6 * np.power(1.0 + n, 7)
                            + 520317.0 * np.power(1.0 + n, 8)
                            + 81361.0 * np.power(1.0 + n, 9)
                            + 8485.0 * np.power(1.0 + n, 10)
                            + 530.0 * np.power(1.0 + n, 11)
                            + 15.0 * np.power(1.0 + n, 12)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                            * np.power(6.0 + n, 3)
                        )
                        + S1 / np.power(1.0 + n, 2)
                        + (
                            (
                                21076.0
                                + 62100.0 * (1.0 + n)
                                + 79650.0 * np.power(1.0 + n, 2)
                                + 57660.0 * np.power(1.0 + n, 3)
                                + 25685.0 * np.power(1.0 + n, 4)
                                + 7200.0 * np.power(1.0 + n, 5)
                                + 1240.0 * np.power(1.0 + n, 6)
                                + 120.0 * np.power(1.0 + n, 7)
                                + 5.0 * np.power(1.0 + n, 8)
                            )
                            * (1 / (1.0 + n) + S1)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                        )
                        + S21
                    )
                )
                / np.power(7.0 + n, 2)
            )
        )
        + 0.056951717764149916
        * (
            (
                -1.6449340668482262
                * (
                    1 / (1.0 + n)
                    + (
                        13068.0
                        + 26264.0 * (1.0 + n)
                        + 20307.0 * np.power(1.0 + n, 2)
                        + 7840.0 * np.power(1.0 + n, 3)
                        + 1610.0 * np.power(1.0 + n, 4)
                        + 168.0 * np.power(1.0 + n, 5)
                        + 7.0 * np.power(1.0 + n, 6)
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                    )
                    + S1
                )
            )
            / (8.0 + n)
            + (
                np.power(1.0 + n, -3)
                + (
                    2.0
                    * (
                        1.22980964256e11
                        + 6.79202212752e11 * (1.0 + n)
                        + 1.762986212232e12 * np.power(1.0 + n, 2)
                        + 2.849976037428e12 * np.power(1.0 + n, 3)
                        + 3.208712317944e12 * np.power(1.0 + n, 4)
                        + 2.66793900071e12 * np.power(1.0 + n, 5)
                        + 1.696140569839e12 * np.power(1.0 + n, 6)
                        + 8.42534361945e11 * np.power(1.0 + n, 7)
                        + 3.31394293594e11 * np.power(1.0 + n, 8)
                        + 1.03973066426e11 * np.power(1.0 + n, 9)
                        + 2.6083138284e10 * np.power(1.0 + n, 10)
                        + 5.220244242e9 * np.power(1.0 + n, 11)
                        + 8.27501148e8 * np.power(1.0 + n, 12)
                        + 1.02512358e8 * np.power(1.0 + n, 13)
                        + 9.709175e6 * np.power(1.0 + n, 14)
                        + 678601.0 * np.power(1.0 + n, 15)
                        + 32970.0 * np.power(1.0 + n, 16)
                        + 994.0 * np.power(1.0 + n, 17)
                        + 14.0 * np.power(1.0 + n, 18)
                    )
                )
                / (
                    np.power(2.0 + n, 3)
                    * np.power(3.0 + n, 3)
                    * np.power(4.0 + n, 3)
                    * np.power(5.0 + n, 3)
                    * np.power(6.0 + n, 3)
                    * np.power(7.0 + n, 3)
                    * np.power(8.0 + n, 3)
                )
                + S1 / np.power(1.0 + n, 2)
                + (
                    (
                        3.8402064e7
                        + 1.38523392e8 * (1.0 + n)
                        + 2.26358048e8 * np.power(1.0 + n, 2)
                        + 2.20651312e8 * np.power(1.0 + n, 3)
                        + 1.42622963e8 * np.power(1.0 + n, 4)
                        + 6.434848e7 * np.power(1.0 + n, 5)
                        + 2.07774e7 * np.power(1.0 + n, 6)
                        + 4.838848e6 * np.power(1.0 + n, 7)
                        + 807086.0 * np.power(1.0 + n, 8)
                        + 94080.0 * np.power(1.0 + n, 9)
                        + 7280.0 * np.power(1.0 + n, 10)
                        + 336.0 * np.power(1.0 + n, 11)
                        + 7.0 * np.power(1.0 + n, 12)
                    )
                    * (1 / (1.0 + n) + S1)
                )
                / (
                    np.power(2.0 + n, 2)
                    * np.power(3.0 + n, 2)
                    * np.power(4.0 + n, 2)
                    * np.power(5.0 + n, 2)
                    * np.power(6.0 + n, 2)
                    * np.power(7.0 + n, 2)
                    * np.power(8.0 + n, 2)
                )
                + S21
            )
            / (8.0 + n)
            + n
            * (
                -1.0 / np.power(8.0 + n, 5)
                + 1.6449340668482262 / np.power(8.0 + n, 3)
                - 0.8117424252833533 / (8.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (
                            (7.0 + 2.0 * (1.0 + n))
                            * (
                                252.0
                                + 392.0 * (1.0 + n)
                                + 203.0 * np.power(1.0 + n, 2)
                                + 42.0 * np.power(1.0 + n, 3)
                                + 3.0 * np.power(1.0 + n, 4)
                            )
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                        )
                        + S1
                    )
                )
                / np.power(8.0 + n, 4)
                + (
                    1.6449340668482262
                    * (
                        1 / (1.0 + n)
                        + (
                            (7.0 + 2.0 * (1.0 + n))
                            * (
                                252.0
                                + 392.0 * (1.0 + n)
                                + 203.0 * np.power(1.0 + n, 2)
                                + 42.0 * np.power(1.0 + n, 3)
                                + 3.0 * np.power(1.0 + n, 4)
                            )
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                        )
                        + S1
                    )
                )
                / np.power(8.0 + n, 2)
                - (
                    1.0
                    * (
                        np.power(1.0 + n, -3)
                        + (
                            6.97339584e8
                            + 3.525030432e9 * (1.0 + n)
                            + 8.293536336e9 * np.power(1.0 + n, 2)
                            + 1.2007529256e10 * np.power(1.0 + n, 3)
                            + 1.193375892e10 * np.power(1.0 + n, 4)
                            + 8.60864186e9 * np.power(1.0 + n, 5)
                            + 4.650892802e9 * np.power(1.0 + n, 6)
                            + 1.914862936e9 * np.power(1.0 + n, 7)
                            + 6.05522329e8 * np.power(1.0 + n, 8)
                            + 1.47044895e8 * np.power(1.0 + n, 9)
                            + 2.7198669e7 * np.power(1.0 + n, 10)
                            + 3.763711e6 * np.power(1.0 + n, 11)
                            + 377251.0 * np.power(1.0 + n, 12)
                            + 25865.0 * np.power(1.0 + n, 13)
                            + 1085.0 * np.power(1.0 + n, 14)
                            + 21.0 * np.power(1.0 + n, 15)
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                            * np.power(6.0 + n, 3)
                            * np.power(7.0 + n, 3)
                        )
                        + S1 / np.power(1.0 + n, 2)
                        + (
                            (
                                773136.0
                                + 2.554272e6 * (1.0 + n)
                                + 3.762752e6 * np.power(1.0 + n, 2)
                                + 3.23736e6 * np.power(1.0 + n, 3)
                                + 1.797035e6 * np.power(1.0 + n, 4)
                                + 671790.0 * np.power(1.0 + n, 5)
                                + 171248.0 * np.power(1.0 + n, 6)
                                + 29400.0 * np.power(1.0 + n, 7)
                                + 3255.0 * np.power(1.0 + n, 8)
                                + 210.0 * np.power(1.0 + n, 9)
                                + 6.0 * np.power(1.0 + n, 10)
                            )
                            * (1 / (1.0 + n) + S1)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                        )
                        + S21
                    )
                )
                / np.power(8.0 + n, 2)
            )
        )
        - 0.019847559824380426
        * (
            (
                -1.6449340668482262
                * (
                    1 / (1.0 + n)
                    + (
                        4.0
                        * (9.0 + 2.0 * (1.0 + n))
                        * (
                            3044.0
                            + 5886.0 * (1.0 + n)
                            + 4299.0 * np.power(1.0 + n, 2)
                            + 1539.0 * np.power(1.0 + n, 3)
                            + 288.0 * np.power(1.0 + n, 4)
                            + 27.0 * np.power(1.0 + n, 5)
                            + np.power(1.0 + n, 6)
                        )
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                        * (9.0 + n)
                    )
                    + S1
                )
            )
            / (9.0 + n)
            + (
                np.power(1.0 + n, -3)
                + (
                    6.0
                    * (
                        2.1452686055424e13
                        + 1.27193972324352e14 * (1.0 + n)
                        + 3.569135825824e14 * np.power(1.0 + n, 2)
                        + 6.28964181904288e14 * np.power(1.0 + n, 3)
                        + 7.79557064653264e14 * np.power(1.0 + n, 4)
                        + 7.2173981400876e14 * np.power(1.0 + n, 5)
                        + 5.17717816384772e14 * np.power(1.0 + n, 6)
                        + 2.94648846212476e14 * np.power(1.0 + n, 7)
                        + 1.35183891860404e14 * np.power(1.0 + n, 8)
                        + 5.0528576648611e13 * np.power(1.0 + n, 9)
                        + 1.5487423206191e13 * np.power(1.0 + n, 10)
                        + 3.905253305568e12 * np.power(1.0 + n, 11)
                        + 8.10278287284e11 * np.power(1.0 + n, 12)
                        + 1.37943606892e11 * np.power(1.0 + n, 13)
                        + 1.9149259574e10 * np.power(1.0 + n, 14)
                        + 2.145327532e9 * np.power(1.0 + n, 15)
                        + 1.90913568e8 * np.power(1.0 + n, 16)
                        + 1.3175883e7 * np.power(1.0 + n, 17)
                        + 679567.0 * np.power(1.0 + n, 18)
                        + 24640.0 * np.power(1.0 + n, 19)
                        + 560.0 * np.power(1.0 + n, 20)
                        + 6.0 * np.power(1.0 + n, 21)
                    )
                )
                / (
                    np.power(2.0 + n, 3)
                    * np.power(3.0 + n, 3)
                    * np.power(4.0 + n, 3)
                    * np.power(5.0 + n, 3)
                    * np.power(6.0 + n, 3)
                    * np.power(7.0 + n, 3)
                    * np.power(8.0 + n, 3)
                    * np.power(9.0 + n, 3)
                )
                + S1 / np.power(1.0 + n, 2)
                + (
                    4.0
                    * (
                        6.20783424e8
                        + 2.402913888e9 * (1.0 + n)
                        + 4.261208648e9 * np.power(1.0 + n, 2)
                        + 4.5733464e9 * np.power(1.0 + n, 3)
                        + 3.31344237e9 * np.power(1.0 + n, 4)
                        + 1.713293694e9 * np.power(1.0 + n, 5)
                        + 6.51986769e8 * np.power(1.0 + n, 6)
                        + 1.85551632e8 * np.power(1.0 + n, 7)
                        + 3.9703709e7 * np.power(1.0 + n, 8)
                        + 6.360228e6 * np.power(1.0 + n, 9)
                        + 751317.0 * np.power(1.0 + n, 10)
                        + 63504.0 * np.power(1.0 + n, 11)
                        + 3633.0 * np.power(1.0 + n, 12)
                        + 126.0 * np.power(1.0 + n, 13)
                        + 2.0 * np.power(1.0 + n, 14)
                    )
                    * (1 / (1.0 + n) + S1)
                )
                / (
                    np.power(2.0 + n, 2)
                    * np.power(3.0 + n, 2)
                    * np.power(4.0 + n, 2)
                    * np.power(5.0 + n, 2)
                    * np.power(6.0 + n, 2)
                    * np.power(7.0 + n, 2)
                    * np.power(8.0 + n, 2)
                    * np.power(9.0 + n, 2)
                )
                + S21
            )
            / (9.0 + n)
            + n
            * (
                -1.0 / np.power(9.0 + n, 5)
                + 1.6449340668482262 / np.power(9.0 + n, 3)
                - 0.8117424252833533 / (9.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (
                            13068.0
                            + 26264.0 * (1.0 + n)
                            + 20307.0 * np.power(1.0 + n, 2)
                            + 7840.0 * np.power(1.0 + n, 3)
                            + 1610.0 * np.power(1.0 + n, 4)
                            + 168.0 * np.power(1.0 + n, 5)
                            + 7.0 * np.power(1.0 + n, 6)
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                        )
                        + S1
                    )
                )
                / np.power(9.0 + n, 4)
                + (
                    1.6449340668482262
                    * (
                        1 / (1.0 + n)
                        + (
                            13068.0
                            + 26264.0 * (1.0 + n)
                            + 20307.0 * np.power(1.0 + n, 2)
                            + 7840.0 * np.power(1.0 + n, 3)
                            + 1610.0 * np.power(1.0 + n, 4)
                            + 168.0 * np.power(1.0 + n, 5)
                            + 7.0 * np.power(1.0 + n, 6)
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                        )
                        + S1
                    )
                )
                / np.power(9.0 + n, 2)
                - (
                    1.0
                    * (
                        np.power(1.0 + n, -3)
                        + (
                            2.0
                            * (
                                1.22980964256e11
                                + 6.79202212752e11 * (1.0 + n)
                                + 1.762986212232e12 * np.power(1.0 + n, 2)
                                + 2.849976037428e12 * np.power(1.0 + n, 3)
                                + 3.208712317944e12 * np.power(1.0 + n, 4)
                                + 2.66793900071e12 * np.power(1.0 + n, 5)
                                + 1.696140569839e12 * np.power(1.0 + n, 6)
                                + 8.42534361945e11 * np.power(1.0 + n, 7)
                                + 3.31394293594e11 * np.power(1.0 + n, 8)
                                + 1.03973066426e11 * np.power(1.0 + n, 9)
                                + 2.6083138284e10 * np.power(1.0 + n, 10)
                                + 5.220244242e9 * np.power(1.0 + n, 11)
                                + 8.27501148e8 * np.power(1.0 + n, 12)
                                + 1.02512358e8 * np.power(1.0 + n, 13)
                                + 9.709175e6 * np.power(1.0 + n, 14)
                                + 678601.0 * np.power(1.0 + n, 15)
                                + 32970.0 * np.power(1.0 + n, 16)
                                + 994.0 * np.power(1.0 + n, 17)
                                + 14.0 * np.power(1.0 + n, 18)
                            )
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                            * np.power(6.0 + n, 3)
                            * np.power(7.0 + n, 3)
                            * np.power(8.0 + n, 3)
                        )
                        + S1 / np.power(1.0 + n, 2)
                        + (
                            (
                                3.8402064e7
                                + 1.38523392e8 * (1.0 + n)
                                + 2.26358048e8 * np.power(1.0 + n, 2)
                                + 2.20651312e8 * np.power(1.0 + n, 3)
                                + 1.42622963e8 * np.power(1.0 + n, 4)
                                + 6.434848e7 * np.power(1.0 + n, 5)
                                + 2.07774e7 * np.power(1.0 + n, 6)
                                + 4.838848e6 * np.power(1.0 + n, 7)
                                + 807086.0 * np.power(1.0 + n, 8)
                                + 94080.0 * np.power(1.0 + n, 9)
                                + 7280.0 * np.power(1.0 + n, 10)
                                + 336.0 * np.power(1.0 + n, 11)
                                + 7.0 * np.power(1.0 + n, 12)
                            )
                            * (1 / (1.0 + n) + S1)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                            * np.power(8.0 + n, 2)
                        )
                        + S21
                    )
                )
                / np.power(9.0 + n, 2)
            )
        )
        + 0.003243204652309423
        * (
            (
                -1.6449340668482262
                * (
                    1 / (1.0 + n)
                    + (
                        3.0
                        * (
                            342192.0
                            + 781800.0 * (1.0 + n)
                            + 723680.0 * np.power(1.0 + n, 2)
                            + 359100.0 * np.power(1.0 + n, 3)
                            + 105455.0 * np.power(1.0 + n, 4)
                            + 18900.0 * np.power(1.0 + n, 5)
                            + 2030.0 * np.power(1.0 + n, 6)
                            + 120.0 * np.power(1.0 + n, 7)
                            + 3.0 * np.power(1.0 + n, 8)
                        )
                    )
                    / (
                        (2.0 + n)
                        * (3.0 + n)
                        * (4.0 + n)
                        * (5.0 + n)
                        * (6.0 + n)
                        * (7.0 + n)
                        * (8.0 + n)
                        * (9.0 + n)
                        * (10.0 + n)
                    )
                    + S1
                )
            )
            / (10.0 + n)
            + (
                np.power(1.0 + n, -3)
                + (
                    3.0
                    * (
                        3.183431862446899e16
                        + 2.001696918700032e17 * (1.0 + n)
                        + 5.98808681111543e17 * np.power(1.0 + n, 2)
                        + 1.1319310863695514e18 * np.power(1.0 + n, 3)
                        + 1.5156493142882596e18 * np.power(1.0 + n, 4)
                        + 1.5282976372182676e18 * np.power(1.0 + n, 5)
                        + 1.2049970049036114e18 * np.power(1.0 + n, 6)
                        + 7.616938706128154e17 * np.power(1.0 + n, 7)
                        + 3.92747201355673e17 * np.power(1.0 + n, 8)
                        + 1.6722252430665453e17 * np.power(1.0 + n, 9)
                        + 5.92988929379218e16 * np.power(1.0 + n, 10)
                        + 1.7614071211379864e16 * np.power(1.0 + n, 11)
                        + 4.397465867910487e15 * np.power(1.0 + n, 12)
                        + 9.23902782587314e14 * np.power(1.0 + n, 13)
                        + 1.6322843101295e14 * np.power(1.0 + n, 14)
                        + 2.4179602098084e13 * np.power(1.0 + n, 15)
                        + 2.987313035113e12 * np.power(1.0 + n, 16)
                        + 3.05296487914e11 * np.power(1.0 + n, 17)
                        + 2.550145462e10 * np.power(1.0 + n, 18)
                        + 1.711289424e9 * np.power(1.0 + n, 19)
                        + 8.9968697e7 * np.power(1.0 + n, 20)
                        + 3.567374e6 * np.power(1.0 + n, 21)
                        + 100270.0 * np.power(1.0 + n, 22)
                        + 1780.0 * np.power(1.0 + n, 23)
                        + 15.0 * np.power(1.0 + n, 24)
                    )
                )
                / (
                    np.power(2.0 + n, 3)
                    * np.power(3.0 + n, 3)
                    * np.power(4.0 + n, 3)
                    * np.power(5.0 + n, 3)
                    * np.power(6.0 + n, 3)
                    * np.power(7.0 + n, 3)
                    * np.power(8.0 + n, 3)
                    * np.power(9.0 + n, 3)
                    * np.power(10.0 + n, 3)
                )
                + S1 / np.power(1.0 + n, 2)
                + (
                    3.0
                    * (
                        6.7586510592e10
                        + 2.7735912e11 * (1.0 + n)
                        + 5.25886236e11 * np.power(1.0 + n, 2)
                        + 6.098325648e11 * np.power(1.0 + n, 3)
                        + 4.8346372324e11 * np.power(1.0 + n, 4)
                        + 2.77716663e11 * np.power(1.0 + n, 5)
                        + 1.195744907e11 * np.power(1.0 + n, 6)
                        + 3.937668588e10 * np.power(1.0 + n, 7)
                        + 1.0027662147e10 * np.power(1.0 + n, 8)
                        + 1.982481e9 * np.power(1.0 + n, 9)
                        + 3.0344942e8 * np.power(1.0 + n, 10)
                        + 3.560508e7 * np.power(1.0 + n, 11)
                        + 3.141418e6 * np.power(1.0 + n, 12)
                        + 201600.0 * np.power(1.0 + n, 13)
                        + 8880.0 * np.power(1.0 + n, 14)
                        + 240.0 * np.power(1.0 + n, 15)
                        + 3.0 * np.power(1.0 + n, 16)
                    )
                    * (1 / (1.0 + n) + S1)
                )
                / (
                    np.power(2.0 + n, 2)
                    * np.power(3.0 + n, 2)
                    * np.power(4.0 + n, 2)
                    * np.power(5.0 + n, 2)
                    * np.power(6.0 + n, 2)
                    * np.power(7.0 + n, 2)
                    * np.power(8.0 + n, 2)
                    * np.power(9.0 + n, 2)
                    * np.power(10.0 + n, 2)
                )
                + S21
            )
            / (10.0 + n)
            + n
            * (
                -1.0 / np.power(10.0 + n, 5)
                + 1.6449340668482262 / np.power(10.0 + n, 3)
                - 0.8117424252833533 / (10.0 + n)
                - (
                    1.0
                    * (
                        1 / (1.0 + n)
                        + (
                            4.0
                            * (9.0 + 2.0 * (1.0 + n))
                            * (
                                3044.0
                                + 5886.0 * (1.0 + n)
                                + 4299.0 * np.power(1.0 + n, 2)
                                + 1539.0 * np.power(1.0 + n, 3)
                                + 288.0 * np.power(1.0 + n, 4)
                                + 27.0 * np.power(1.0 + n, 5)
                                + np.power(1.0 + n, 6)
                            )
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                            * (9.0 + n)
                        )
                        + S1
                    )
                )
                / np.power(10.0 + n, 4)
                + (
                    1.6449340668482262
                    * (
                        1 / (1.0 + n)
                        + (
                            4.0
                            * (9.0 + 2.0 * (1.0 + n))
                            * (
                                3044.0
                                + 5886.0 * (1.0 + n)
                                + 4299.0 * np.power(1.0 + n, 2)
                                + 1539.0 * np.power(1.0 + n, 3)
                                + 288.0 * np.power(1.0 + n, 4)
                                + 27.0 * np.power(1.0 + n, 5)
                                + np.power(1.0 + n, 6)
                            )
                        )
                        / (
                            (2.0 + n)
                            * (3.0 + n)
                            * (4.0 + n)
                            * (5.0 + n)
                            * (6.0 + n)
                            * (7.0 + n)
                            * (8.0 + n)
                            * (9.0 + n)
                        )
                        + S1
                    )
                )
                / np.power(10.0 + n, 2)
                - (
                    1.0
                    * (
                        np.power(1.0 + n, -3)
                        + (
                            6.0
                            * (
                                2.1452686055424e13
                                + 1.27193972324352e14 * (1.0 + n)
                                + 3.569135825824e14 * np.power(1.0 + n, 2)
                                + 6.28964181904288e14 * np.power(1.0 + n, 3)
                                + 7.79557064653264e14 * np.power(1.0 + n, 4)
                                + 7.2173981400876e14 * np.power(1.0 + n, 5)
                                + 5.17717816384772e14 * np.power(1.0 + n, 6)
                                + 2.94648846212476e14 * np.power(1.0 + n, 7)
                                + 1.35183891860404e14 * np.power(1.0 + n, 8)
                                + 5.0528576648611e13 * np.power(1.0 + n, 9)
                                + 1.5487423206191e13 * np.power(1.0 + n, 10)
                                + 3.905253305568e12 * np.power(1.0 + n, 11)
                                + 8.10278287284e11 * np.power(1.0 + n, 12)
                                + 1.37943606892e11 * np.power(1.0 + n, 13)
                                + 1.9149259574e10 * np.power(1.0 + n, 14)
                                + 2.145327532e9 * np.power(1.0 + n, 15)
                                + 1.90913568e8 * np.power(1.0 + n, 16)
                                + 1.3175883e7 * np.power(1.0 + n, 17)
                                + 679567.0 * np.power(1.0 + n, 18)
                                + 24640.0 * np.power(1.0 + n, 19)
                                + 560.0 * np.power(1.0 + n, 20)
                                + 6.0 * np.power(1.0 + n, 21)
                            )
                        )
                        / (
                            np.power(2.0 + n, 3)
                            * np.power(3.0 + n, 3)
                            * np.power(4.0 + n, 3)
                            * np.power(5.0 + n, 3)
                            * np.power(6.0 + n, 3)
                            * np.power(7.0 + n, 3)
                            * np.power(8.0 + n, 3)
                            * np.power(9.0 + n, 3)
                        )
                        + S1 / np.power(1.0 + n, 2)
                        + (
                            4.0
                            * (
                                6.20783424e8
                                + 2.402913888e9 * (1.0 + n)
                                + 4.261208648e9 * np.power(1.0 + n, 2)
                                + 4.5733464e9 * np.power(1.0 + n, 3)
                                + 3.31344237e9 * np.power(1.0 + n, 4)
                                + 1.713293694e9 * np.power(1.0 + n, 5)
                                + 6.51986769e8 * np.power(1.0 + n, 6)
                                + 1.85551632e8 * np.power(1.0 + n, 7)
                                + 3.9703709e7 * np.power(1.0 + n, 8)
                                + 6.360228e6 * np.power(1.0 + n, 9)
                                + 751317.0 * np.power(1.0 + n, 10)
                                + 63504.0 * np.power(1.0 + n, 11)
                                + 3633.0 * np.power(1.0 + n, 12)
                                + 126.0 * np.power(1.0 + n, 13)
                                + 2.0 * np.power(1.0 + n, 14)
                            )
                            * (1 / (1.0 + n) + S1)
                        )
                        / (
                            np.power(2.0 + n, 2)
                            * np.power(3.0 + n, 2)
                            * np.power(4.0 + n, 2)
                            * np.power(5.0 + n, 2)
                            * np.power(6.0 + n, 2)
                            * np.power(7.0 + n, 2)
                            * np.power(8.0 + n, 2)
                            * np.power(9.0 + n, 2)
                        )
                        + S21
                    )
                )
                / np.power(10.0 + n, 2)
            )
        )
    )
